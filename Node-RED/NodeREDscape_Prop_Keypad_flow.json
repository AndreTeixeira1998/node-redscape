[
    {
        "id": "b1b65bae.b7e59",
        "type": "tab",
        "label": "Magic Dice",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b6aacb7b.0ec3e8",
        "type": "tab",
        "label": "Global",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f1ff6879.b2edc8",
        "type": "tab",
        "label": "Global",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8199fc6a.89ff9",
        "type": "tab",
        "label": "Prop Control",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5d0d7cde.758ba4",
        "type": "tab",
        "label": "Clue Delivery",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ce0b9fb.610bfe",
        "type": "tab",
        "label": "Logging",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f1c56aa4.69aaf8",
        "type": "tab",
        "label": "Global",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a643a892.8ea658",
        "type": "tab",
        "label": "Prop Control",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5536f4c.37c7e8c",
        "type": "tab",
        "label": "Clue Delivery",
        "disabled": false,
        "info": ""
    },
    {
        "id": "27eb49da.3bf276",
        "type": "tab",
        "label": "Audio",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3dae2fcf.ec90a",
        "type": "tab",
        "label": "Lighting",
        "disabled": false,
        "info": ""
    },
    {
        "id": "31a7412f.61a816",
        "type": "tab",
        "label": "Logging",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f5a6f1b2.e1c8b8",
        "type": "tab",
        "label": "Game Flow",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3a6dd7fc.4c7cd",
        "type": "tab",
        "label": "Toggle Switches",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5aec1535.570c94",
        "type": "tab",
        "label": "Keypad",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1e0f02c5.fd2dc5",
        "type": "tab",
        "label": "Clock over HTTP",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2afbfb83.36bbdc",
        "type": "tab",
        "label": "Connect The Wires",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ae55456b.f24e88",
        "type": "tab",
        "label": "Mastermind",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4002af1a.e2087",
        "type": "tab",
        "label": "Reed",
        "disabled": false,
        "info": ""
    },
    {
        "id": "da8a8c10.478418",
        "type": "tab",
        "label": "LCD Display",
        "disabled": false,
        "info": ""
    },
    {
        "id": "79f102f.6e1e8fc",
        "type": "tab",
        "label": "Thermal Printer",
        "disabled": false,
        "info": ""
    },
    {
        "id": "35c48219.d87086",
        "type": "tab",
        "label": "Clue Delivery",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b7c719b.18888e8",
        "type": "tab",
        "label": "Room Display",
        "disabled": false,
        "info": ""
    },
    {
        "id": "a1744621.5dceb",
        "type": "tab",
        "label": "Audio",
        "disabled": false,
        "info": ""
    },
    {
        "id": "858e5f8e.138f",
        "type": "tab",
        "label": "Lighting",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d9c1808b.c8e738",
        "type": "tab",
        "label": "TTS",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1c07f858.b60d1",
        "type": "tab",
        "label": "Reed Switch",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6b4c061.cc1cbf8",
        "type": "tab",
        "label": "Clock",
        "disabled": false,
        "info": ""
    },
    {
        "id": "74b12084.0a8358",
        "type": "subflow",
        "name": "Iterate",
        "in": [
            {
                "x": 220,
                "y": 219,
                "wires": [
                    {
                        "id": "626a4668.5aa3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 454,
                "y": 174,
                "wires": [
                    {
                        "id": "626a4668.5aa3",
                        "port": 0
                    }
                ]
            },
            {
                "x": 455,
                "y": 259,
                "wires": [
                    {
                        "id": "626a4668.5aa3",
                        "port": 1
                    }
                ]
            }
        ]
    },
    {
        "id": "125f6c81.60151b",
        "type": "mqtt-broker",
        "name": "MQTT Server",
        "broker": "localhost",
        "port": "1883",
        "tls": "",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "9b6e4743.cfa1a8",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Magic Dice",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 32,
                "cx": 6,
                "cy": 32,
                "px": 6,
                "py": 6
            }
        }
    },
    {
        "id": "f8f0646.92b5f18",
        "type": "ui_group",
        "name": "Default",
        "tab": "33da53f2.68fc04",
        "order": 1,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "33da53f2.68fc04",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7ae698e1.caa628",
        "type": "ui_group",
        "name": "Game Status",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "86cb38ff.d43fd8",
        "type": "ui_group",
        "name": "Log",
        "tab": "",
        "order": 9,
        "disp": true,
        "width": 30,
        "collapse": false
    },
    {
        "id": "1bea154d.6e5753",
        "type": "ui_group",
        "name": "Puzzles",
        "tab": "",
        "order": 7,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "2f506a2a.251ade",
        "type": "ui_group",
        "name": "Clue Delivery",
        "tab": "",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ec42a799.3b6ba",
        "type": "ui_group",
        "name": "Audio",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "8e21c167.dfd61",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "ec42a799.3b6ba",
        "order": 3,
        "width": 6,
        "height": 1
    },
    {
        "id": "7722f11b.173e1",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "86cb38ff.d43fd8",
        "order": 2,
        "width": 22,
        "height": 1
    },
    {
        "id": "254d73be.b35414",
        "type": "ui_group",
        "name": "Timer",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "981b057b.23431",
        "type": "ui_group",
        "name": "Toggle Switches",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "abfec575.582408",
        "type": "ui_group",
        "name": "Keypad",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d4c8bf08.199fb8",
        "type": "ui_group",
        "name": "Main",
        "tab": "",
        "order": 5,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "95299128.5aff58",
        "type": "ui_group",
        "name": "Puzzel One",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4542a057.6e753",
        "type": "ui_group",
        "name": "Puzzel Two",
        "tab": "",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a212903c.f0a5a",
        "type": "ui_group",
        "name": "Main",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "fa5e432d.2e2188",
        "type": "ui_group",
        "name": "Connect the Wires",
        "tab": "",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "392b41a4.6f5b0e",
        "type": "serial-port",
        "serialport": "COM3",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "\\r\\n",
        "responsetimeout": "10000"
    },
    {
        "id": "164b17da.d41f48",
        "type": "ui_group",
        "name": "Temp",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "10"
    },
    {
        "id": "d7c660f.c5c4b2",
        "type": "ui_group",
        "name": "Cover Up",
        "tab": "",
        "order": 5,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "638e816b.14e018",
        "type": "serial-port",
        "serialport": "COM9",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "3e82fb86.ec47cc",
        "type": "ui_group",
        "name": "Printer",
        "tab": "",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a74dd9aa.6aa438",
        "type": "serial-port",
        "serialport": "COM17",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "29461271.a5e0fe",
        "type": "ui_group",
        "name": "Sound and Lighting",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1cd4a229.997266",
        "type": "serial-port",
        "serialport": "COM14",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "2c4f4f62.53e9b8",
        "type": "serial-port",
        "serialport": "COM18",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "24712d66.100cba",
        "type": "serial-port",
        "serialport": "COM5",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "c971d13f.20f318",
        "type": "ui_group",
        "name": "Group 9",
        "tab": "",
        "order": 3,
        "disp": true,
        "width": 6
    },
    {
        "id": "4e976676.9e1538",
        "type": "websocket-listener",
        "path": "/ws/input",
        "wholemsg": "false"
    },
    {
        "id": "4f81e229.15a5a4",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "99eb9057.fa72b",
        "type": "serial-port",
        "serialport": "COM4",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "d7190883.1e7d28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "29461271.a5e0fe",
        "order": 5,
        "width": 6,
        "height": 1
    },
    {
        "id": "2abb8b8d.c333cc",
        "type": "ui_group",
        "name": "Analogue",
        "tab": "",
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "ac933642.7db91",
        "type": "ui_group",
        "name": "S1",
        "tab": "",
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "63fe81ad.6223d",
        "type": "ui_group",
        "name": "S1",
        "tab": "",
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "50bce1a4.72ca4",
        "type": "ui_group",
        "name": "Mastermind",
        "tab": "",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "69d9e80c.614dd",
        "type": "serial-port",
        "serialport": "COM8",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "10e9b975.73e97f",
        "type": "ui_group",
        "name": "Game Status",
        "tab": "bdbbdb52.9e17",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "9b905b5b.27729",
        "type": "ui_group",
        "name": "Log",
        "tab": "bdbbdb52.9e17",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "bdbbdb52.9e17",
        "type": "ui_tab",
        "name": "Room One",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5b9d88c6.db8bf",
        "type": "ui_tab",
        "name": "Room One",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4ddbbcc2.03d69c",
        "type": "ui_group",
        "name": "Game Status",
        "tab": "5b9d88c6.db8bf",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "94151922.0a2888",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.1.158",
        "port": "1883",
        "clientid": "test-client",
        "usetls": false,
        "compatmode": true,
        "keepalive": "120",
        "cleansession": true,
        "birthTopic": "sensors/connected/test-client",
        "birthQos": "0",
        "birthRetain": "true",
        "birthPayload": "1",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "sensors/connected/test-client",
        "willQos": "0",
        "willRetain": "true",
        "willPayload": "0"
    },
    {
        "id": "e72d34e6.eb9cb",
        "type": "ui_group",
        "name": "Control",
        "tab": "6e8307c0.cb61a",
        "order": 1,
        "disp": true,
        "width": "4",
        "collapse": false
    },
    {
        "id": "e40ecc8a.17c4f8",
        "type": "ui_group",
        "name": "Status",
        "tab": "6e8307c0.cb61a",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6e8307c0.cb61a",
        "type": "ui_tab",
        "name": "Logger",
        "icon": "dashboard"
    },
    {
        "id": "c604fdc6.af02b",
        "type": "ui_group",
        "name": "Custom Message",
        "tab": "5b9d88c6.db8bf",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "77f4703b.474898",
        "type": "ui_group",
        "name": "Log",
        "tab": "5b9d88c6.db8bf",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "de8b10f7.dae8b8",
        "type": "ui_group",
        "name": "Props",
        "tab": "5b9d88c6.db8bf",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "807497bd.b42b68",
        "type": "ui_group",
        "name": "Hints",
        "tab": "5b9d88c6.db8bf",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "27063042.652ff",
        "type": "ui_tab",
        "name": "testing",
        "icon": "dashboard"
    },
    {
        "id": "2b4dbd1c.93ed72",
        "type": "ui_tab",
        "name": "Room One",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "45e2c4e.b46d43c",
        "type": "ui_group",
        "name": "Game Status",
        "tab": "2b4dbd1c.93ed72",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e24bfb7c.315d5",
        "type": "ui_group",
        "name": "Custom Message",
        "tab": "2b4dbd1c.93ed72",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "81e6573e.4fe518",
        "type": "ui_group",
        "name": "Log",
        "tab": "2b4dbd1c.93ed72",
        "order": 7,
        "disp": true,
        "width": 30,
        "collapse": false
    },
    {
        "id": "5b666055.8601",
        "type": "ui_group",
        "name": "Puzzles",
        "tab": "2b4dbd1c.93ed72",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "f69627a5.565c98",
        "type": "ui_group",
        "name": "Hints",
        "tab": "2b4dbd1c.93ed72",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "3f238e3f.4dcf7a",
        "type": "ui_group",
        "name": "Video",
        "tab": "2b4dbd1c.93ed72",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f5bca747.818748",
        "type": "ui_group",
        "name": "Audio",
        "tab": "2b4dbd1c.93ed72",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "92a95135.50b688",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "f5bca747.818748",
        "order": 3,
        "width": 6,
        "height": 1
    },
    {
        "id": "23bd8e0f.517bea",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "81e6573e.4fe518",
        "order": 3,
        "width": 22,
        "height": 1
    },
    {
        "id": "bfff2c01.02fe6",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "70e5d1d.359a23",
        "type": "ui_group",
        "name": "Game Status",
        "tab": "bfff2c01.02fe6",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "46d54615.b8f8e8",
        "type": "ui_group",
        "name": "Custom Message",
        "tab": "bfff2c01.02fe6",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "cf9d3a7b.b05798",
        "type": "ui_group",
        "name": "Log",
        "tab": "bfff2c01.02fe6",
        "order": 9,
        "disp": true,
        "width": 30,
        "collapse": false
    },
    {
        "id": "7c6a4658.810af8",
        "type": "ui_group",
        "name": "Puzzles",
        "tab": "bfff2c01.02fe6",
        "order": 7,
        "disp": false,
        "width": "12",
        "collapse": false
    },
    {
        "id": "6af81f74.7cf5e8",
        "type": "ui_group",
        "name": "Hints",
        "tab": "bfff2c01.02fe6",
        "order": 8,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "da8ca63f.5e4b38",
        "type": "ui_group",
        "name": "Clue Delivery",
        "tab": "bfff2c01.02fe6",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "f7fbc697.bfeb58",
        "type": "ui_group",
        "name": "Audio",
        "tab": "bfff2c01.02fe6",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "fc6114b2.66f64",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "f7fbc697.bfeb58",
        "order": 3,
        "width": 6,
        "height": 1
    },
    {
        "id": "b15ea345.b7ef7",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "cf9d3a7b.b05798",
        "order": 2,
        "width": 22,
        "height": 1
    },
    {
        "id": "fe2df76a.72ff1",
        "type": "ui_tab",
        "name": "Room",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b1c5a111.b0ba08",
        "type": "ui_group",
        "name": "Timer",
        "tab": "fe2df76a.72ff1",
        "order": 1,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "7d66f574.b154cc",
        "type": "ui_tab",
        "name": "Puzzle Status Monitor",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "176fd05d.aa8588",
        "type": "ui_group",
        "name": "Toggle Switches",
        "tab": "7d66f574.b154cc",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "dd53b5d1.ca999",
        "type": "ui_group",
        "name": "Keypad",
        "tab": "7d66f574.b154cc",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d4775169.bf997",
        "type": "ui_group",
        "name": "Main",
        "tab": "",
        "order": 5,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d982e83a.4c70e8",
        "type": "ui_group",
        "name": "Puzzel One",
        "tab": "",
        "order": 2,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ca4b06fe.cfaa7",
        "type": "ui_group",
        "name": "Puzzel Two",
        "tab": "",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4e36555d.c72644",
        "type": "ui_group",
        "name": "Main",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "161a09b.036e1f6",
        "type": "ui_group",
        "name": "Connect the Wires",
        "tab": "7d66f574.b154cc",
        "order": 3,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "fd237371.eea2d8",
        "type": "serial-port",
        "serialport": "COM3",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "\\r\\n",
        "responsetimeout": "10000"
    },
    {
        "id": "b02e0eaa.0b06a",
        "type": "ui_group",
        "name": "Temp",
        "tab": "",
        "order": 1,
        "disp": false,
        "width": "10"
    },
    {
        "id": "db28e499.24fe08",
        "type": "ui_group",
        "name": "Cover Up",
        "tab": "7d66f574.b154cc",
        "order": 5,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "95729381.aa63e",
        "type": "serial-port",
        "serialport": "COM9",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "a8157deb.70e9b",
        "type": "ui_group",
        "name": "Printer",
        "tab": "bfff2c01.02fe6",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "533f6c99.b8af4c",
        "type": "serial-port",
        "serialport": "COM17",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "d36d4324.1067f8",
        "type": "ui_group",
        "name": "Sound and Lighting",
        "tab": "3926ef5e.187228",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d22f878e.fc259",
        "type": "serial-port",
        "serialport": "COM14",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "6b19e0ae.df542",
        "type": "serial-port",
        "serialport": "COM18",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "fff6b.5d9380958",
        "type": "serial-port",
        "serialport": "COM6",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "3d55e429.707bbc",
        "type": "ui_group",
        "name": "Group 9",
        "tab": "bfff2c01.02fe6",
        "order": 3,
        "disp": true,
        "width": 6
    },
    {
        "id": "c47f32e.2f88d5",
        "type": "websocket-listener",
        "z": "b7c719b.18888e8",
        "path": "/ws/simple",
        "wholemsg": "false"
    },
    {
        "id": "a0d5216b.5d6a08",
        "type": "websocket-listener",
        "path": "/ws/input",
        "wholemsg": "false"
    },
    {
        "id": "b9a603a9.4c8c9",
        "type": "ui_tab",
        "name": "Logging",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "eed1a8a6.8d8878",
        "type": "ui_group",
        "name": "Default",
        "tab": "b9a603a9.4c8c9",
        "order": 1,
        "disp": false,
        "width": "30",
        "collapse": false
    },
    {
        "id": "7f6727ec.9d40c8",
        "type": "serial-port",
        "serialport": "COM4",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "3926ef5e.187228",
        "type": "ui_tab",
        "name": "Lighting",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cc869c0c.eed28",
        "type": "ui_spacer",
        "name": "spacer",
        "group": "d36d4324.1067f8",
        "order": 5,
        "width": 6,
        "height": 1
    },
    {
        "id": "45afec4a.21f654",
        "type": "ui_group",
        "name": "Analogue",
        "tab": "7472831c.1793b4",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false
    },
    {
        "id": "7472831c.1793b4",
        "type": "ui_tab",
        "name": "Clock",
        "icon": "dashboard",
        "order": 6
    },
    {
        "id": "119e183e.0f30e8",
        "type": "ui_group",
        "name": "S1",
        "tab": "ad530647.e09cf8",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ad530647.e09cf8",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 7
    },
    {
        "id": "fd8c92ec.8d7cf",
        "type": "ui_group",
        "name": "S1",
        "tab": "36310e6f.4ade5a",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "36310e6f.4ade5a",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "order": 8
    },
    {
        "id": "a023345e.023238",
        "type": "ui_link",
        "name": "Link 9",
        "icon": "open_in_browser",
        "target": "newtab",
        "order": 9
    },
    {
        "id": "31fb9f8c.1b1b7",
        "type": "ui_group",
        "name": "Mastermind",
        "tab": "7d66f574.b154cc",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false
    },
    {
        "id": "626a4668.5aa3",
        "type": "function",
        "z": "74b12084.0a8358",
        "name": "Iterate",
        "func": "//Node has 2 outputs - 1 for itteration and 1 for completion\nvar nextObj, out;\nvar itt = msg.iterationInfo;\n\n\n//If the iterating has not yet begun set up the iteration metadata in the msg\nif (typeof itt === 'undefined') {\n    //Make sure payload is an array\n    if( Object.prototype.toString.call(msg.payload) !== '[object Array]' ) {\n       msg.payload = [msg.payload];\n    }\n\n    msg.iterationInfo = itt = {};\n    itt.index = -1;\n    itt.inArray = msg.payload;\n    itt.outArray = [];\n\n//Otherwise just push the input to the output array\n} else {\n    itt.outArray.push(msg.payload)\n}\n\n//Goto next object\nitt.index ++;\n\n//If there are stil objects left to iterate goto the next one in the original array\nif (itt.index < itt.inArray.length) {\n    nextObj = msg;\n    msg.payload = itt.inArray[itt.index];\n\n//otherwise pass the out array as the payload\n} else {\n    out = msg;\n    msg.payload = itt.outArray;\n    delete msg.iterationInfo;\n}\n\nreturn [nextObj, out];",
        "outputs": "2",
        "noerr": 0,
        "x": 347,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "9c30e672.a934a",
        "type": "mqtt in",
        "z": "b1b65bae.b7e59",
        "name": "",
        "topic": "Dice/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "125f6c81.60151b",
        "x": 90,
        "y": 380,
        "wires": [
            [
                "823ff78e.3ce17"
            ]
        ]
    },
    {
        "id": "6c9e9f11.462a2",
        "type": "uibuilder",
        "z": "b1b65bae.b7e59",
        "name": "",
        "topic": "",
        "url": "uibuilder",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "showfolder": false,
        "useSecurity": false,
        "sessionLength": "",
        "tokenAutoExtend": false,
        "x": 420,
        "y": 560,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "823ff78e.3ce17",
        "type": "function",
        "z": "b1b65bae.b7e59",
        "name": "Add image file extension",
        "func": "msg.payload = \"/\" + msg.payload + \".svg\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 380,
        "wires": [
            [
                "c884c580.3b57"
            ]
        ]
    },
    {
        "id": "c884c580.3b57",
        "type": "switch",
        "z": "b1b65bae.b7e59",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Dice/1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Dice/2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Dice/3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 530,
        "y": 380,
        "wires": [
            [
                "622cca40.873734"
            ],
            [
                "c44e3269.e55da"
            ],
            [
                "23294068.9616"
            ]
        ]
    },
    {
        "id": "622cca40.873734",
        "type": "change",
        "z": "b1b65bae.b7e59",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dice1",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 380,
        "wires": [
            [
                "32657d7a.182af2"
            ]
        ]
    },
    {
        "id": "c44e3269.e55da",
        "type": "change",
        "z": "b1b65bae.b7e59",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dice2",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 420,
        "wires": [
            [
                "f4f6eadf.6a427"
            ]
        ]
    },
    {
        "id": "b204c74d.dce7c8",
        "type": "comment",
        "z": "b1b65bae.b7e59",
        "name": "Run the built-in MQTT server",
        "info": "",
        "x": 160,
        "y": 60,
        "wires": []
    },
    {
        "id": "9e7d8620.625a38",
        "type": "comment",
        "z": "b1b65bae.b7e59",
        "name": "Listen to messages published to the server",
        "info": "",
        "x": 210,
        "y": 340,
        "wires": []
    },
    {
        "id": "9db1e757.7b3688",
        "type": "comment",
        "z": "b1b65bae.b7e59",
        "name": "Which dice was updated?",
        "info": "",
        "x": 590,
        "y": 340,
        "wires": []
    },
    {
        "id": "7d46d77d.b89c2",
        "type": "comment",
        "z": "b1b65bae.b7e59",
        "name": "Update/store latest values",
        "info": "",
        "x": 850,
        "y": 340,
        "wires": []
    },
    {
        "id": "c7f920a2.370f78",
        "type": "comment",
        "z": "b1b65bae.b7e59",
        "name": "Display results on webpage",
        "info": "",
        "x": 180,
        "y": 520,
        "wires": []
    },
    {
        "id": "f30e92c8.59a68",
        "type": "inject",
        "z": "b1b65bae.b7e59",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "23c0124.0c4316e"
            ]
        ]
    },
    {
        "id": "23c0124.0c4316e",
        "type": "change",
        "z": "b1b65bae.b7e59",
        "name": "Set starting values",
        "rules": [
            {
                "t": "set",
                "p": "dice1",
                "pt": "global",
                "to": "/Default.svg",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "dice2",
                "pt": "global",
                "to": "/Default.svg",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "dice3",
                "pt": "global",
                "to": "/Default.svg",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 220,
        "wires": [
            [
                "e5bb2b5e.8c5478"
            ]
        ]
    },
    {
        "id": "31aeec81.e890fc",
        "type": "change",
        "z": "b1b65bae.b7e59",
        "name": "Retrieve latest state",
        "rules": [
            {
                "t": "set",
                "p": "dice1",
                "pt": "msg",
                "to": "dice1",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "dice2",
                "pt": "msg",
                "to": "dice2",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "dice3",
                "pt": "msg",
                "to": "dice3",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 560,
        "wires": [
            [
                "6c9e9f11.462a2"
            ]
        ]
    },
    {
        "id": "e5bb2b5e.8c5478",
        "type": "link out",
        "z": "b1b65bae.b7e59",
        "name": "",
        "links": [
            "f63bf4d8.d1348"
        ],
        "x": 435,
        "y": 220,
        "wires": []
    },
    {
        "id": "f63bf4d8.d1348",
        "type": "link in",
        "z": "b1b65bae.b7e59",
        "name": "",
        "links": [
            "e5bb2b5e.8c5478",
            "32657d7a.182af2",
            "f4f6eadf.6a427",
            "9bf12458.6e5768"
        ],
        "x": 75,
        "y": 560,
        "wires": [
            [
                "31aeec81.e890fc"
            ]
        ]
    },
    {
        "id": "32657d7a.182af2",
        "type": "link out",
        "z": "b1b65bae.b7e59",
        "name": "",
        "links": [
            "f63bf4d8.d1348"
        ],
        "x": 995,
        "y": 380,
        "wires": []
    },
    {
        "id": "f4f6eadf.6a427",
        "type": "link out",
        "z": "b1b65bae.b7e59",
        "name": "",
        "links": [
            "f63bf4d8.d1348"
        ],
        "x": 995,
        "y": 420,
        "wires": []
    },
    {
        "id": "a18244fa.4893f",
        "type": "comment",
        "z": "b1b65bae.b7e59",
        "name": "Initialise variables",
        "info": "",
        "x": 130,
        "y": 180,
        "wires": []
    },
    {
        "id": "23294068.9616",
        "type": "change",
        "z": "b1b65bae.b7e59",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dice3",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 460,
        "wires": [
            [
                "9bf12458.6e5768"
            ]
        ]
    },
    {
        "id": "9bf12458.6e5768",
        "type": "link out",
        "z": "b1b65bae.b7e59",
        "name": "",
        "links": [
            "f63bf4d8.d1348"
        ],
        "x": 995,
        "y": 460,
        "wires": []
    },
    {
        "id": "ecf2fd9.43363",
        "type": "aedes broker",
        "z": "b1b65bae.b7e59",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_port": null,
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 130,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "16568b51.ea8c1d",
        "type": "serial in",
        "z": "b1b65bae.b7e59",
        "name": "",
        "serial": "24712d66.100cba",
        "x": 660,
        "y": 620,
        "wires": [
            [
                "a95e8b1e.f3bd4"
            ]
        ]
    },
    {
        "id": "a95e8b1e.f3bd4",
        "type": "debug",
        "z": "b1b65bae.b7e59",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 580,
        "wires": []
    },
    {
        "id": "fdfa48f3.60cdd",
        "type": "mosca in",
        "z": "b6aacb7b.0ec3e8",
        "mqtt_port": "1883",
        "mqtt_ws_port": "8080",
        "name": "MOSCA",
        "username": "",
        "password": "",
        "dburl": "",
        "x": 145,
        "y": 446,
        "wires": [
            []
        ]
    },
    {
        "id": "988c2ed8.20d418",
        "type": "ui_template",
        "z": "b6aacb7b.0ec3e8",
        "d": true,
        "group": "",
        "name": "Dark theme CSS-style overrides",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n/*\nUsed for dynamically amending menu/tab items\n:root {\n    --main-color: \"blue\";\n}\n[aria-label~=\"Your tab Name\"] {\n    background-color: var(--main-color,green);\n}\n\n[aria-label~=\"Home\"] + div > p::after {\n    content: 'woot' ;\n*/\n\nbody.nr-dashboard-theme {\n background-color: #333333;\n font-family: Calibri;\n}\nbutton, html, input, select, textarea {\n font-family: Calibri;\n}\nbody.nr-dashboard-theme md-content md-card {\n background-color: #33333300;\n color: #d0d0d0;\n}\n\nbody.nr-dashboard-theme md-toolbar {\n background-image: linear-gradient(to right, #404040, #737373);\n box-shadow: 0px 1px 20px #0000008a;\n}\n.nr-dashboard-theme ui-card-panel {\n background-image: linear-gradient(to bottom right, #404040, #737373);\n border: 1px solid #555555;\n box-shadow: 0 0 20px #00000066;\n}\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n color: #2eb82e;\n text-shadow: 0 0 2px black;\n}\n\n.nr-dashboard-theme .nr-dashboard-form-button {\n background-image: linear-gradient(to bottom right, #8a8a8a6e, #00000070);\n background-color: #00ad03;\n color: #d0d0d0;\n text-shadow: 0 0 2px #525252;\n border-radius:6px;\n}\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n background-image: linear-gradient(to bottom right, #8a8a8a6e, #00000070);\n background-color: #00ad03;\n color: #d0d0d0;\n text-shadow: 0 0 2px #525252;\n border-radius:6px;\n}\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n background-color: #00de00;\n}\n\n.nr-dashboard-theme .nr-dashboard-switch md-switch .md-thumb {\n background-image: linear-gradient(to bottom right, #48b349, #115009);\n}\n.nr-dashboard-button .md-button {\n box-shadow: 0 1px 3px 0 rgba(0,0,0,.26)!important;\n width: 100%!important;\n height: 100%!important;\n margin: 0!important;\n min-width: 0!important;\n min-height: 0!important;\n}\n.nr-dashboard-theme .nr-dashboard-slider .md-thumb:after {\n background-image: linear-gradient(to bottom right, #48b349, #115009);\n border-style: none;\n}\n.nr-dashboard-theme .nr-dashboard-numeric .value {\n background-color: #33333300;\n color:#d0d0d0;\n}\n\n.nr-dashboard-numeric .value {\n font-weight: 700;\n text-align: center;\n border: 0;\n}\n\n.nr-dashboard-form {\n display: inline-block;\n width: 100%;\n overflow-y: visible;\n}\n#SETTINGS_TEATED_cards {\n min-height: 260px;\n}\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "global",
        "x": 727,
        "y": 439,
        "wires": [
            []
        ],
        "info": "CSS Style overrides to the Node-RED Dark theme.\n\nFrom the Dashboard node information panel (View->Dashboard), select\n - Site: Options -> Node-RED theme everywhere\n - Theme: Style -> Dark"
    },
    {
        "id": "114f432c.a4aced",
        "type": "link in",
        "z": "b6aacb7b.0ec3e8",
        "name": "Publish MQTT",
        "links": [
            "a8a08a0d.44db4",
            "e2f84272.f3b3d8"
        ],
        "x": 227.5,
        "y": 421,
        "wires": [
            [
                "3220cef9.a725e2"
            ]
        ]
    },
    {
        "id": "3220cef9.a725e2",
        "type": "mqtt out",
        "z": "b6aacb7b.0ec3e8",
        "name": "To MQTT",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "125f6c81.60151b",
        "x": 331,
        "y": 421,
        "wires": []
    },
    {
        "id": "4688dca2.3cb27c",
        "type": "mqtt in",
        "z": "b6aacb7b.0ec3e8",
        "name": "From MQTT",
        "topic": "/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "125f6c81.60151b",
        "x": 282,
        "y": 469,
        "wires": [
            [
                "95c4eab6.add03"
            ]
        ]
    },
    {
        "id": "95c4eab6.add03",
        "type": "link out",
        "z": "b6aacb7b.0ec3e8",
        "name": "Incoming MQTT",
        "links": [
            "88d0a434.82e6e8"
        ],
        "x": 386.5,
        "y": 469,
        "wires": []
    },
    {
        "id": "9cffc441.5117d8",
        "type": "ui_button",
        "z": "b6aacb7b.0ec3e8",
        "name": "",
        "group": "10e9b975.73e97f",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "icon": "",
        "payload": "{     \"payload\": \"on\",     \"timeout\": 600,     \"warning\": 30 }",
        "payloadType": "json",
        "topic": "/game",
        "x": 109.5,
        "y": 41,
        "wires": [
            [
                "d86517a5.9e00c"
            ]
        ]
    },
    {
        "id": "6a5f9833.12cf",
        "type": "ui_button",
        "z": "b6aacb7b.0ec3e8",
        "name": "",
        "group": "10e9b975.73e97f",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "{     \"payload\": \"cancel\" }",
        "payloadType": "json",
        "topic": "/game",
        "x": 109.5,
        "y": 80,
        "wires": [
            [
                "cf897d5d.1fceb8"
            ]
        ]
    },
    {
        "id": "6c1068f9.361a7",
        "type": "ui_button",
        "z": "b6aacb7b.0ec3e8",
        "name": "",
        "group": "10e9b975.73e97f",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "icon": "",
        "payload": "{\"timeout\": 600 }",
        "payloadType": "json",
        "topic": "/game",
        "x": 108.5,
        "y": 118,
        "wires": [
            [
                "c2a827f0.fe76f8"
            ]
        ]
    },
    {
        "id": "857aab5.1101cd8",
        "type": "inject",
        "z": "b6aacb7b.0ec3e8",
        "name": "Tick",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 132.5,
        "y": 247,
        "wires": [
            [
                "c1cc4542.f2db28"
            ]
        ]
    },
    {
        "id": "4ffff8d6.f2b6e",
        "type": "change",
        "z": "b6aacb7b.0ec3e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gameState",
                "pt": "global",
                "to": "playing",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 405.5,
        "y": 41,
        "wires": [
            []
        ]
    },
    {
        "id": "90201714.c95858",
        "type": "change",
        "z": "b6aacb7b.0ec3e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gameState",
                "pt": "global",
                "to": "stopped",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 407,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d86517a5.9e00c",
        "type": "switch",
        "z": "b6aacb7b.0ec3e8",
        "name": "",
        "property": "gameState",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "playing",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 231.5,
        "y": 41,
        "wires": [
            [
                "4ffff8d6.f2b6e"
            ]
        ]
    },
    {
        "id": "cf897d5d.1fceb8",
        "type": "switch",
        "z": "b6aacb7b.0ec3e8",
        "name": "",
        "property": "gameState",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "stopped",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 231,
        "y": 81,
        "wires": [
            [
                "90201714.c95858"
            ]
        ]
    },
    {
        "id": "c1cc4542.f2db28",
        "type": "function",
        "z": "b6aacb7b.0ec3e8",
        "name": "Update Game Timer",
        "func": "// The current timestamp is injected at the start of the flow\nvar currentTime = msg.payload;\nvar lastTickTime = global.get(\"lastTickTime\")||currentTime;\nvar timeRemaining = global.get(\"timeRemaining\")||0;\nvar gameState = global.get(\"gameState\");\n\nif(gameState == \"playing\") {\n    // Reduce the time remaining based on the amount of time\n    // that has elapsed since the last tick count\n    timeRemaining -= (currentTime - lastTickTime);\n        \n    // Update the global variable\n    global.set(\"timeRemaining\", timeRemaining);\n\n    // Update the msg to carry formatted string        \n    msg.timeRemaining = timeRemaining;//(new Date(timeRemaining)).toUTCString().match(/(\\d\\d:\\d\\d:\\d\\d)/)[0];\n\n    if(timeRemaining < 60000) {\n        msg.timeColour = \"red\";\n    }\n    else {\n        msg.timeColour = \"limegreen\";\n    }\n    \n    global.set(\"lastTickTime\", currentTime);\n    \n    // Only need to update UI is timeRemaining has changed\n    return msg;\n}\n\nglobal.set(\"lastTickTime\", currentTime);\nnode.status({fill:\"green\",shape:\"dot\",text:timeRemaining});",
        "outputs": 1,
        "noerr": 0,
        "x": 315,
        "y": 247,
        "wires": [
            [
                "3971a608.c5c3fa"
            ]
        ]
    },
    {
        "id": "c2a827f0.fe76f8",
        "type": "change",
        "z": "b6aacb7b.0ec3e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "timeRemaining",
                "pt": "global",
                "to": "3599999",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "timeRemaining",
                "pt": "msg",
                "to": "3599999",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "gameState",
                "pt": "global",
                "to": "stopped",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 259.5,
        "y": 118,
        "wires": [
            [
                "3971a608.c5c3fa"
            ]
        ]
    },
    {
        "id": "e00cc5e6.0b5e1",
        "type": "ui_template",
        "z": "b6aacb7b.0ec3e8",
        "group": "10e9b975.73e97f",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div layout=\"row\" layout-align=\"space-between\">   <!-- Possible layout-aligns include \"start center\" -->\n<span class=\"label\">\n    Time Remaining <i class=\"fa fa-clock-o fa-2x nr-dashboard-ok\"></i>\n</span> \n    <span class=\"value\" style=\"color:{{msg.timeColour}}; font-size:xx-large;\">\n        {{msg.formattedTimeRemaining}}\n    </span>\n</div>\n<!--<i class=\"fa fa-clock-o fa-2x nr-dashboard-ok\"></i>\n<span ng-bind-html=\"msg.formattedTimeRemaining\" style=\"color:{{msg.timeColour}};\"></span>\n-->\n<!--\n<span style=\"color:{{msg.timeColour}};\">\n    {{msg.formattedTimeRemaining}}\n</span>\n-->",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 693,
        "y": 189,
        "wires": [
            []
        ]
    },
    {
        "id": "24783461.e4deac",
        "type": "ui_text",
        "z": "b6aacb7b.0ec3e8",
        "d": true,
        "group": "10e9b975.73e97f",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Time Remaining",
        "label": "Time Remaining <i class=\"fa fa-clock-o fa-2x nr-dashboard-ok\"></i>",
        "format": "<span style=\"font-size:xx-large; color:{{msg.timeColour}};\">{{msg.formattedTimeRemaining}}</span>",
        "layout": "row-left",
        "x": 708.5,
        "y": 127,
        "wires": []
    },
    {
        "id": "3971a608.c5c3fa",
        "type": "function",
        "z": "b6aacb7b.0ec3e8",
        "name": "[s] to [hh:mm:ss]",
        "func": "// Message from preceeding node is in seconds - should be less than 24 hours (86400 seconds).\nvar time = (new Date(msg.timeRemaining)).toUTCString().match(/(\\d\\d:\\d\\d:\\d\\d)/)[0];\n// Pass on the string to the next node, what ever that may be. (groov Data Store for example).\nmsg.formattedTimeRemaining = time;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 489,
        "y": 167,
        "wires": [
            [
                "24783461.e4deac",
                "e00cc5e6.0b5e1"
            ]
        ]
    },
    {
        "id": "6608e843.6b5498",
        "type": "file",
        "z": "b6aacb7b.0ec3e8",
        "name": "",
        "filename": "c:\\PropControl\\log.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 755.5,
        "y": 664,
        "wires": [
            []
        ]
    },
    {
        "id": "2150c62b.fcab4a",
        "type": "ui_switch",
        "z": "b6aacb7b.0ec3e8",
        "name": "",
        "label": "Logging",
        "tooltip": "",
        "group": "9b905b5b.27729",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 570.5,
        "y": 593,
        "wires": [
            [
                "72a17d38.ae7f74"
            ]
        ]
    },
    {
        "id": "d9171867.323cb8",
        "type": "mqtt in",
        "z": "b6aacb7b.0ec3e8",
        "name": "",
        "topic": "/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "125f6c81.60151b",
        "x": 205.5,
        "y": 664,
        "wires": [
            [
                "46427863.2524b8"
            ]
        ]
    },
    {
        "id": "72a17d38.ae7f74",
        "type": "change",
        "z": "b6aacb7b.0ec3e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "logging",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 763.5,
        "y": 593,
        "wires": [
            []
        ]
    },
    {
        "id": "46427863.2524b8",
        "type": "switch",
        "z": "b6aacb7b.0ec3e8",
        "name": "",
        "property": "logging",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 356.5,
        "y": 664,
        "wires": [
            [
                "dc2382cf.5de348"
            ]
        ]
    },
    {
        "id": "31b52466.5cd084",
        "type": "change",
        "z": "b6aacb7b.0ec3e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 387.5,
        "y": 593,
        "wires": [
            [
                "2150c62b.fcab4a"
            ]
        ]
    },
    {
        "id": "dc2382cf.5de348",
        "type": "function",
        "z": "b6aacb7b.0ec3e8",
        "name": "Create Log Entry",
        "func": "var d = new Date();\nvar t = d.getTime();\n\nvar filename = \"log.txt\";\n\nvar payload = {\"time\":t,\"payload\":msg.payload};\nmsg.payload = JSON.stringify(payload);\n\nmsg.filename = \"/PropControl/\" + filename;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 529.5,
        "y": 664,
        "wires": [
            [
                "6608e843.6b5498"
            ]
        ]
    },
    {
        "id": "bae7a880.54bb18",
        "type": "inject",
        "z": "b6aacb7b.0ec3e8",
        "name": "On Startup",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "Initialise",
        "payload": "",
        "payloadType": "date",
        "x": 581.5,
        "y": 292,
        "wires": [
            [
                "e6b0eb65.728c2"
            ]
        ]
    },
    {
        "id": "e6b0eb65.728c2",
        "type": "link out",
        "z": "b6aacb7b.0ec3e8",
        "name": "OnStartup",
        "links": [
            "e94e33b4.600538"
        ],
        "x": 746.5,
        "y": 292,
        "wires": []
    },
    {
        "id": "e94e33b4.600538",
        "type": "link in",
        "z": "b6aacb7b.0ec3e8",
        "name": "",
        "links": [
            "e6b0eb65.728c2"
        ],
        "x": 202.5,
        "y": 594,
        "wires": [
            [
                "31b52466.5cd084"
            ]
        ]
    },
    {
        "id": "8a26bb6d.07c63",
        "type": "mqtt out",
        "z": "8199fc6a.89ff9",
        "name": "To MQTT",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "125f6c81.60151b",
        "x": 359,
        "y": 139,
        "wires": []
    },
    {
        "id": "416377ed.48c21",
        "type": "inject",
        "z": "8199fc6a.89ff9",
        "name": "Force Solve Device 1",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "ToDevice/1",
        "payload": "SOLVE",
        "payloadType": "str",
        "x": 150,
        "y": 95,
        "wires": [
            [
                "8a26bb6d.07c63"
            ]
        ]
    },
    {
        "id": "824e4aa2.41ba38",
        "type": "inject",
        "z": "8199fc6a.89ff9",
        "name": "Force Reset Device 1",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "ToDevice/1",
        "payload": "RESET",
        "payloadType": "str",
        "x": 150,
        "y": 132,
        "wires": [
            [
                "8a26bb6d.07c63"
            ]
        ]
    },
    {
        "id": "46cea8fa.2a2e88",
        "type": "inject",
        "z": "8199fc6a.89ff9",
        "name": "Force Solve Device 2",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "ToDevice/2",
        "payload": "SOLVE",
        "payloadType": "str",
        "x": 150,
        "y": 169,
        "wires": [
            [
                "8a26bb6d.07c63"
            ]
        ]
    },
    {
        "id": "d3e98aa5.b232a8",
        "type": "inject",
        "z": "8199fc6a.89ff9",
        "name": "Force Reset Device 2",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "ToDevice/2",
        "payload": "RESET",
        "payloadType": "str",
        "x": 150,
        "y": 206,
        "wires": [
            [
                "8a26bb6d.07c63"
            ]
        ]
    },
    {
        "id": "69e5bdb.72b9144",
        "type": "mqtt in",
        "z": "8199fc6a.89ff9",
        "name": "From MQTT",
        "topic": "/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "125f6c81.60151b",
        "x": 570,
        "y": 120,
        "wires": [
            [
                "5a790094.8f528",
                "312bfa38.aaa0d6"
            ]
        ]
    },
    {
        "id": "82c7e984.13791",
        "type": "comment",
        "z": "8199fc6a.89ff9",
        "name": "Commands",
        "info": "",
        "x": 120,
        "y": 59,
        "wires": []
    },
    {
        "id": "87ade247.6a6a68",
        "type": "comment",
        "z": "8199fc6a.89ff9",
        "name": "Inputs",
        "info": "",
        "x": 550,
        "y": 80,
        "wires": []
    },
    {
        "id": "312bfa38.aaa0d6",
        "type": "switch",
        "z": "8199fc6a.89ff9",
        "name": "INPUT",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "/0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "/1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "/2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "/3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "/4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "/5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 929,
        "y": 120,
        "wires": [
            [
                "269b0919.8cd3b6"
            ],
            [
                "9121fc06.ae8c18"
            ],
            [
                "c03bd9ee.f2df2"
            ],
            [
                "2f909776.3b58e"
            ],
            [
                "19a3638e.a8c314"
            ],
            [
                "b2893f25.71f16"
            ]
        ]
    },
    {
        "id": "269b0919.8cd3b6",
        "type": "debug",
        "z": "8199fc6a.89ff9",
        "name": "INPUT0",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1139,
        "y": 20,
        "wires": []
    },
    {
        "id": "9121fc06.ae8c18",
        "type": "debug",
        "z": "8199fc6a.89ff9",
        "name": "INPUT1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1139,
        "y": 60,
        "wires": []
    },
    {
        "id": "c03bd9ee.f2df2",
        "type": "debug",
        "z": "8199fc6a.89ff9",
        "name": "INPUT2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1139,
        "y": 100,
        "wires": []
    },
    {
        "id": "2f909776.3b58e",
        "type": "debug",
        "z": "8199fc6a.89ff9",
        "name": "INPUT3",
        "active": true,
        "console": "false",
        "complete": "payload.STATE",
        "x": 1139,
        "y": 140,
        "wires": []
    },
    {
        "id": "19a3638e.a8c314",
        "type": "debug",
        "z": "8199fc6a.89ff9",
        "name": "INPUT4",
        "active": true,
        "console": "false",
        "complete": "payload.STATE",
        "x": 1139,
        "y": 180,
        "wires": []
    },
    {
        "id": "b2893f25.71f16",
        "type": "debug",
        "z": "8199fc6a.89ff9",
        "name": "INPUT5",
        "active": true,
        "console": "false",
        "complete": "payload.STATE",
        "x": 1139,
        "y": 220,
        "wires": []
    },
    {
        "id": "5a790094.8f528",
        "type": "debug",
        "z": "8199fc6a.89ff9",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 793,
        "y": 302,
        "wires": []
    },
    {
        "id": "d5a0758b.8ccaf8",
        "type": "function",
        "z": "ce0b9fb.610bfe",
        "name": "Store Data",
        "func": "var local=flow.get('local') || {};\nvar topic=msg.topic;\nvar payload=msg.payload;\nvar last_payload=\"\";\nvar msg2={};\nvar by_topic=local.by_topic || false; // log by topic\nvar all_data=local.all_data || true; // log all data or only changed data\nvar store_time=local[\"store_time\"] ||false;\nvar store_topic=local[\"store_topic\"] ||false;\nvar start_logger=local[\"start_logger\"] || false;\nvar ignore_switches=local['ignore-switches'] || false;\nvar max_size =5000000; //maximum log file size\n\n//node.log(\" topic =\"+topic +\"message \"+msg.payload);\n//node.log(\" store topic =\"+ store_topic +start_logger);\n//\nfunction get_filename(topic,payload)\n{\n\n if (!(topic in local))\n\tlocal[topic]={}; //create\n\nvar filename=local[topic][\"cf_name\"] || \"log000.txt\";\n\n//node.log(filename);\nvar cf_counter=local[topic].cf_counter || 0;\nvar cf_size=local[topic].cf_size || 0;\n//node.log(\"file size=\"+cf_size +\" counter  \"+cf_counter);\ncf_size = cf_size +payload.length;\n\nif (cf_size>max_size)\n{\n//node.log(\"size limit reached\")\ncf_counter+=1\nvar count=cf_counter.toString();\nif (count.length==1)\ncount=\"00\"+count;\nif (count.length==2)\ncount=\"0\"+count;\n//\nfilename=\"log\"+count+\".txt\";\ncf_size=0;\n}\n//node.log(\"file size=\"+cf_size +\" counter  \"+cf_counter);\n//\nlocal[topic][\"cf_name\"]=filename;\nlocal[topic][\"cf_counter\"]= cf_counter;\nlocal[topic][\"cf_size\"]= cf_size;\nflow.set(\"local\",local);\nmsg2.payload=cf_counter;\n\n//\nreturn filename;\n\n\n}\nfunction message_changed(payload,topic)\n{\n  \tif (!local.all_data) //not logging all data\n\t {  \n\t\tif (!(local[topic]===undefined)) //test exists\n\t\t{\n\t\n\t\tlast_payload=local[topic][\"last_payload\"];\n\n\t\t//node.log(\"last payload \"+ last_payload);\n\t\t//node.log(\"This payload \"+ payload);\n\t\t}\n\t\telse\n\t\t\t\tlocal[\"topic\"]={}; //initialise\n\n\t\t//\n\t\tif (payload===last_payload)\n\t\t{\n\t\t//node.log(\"same data \"+topic +\"not logging\");\n\t\treturn false;\n\t\t}\n\t}  \n\treturn true;\n}\n\n//node.log(\"start_logger is \"+start_logger);\n\n\nif (start_logger)\n{\n//node.log(\"logging all data \"+local.all_data+ \"by topic\"+local.by_topic);\n\n\n\n\n//\nvar d = new Date();\nvar t = d.getTime();\ntry {\nnew_payload=JSON.parse(payload); //convert to javascript\n//node.log(\"data is already Json\");\npayload=new_payload;\n}\ncatch (e){\n\t//node.log(\"data is not Json\");\n}\n\nif (store_time && store_topic)\t\n\tpayload={\"time\":t,\"payload\":payload,\"topic\":topic};\nif (store_time && !store_topic)\n\tpayload={\"time\":t,\"payload\":payload};\nif (!store_time && store_topic)\n\tpayload={\"payload\":payload,\"topic\":topic};\nif (!store_time && !store_topic)\n\tpayload={\"payload\":payload};\t\npayload=JSON.stringify(payload);\n//node.log(\"payload is \",payload);\nif (local.by_topic==true)\n    var topic=msg.topic;\nelse\n    var topic=\"default\";\n\nvar filename=get_filename(topic,payload);\nl=topic.length;\nif (topic[l-1] !=\"/\")\nmsg.filename = \"/home/pi/logs/\"+ topic +\"/\"+filename;\nelse\nmsg.filename = \"/home/pi/logs/\"+ topic +filename;\n//node.log(\"filename= \"+msg.filename);\nmsg.payload=payload;\nif(message_changed(payload,topic))\n{\nlocal[topic][\"last_payload\"]=payload;\nflow.set('local',local);\n\nreturn [msg,msg2];\n}\nelse\nreturn [null,msg2];\n}\n\nreturn [null,null];",
        "outputs": 2,
        "noerr": 0,
        "x": 636,
        "y": 164,
        "wires": [
            [
                "22db78c3.26076"
            ],
            []
        ]
    },
    {
        "id": "44e7c818.88bfa",
        "type": "mqtt in",
        "z": "ce0b9fb.610bfe",
        "name": "",
        "topic": "test/#",
        "qos": "0",
        "broker": "94151922.0a2888",
        "x": 276,
        "y": 164,
        "wires": [
            [
                "d5a0758b.8ccaf8"
            ]
        ]
    },
    {
        "id": "22db78c3.26076",
        "type": "file",
        "z": "ce0b9fb.610bfe",
        "name": "log sensor data",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 866,
        "y": 144,
        "wires": [
            []
        ]
    },
    {
        "id": "918c37c6.c23f7",
        "type": "debug",
        "z": "ce0b9fb.610bfe",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 756,
        "y": 524,
        "wires": []
    },
    {
        "id": "ec2439d.9c444c8",
        "type": "ui_switch",
        "z": "ce0b9fb.610bfe",
        "name": "",
        "label": "All Data",
        "group": "e72d34e6.eb9cb",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "ALL-DATA",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 466,
        "y": 244,
        "wires": [
            [
                "92f3f4fa.4a142"
            ]
        ]
    },
    {
        "id": "9e8f018b.2a68a8",
        "type": "ui_switch",
        "z": "ce0b9fb.610bfe",
        "name": "",
        "label": "Log By Topic",
        "group": "e72d34e6.eb9cb",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "BY-TOPIC",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 496,
        "y": 304,
        "wires": [
            [
                "92f3f4fa.4a142"
            ]
        ]
    },
    {
        "id": "84d2f579.dd9468",
        "type": "ui_switch",
        "z": "ce0b9fb.610bfe",
        "name": "",
        "label": "Start Logging",
        "group": "e72d34e6.eb9cb",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "START",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 506,
        "y": 484,
        "wires": [
            [
                "92f3f4fa.4a142"
            ]
        ]
    },
    {
        "id": "1a3001e3.60fc8e",
        "type": "inject",
        "z": "ce0b9fb.610bfe",
        "name": "Set Initial switch states",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "init",
        "payload": "false",
        "payloadType": "bool",
        "x": 406,
        "y": 624,
        "wires": [
            [
                "6a96fc16.597934"
            ]
        ]
    },
    {
        "id": "5b2ff4ff.62f534",
        "type": "ui_text",
        "z": "ce0b9fb.610bfe",
        "group": "e40ecc8a.17c4f8",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Stop/Start",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 906,
        "y": 304,
        "wires": []
    },
    {
        "id": "517998cf.ab58b8",
        "type": "ui_switch",
        "z": "ce0b9fb.610bfe",
        "name": "",
        "label": "Store Date-Time",
        "group": "e72d34e6.eb9cb",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "STORE-TIME",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 506,
        "y": 424,
        "wires": [
            [
                "92f3f4fa.4a142"
            ]
        ]
    },
    {
        "id": "79918da5.2c70fc",
        "type": "ui_switch",
        "z": "ce0b9fb.610bfe",
        "name": "",
        "label": "Store Topic",
        "tooltip": "",
        "group": "e72d34e6.eb9cb",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "STORE-TOPIC",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 496,
        "y": 364,
        "wires": [
            [
                "92f3f4fa.4a142"
            ]
        ]
    },
    {
        "id": "92f3f4fa.4a142",
        "type": "function",
        "z": "ce0b9fb.610bfe",
        "name": "Set Switches",
        "func": "var local=flow.get('local') || {};\nvar topic=msg.topic;\nvar msg1={};\nvar msg2={};\nmsg2.payload=\"\";\nvar by_topic=local[\"by_topic\"]|| false; // log by topic\nvar all_data=local[\"all_data\"] || true; // log all data or only changed data\nvar store_time=local[\"store_time\"] ||false;\nvar store_topic=local[\"store_topic\"] ||false;\nvar start_logger=local[\"start_logger\"] || false;\nvar ignore_switches=local['ignore-switches'] || false;\npayload=msg.payload;\nnode.log(\"in switch status\");\n\nfunction reset()\n{\nlocal={};\nlocal[\"all_data\"]=true\n local[\"by_topic\"]=false;   \n local[\"store_topic\"]=false; \n local[\"all_data\"]=true;\n local[\"store_time\"]=false;  \n local['ignore-switches']=false;\n local[\"start_logger\"]=false;\n \n}\n\tif (topic==\"RESET\")\n\t{\n\t    reset(); //reset stored data to default\n\t    flow.set('local',local);\n\t    msg2.payload=\"Manual Reset\";\n\t    node.log(\"start_logger is \"+local[\"start_logger\"]);\n\t    msg1.payload=\"Logging Stopped\";\n\t    return[msg1,msg2];\n\t    \n\t}\n\n\tif (topic==\"START\")\n\t{\n\t\tif (payload){\n\t\t\tnode.log(\"start_logger \");\n\t\t\tlocal[\"start_logger\"]=payload;\n\t\t\tlocal['ignore-switches']=true;\n\t\t\tflow.set('local',local);\n\t\t\tnode.log(\"start_logger \"+local.start_logger)\n\t\t\tmsg1.payload=\"Logging started\";\n\t\t\t\n\t\t\treturn [msg1,msg2];\n\t\t}\n\telse\n\t{\n\t\t\tmsg1.payload=\"Logging Stopped\";\n\t\t\tlocal[\"start_logger\"]=false;\n\t\t\treset(); //reset stored data to default\n\t\t\tflow.set('local',local);\n\t\t\tmsg2.payload=false //reset switches\n\t\t\treturn [msg1,msg2];\n\t}\n\t}\n\t\t\n\tif (topic==\"BY-TOPIC\" && !ignore_switches)\n\t{\n\t\tif (payload)\n\t\t{\n\t\t  local[\"by_topic\"]=true;\n\t\t  flow.set('local',local);\n\t\t  return [null,msg2];\n\t\t}\n\t\telse\n\t\t{\n\t\t  local[\"by_topic\"]=false;\n\t\t  flow.set('local',local);\n\t\t  return [null,msg2];\n\t\t}\t\n\t}\n\tif (topic==\"ALL-DATA\" && !ignore_switches)\n\t{\n\t\tif (payload)\n\t\t{\n\n\t\t  local[\"all_data\"]=true;\n\t\t  flow.set('local',local);\n\t\t  return [null,msg2];\n\t\t}\n\t\telse\n\t\t{\n\n\t\t  local[\"all_data\"]=false;\n\t\t  flow.set('local',local);\n\t\t  return [null,msg2];\n\t\t}\n\t}\n\tif (topic==\"STORE-TOPIC\" && !ignore_switches)\n\t{\n\t\tif (payload)\n\t\t{\n\t\t  local[\"store_topic\"]=true;\n\t\t  flow.set('local',local);\n\t\t return [null,msg2];\n\t\t}\n\telse\n\t\t{\n\t\t  local[\"store_topic\"]=false;\n\t\t  flow.set('local',local);\n\t\t  return [null,msg2];\n\t\t}\n\t}\n\t\n\tif (topic==\"STORE-TIME\" && !ignore_switches)\n\t{\n\t\tif (payload)\n\t\t{\n\t\t  local[\"store_time\"]=true;\n\t\t  flow.set('local',local);\n\t\t return [null,msg2];\n\t\t}\n\telse\n\t\t{\n\t\t  local[\"store_time\"]=false;\n\t\t  flow.set('local',local);\n\t\t return [null,msg2];\n\t\t}\n\t}\t\t\n\n\n\n\n",
        "outputs": 3,
        "noerr": 0,
        "x": 716,
        "y": 364,
        "wires": [
            [
                "5b2ff4ff.62f534"
            ],
            [
                "a1ba7b99.543de"
            ],
            []
        ]
    },
    {
        "id": "6a96fc16.597934",
        "type": "ui_button",
        "z": "ce0b9fb.610bfe",
        "name": "",
        "group": "e72d34e6.eb9cb",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "RESET",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "RESET",
        "x": 306,
        "y": 504,
        "wires": [
            [
                "92f3f4fa.4a142",
                "918c37c6.c23f7",
                "84d2f579.dd9468",
                "517998cf.ab58b8",
                "79918da5.2c70fc",
                "9e8f018b.2a68a8",
                "5ef24967.b20778"
            ]
        ]
    },
    {
        "id": "5ef24967.b20778",
        "type": "change",
        "z": "ce0b9fb.610bfe",
        "name": "reset true",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 306,
        "y": 264,
        "wires": [
            [
                "ec2439d.9c444c8"
            ]
        ]
    },
    {
        "id": "a1ba7b99.543de",
        "type": "ui_text",
        "z": "ce0b9fb.610bfe",
        "group": "e40ecc8a.17c4f8",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 916,
        "y": 364,
        "wires": []
    },
    {
        "id": "ebb35be.f4aab28",
        "type": "mosca in",
        "z": "f1ff6879.b2edc8",
        "mqtt_port": "1883",
        "mqtt_ws_port": "8080",
        "name": "MOSCA",
        "username": "",
        "password": "",
        "dburl": "",
        "x": 145,
        "y": 446,
        "wires": [
            []
        ]
    },
    {
        "id": "843cba09.746918",
        "type": "ui_template",
        "z": "f1ff6879.b2edc8",
        "d": true,
        "group": "",
        "name": "Dark theme CSS-style overrides",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n/*\nUsed for dynamically amending menu/tab items\n:root {\n    --main-color: \"blue\";\n}\n[aria-label~=\"Your tab Name\"] {\n    background-color: var(--main-color,green);\n}\n\n[aria-label~=\"Home\"] + div > p::after {\n    content: 'woot' ;\n*/\n\nbody.nr-dashboard-theme {\n background-color: #333333;\n font-family: Calibri;\n}\nbutton, html, input, select, textarea {\n font-family: Calibri;\n}\nbody.nr-dashboard-theme md-content md-card {\n background-color: #33333300;\n color: #d0d0d0;\n}\n\nbody.nr-dashboard-theme md-toolbar {\n background-image: linear-gradient(to right, #404040, #737373);\n box-shadow: 0px 1px 20px #0000008a;\n}\n.nr-dashboard-theme ui-card-panel {\n background-image: linear-gradient(to bottom right, #404040, #737373);\n border: 1px solid #555555;\n box-shadow: 0 0 20px #00000066;\n}\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n color: #2eb82e;\n text-shadow: 0 0 2px black;\n}\n\n.nr-dashboard-theme .nr-dashboard-form-button {\n background-image: linear-gradient(to bottom right, #8a8a8a6e, #00000070);\n background-color: #00ad03;\n color: #d0d0d0;\n text-shadow: 0 0 2px #525252;\n border-radius:6px;\n}\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n background-image: linear-gradient(to bottom right, #8a8a8a6e, #00000070);\n background-color: #00ad03;\n color: #d0d0d0;\n text-shadow: 0 0 2px #525252;\n border-radius:6px;\n}\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n background-color: #00de00;\n}\n\n.nr-dashboard-theme .nr-dashboard-switch md-switch .md-thumb {\n background-image: linear-gradient(to bottom right, #48b349, #115009);\n}\n.nr-dashboard-button .md-button {\n box-shadow: 0 1px 3px 0 rgba(0,0,0,.26)!important;\n width: 100%!important;\n height: 100%!important;\n margin: 0!important;\n min-width: 0!important;\n min-height: 0!important;\n}\n.nr-dashboard-theme .nr-dashboard-slider .md-thumb:after {\n background-image: linear-gradient(to bottom right, #48b349, #115009);\n border-style: none;\n}\n.nr-dashboard-theme .nr-dashboard-numeric .value {\n background-color: #33333300;\n color:#d0d0d0;\n}\n\n.nr-dashboard-numeric .value {\n font-weight: 700;\n text-align: center;\n border: 0;\n}\n\n.nr-dashboard-form {\n display: inline-block;\n width: 100%;\n overflow-y: visible;\n}\n#SETTINGS_TEATED_cards {\n min-height: 260px;\n}\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "global",
        "x": 727,
        "y": 439,
        "wires": [
            []
        ],
        "info": "CSS Style overrides to the Node-RED Dark theme.\n\nFrom the Dashboard node information panel (View->Dashboard), select\n - Site: Options -> Node-RED theme everywhere\n - Theme: Style -> Dark"
    },
    {
        "id": "9566fb55.924cb",
        "type": "ui_text_input",
        "z": "5d0d7cde.758ba4",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "c604fdc6.af02b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 234,
        "y": 131,
        "wires": [
            [
                "39104b32.345224"
            ]
        ]
    },
    {
        "id": "145bcd37.40f97b",
        "type": "ui_button",
        "z": "5d0d7cde.758ba4",
        "name": "",
        "group": "c604fdc6.af02b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Send",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "/ToDevice/Hint",
        "x": 234,
        "y": 212,
        "wires": [
            [
                "b54e6313.7c4da8"
            ]
        ]
    },
    {
        "id": "39104b32.345224",
        "type": "change",
        "z": "5d0d7cde.758ba4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hint",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 243,
        "y": 172,
        "wires": [
            []
        ]
    },
    {
        "id": "88068dea.12fbd",
        "type": "comment",
        "z": "5d0d7cde.758ba4",
        "name": "Custom Messages",
        "info": "",
        "x": 263.5,
        "y": 96,
        "wires": []
    },
    {
        "id": "b54e6313.7c4da8",
        "type": "change",
        "z": "5d0d7cde.758ba4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "hint",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 254,
        "y": 253,
        "wires": [
            [
                "e55d0d7c.b22b6"
            ]
        ]
    },
    {
        "id": "37b329a3.1b2136",
        "type": "ui_dropdown",
        "z": "5d0d7cde.758ba4",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "807497bd.b42b68",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [],
        "payload": "",
        "topic": "",
        "x": 680.5,
        "y": 209,
        "wires": [
            [
                "39fbaeb7.7d31da"
            ]
        ]
    },
    {
        "id": "1e738558.ef6543",
        "type": "ui_button",
        "z": "5d0d7cde.758ba4",
        "name": "",
        "group": "807497bd.b42b68",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Send Hint",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "/ToDevice/Hint",
        "x": 701.5,
        "y": 288,
        "wires": [
            [
                "a2f7df40.370048"
            ]
        ]
    },
    {
        "id": "39fbaeb7.7d31da",
        "type": "change",
        "z": "5d0d7cde.758ba4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "custommessage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 731,
        "y": 249,
        "wires": [
            []
        ]
    },
    {
        "id": "4fd104bb.12a064",
        "type": "inject",
        "z": "5d0d7cde.758ba4",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"Hint 1\":\"Look lively, sunshine!\"},{\"Hint 2\":\"Look under the table\"},{\"Hint 3\":\"Did you hear something?\"}]",
        "payloadType": "json",
        "x": 670.5,
        "y": 130,
        "wires": [
            [
                "b9d624b4.112c3"
            ]
        ]
    },
    {
        "id": "b9d624b4.112c3",
        "type": "change",
        "z": "5d0d7cde.758ba4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700.5,
        "y": 170,
        "wires": [
            [
                "37b329a3.1b2136"
            ]
        ]
    },
    {
        "id": "686ed5e.d08862c",
        "type": "comment",
        "z": "5d0d7cde.758ba4",
        "name": "Predefined Hints",
        "info": "",
        "x": 700.5,
        "y": 95,
        "wires": []
    },
    {
        "id": "a2f7df40.370048",
        "type": "change",
        "z": "5d0d7cde.758ba4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "custommessage",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 702,
        "y": 325,
        "wires": [
            [
                "c9e67563.ee374"
            ]
        ]
    },
    {
        "id": "49b95030.161b4",
        "type": "link in",
        "z": "f1ff6879.b2edc8",
        "name": "Publish MQTT",
        "links": [
            "c9e67563.ee374",
            "e55d0d7c.b22b6"
        ],
        "x": 227.5,
        "y": 421,
        "wires": [
            [
                "45651eaf.fc35c8"
            ]
        ]
    },
    {
        "id": "45651eaf.fc35c8",
        "type": "mqtt out",
        "z": "f1ff6879.b2edc8",
        "name": "To MQTT",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "125f6c81.60151b",
        "x": 331,
        "y": 421,
        "wires": []
    },
    {
        "id": "e55d0d7c.b22b6",
        "type": "link out",
        "z": "5d0d7cde.758ba4",
        "name": "",
        "links": [
            "49b95030.161b4"
        ],
        "x": 424.5,
        "y": 253,
        "wires": []
    },
    {
        "id": "c9e67563.ee374",
        "type": "link out",
        "z": "5d0d7cde.758ba4",
        "name": "",
        "links": [
            "49b95030.161b4"
        ],
        "x": 860,
        "y": 324,
        "wires": []
    },
    {
        "id": "a3a6f0d5.b02ad8",
        "type": "mqtt in",
        "z": "f1ff6879.b2edc8",
        "name": "From MQTT",
        "topic": "/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "125f6c81.60151b",
        "x": 282,
        "y": 469,
        "wires": [
            [
                "8ffe4b6b.5db97"
            ]
        ]
    },
    {
        "id": "8ffe4b6b.5db97",
        "type": "link out",
        "z": "f1ff6879.b2edc8",
        "name": "Incoming MQTT",
        "links": [
            "33b36ddd.fa1e62"
        ],
        "x": 386.5,
        "y": 469,
        "wires": []
    },
    {
        "id": "3fbea513.e73c4a",
        "type": "link in",
        "z": "8199fc6a.89ff9",
        "name": "",
        "links": [],
        "x": 502.5,
        "y": 269,
        "wires": [
            []
        ]
    },
    {
        "id": "fcc22608.b444a",
        "type": "ui_text",
        "z": "ce0b9fb.610bfe",
        "group": "77f4703b.474898",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 560,
        "y": 84,
        "wires": []
    },
    {
        "id": "33b36ddd.fa1e62",
        "type": "link in",
        "z": "ce0b9fb.610bfe",
        "name": "",
        "links": [
            "8ffe4b6b.5db97"
        ],
        "x": 441,
        "y": 83,
        "wires": [
            [
                "fcc22608.b444a"
            ]
        ]
    },
    {
        "id": "3b654db8.e659da",
        "type": "ui_button",
        "z": "f1ff6879.b2edc8",
        "name": "",
        "group": "4ddbbcc2.03d69c",
        "order": 1,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "icon": "",
        "payload": "{     \"payload\": \"on\",     \"timeout\": 600,     \"warning\": 30 }",
        "payloadType": "json",
        "topic": "/game",
        "x": 109.5,
        "y": 41,
        "wires": [
            [
                "870585a0.6e345"
            ]
        ]
    },
    {
        "id": "97d374d9.073e2",
        "type": "ui_button",
        "z": "f1ff6879.b2edc8",
        "name": "",
        "group": "4ddbbcc2.03d69c",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "{     \"payload\": \"cancel\" }",
        "payloadType": "json",
        "topic": "/game",
        "x": 109.5,
        "y": 80,
        "wires": [
            [
                "2dfdf974.06a5a6"
            ]
        ]
    },
    {
        "id": "cf81eee.3a8811",
        "type": "ui_button",
        "z": "f1ff6879.b2edc8",
        "name": "",
        "group": "4ddbbcc2.03d69c",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "icon": "",
        "payload": "{\"timeout\": 600 }",
        "payloadType": "json",
        "topic": "/game",
        "x": 108.5,
        "y": 118,
        "wires": [
            [
                "3e79536e.d9ddcc"
            ]
        ]
    },
    {
        "id": "c9a395d4.11ff78",
        "type": "inject",
        "z": "f1ff6879.b2edc8",
        "name": "Tick",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 132.5,
        "y": 247,
        "wires": [
            [
                "b6bf575a.f2897"
            ]
        ]
    },
    {
        "id": "22bb44c8.2a0584",
        "type": "change",
        "z": "f1ff6879.b2edc8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gameState",
                "pt": "global",
                "to": "playing",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 405.5,
        "y": 41,
        "wires": [
            []
        ]
    },
    {
        "id": "4529bbdd.ea8efc",
        "type": "change",
        "z": "f1ff6879.b2edc8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gameState",
                "pt": "global",
                "to": "stopped",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 407,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "870585a0.6e345",
        "type": "switch",
        "z": "f1ff6879.b2edc8",
        "name": "",
        "property": "gameState",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "playing",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 231.5,
        "y": 41,
        "wires": [
            [
                "22bb44c8.2a0584"
            ]
        ]
    },
    {
        "id": "2dfdf974.06a5a6",
        "type": "switch",
        "z": "f1ff6879.b2edc8",
        "name": "",
        "property": "gameState",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "stopped",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 231,
        "y": 81,
        "wires": [
            [
                "4529bbdd.ea8efc"
            ]
        ]
    },
    {
        "id": "b6bf575a.f2897",
        "type": "function",
        "z": "f1ff6879.b2edc8",
        "name": "Update Game Timer",
        "func": "// The current timestamp is injected at the start of the flow\nvar currentTime = msg.payload;\nvar lastTickTime = global.get(\"lastTickTime\")||currentTime;\nvar timeRemaining = global.get(\"timeRemaining\")||0;\nvar gameState = global.get(\"gameState\");\n\nif(gameState == \"playing\") {\n    // Reduce the time remaining based on the amount of time\n    // that has elapsed since the last tick count\n    timeRemaining -= (currentTime - lastTickTime);\n        \n    // Update the global variable\n    global.set(\"timeRemaining\", timeRemaining);\n\n    // Update the msg to carry formatted string        \n    msg.timeRemaining = timeRemaining;//(new Date(timeRemaining)).toUTCString().match(/(\\d\\d:\\d\\d:\\d\\d)/)[0];\n\n    if(timeRemaining < 60000) {\n        msg.timeColour = \"red\";\n    }\n    else {\n        msg.timeColour = \"limegreen\";\n    }\n    \n    global.set(\"lastTickTime\", currentTime);\n    \n    // Only need to update UI is timeRemaining has changed\n    return msg;\n}\n\nglobal.set(\"lastTickTime\", currentTime);\nnode.status({fill:\"green\",shape:\"dot\",text:timeRemaining});",
        "outputs": 1,
        "noerr": 0,
        "x": 315,
        "y": 247,
        "wires": [
            [
                "386ac0fd.64ace8"
            ]
        ]
    },
    {
        "id": "3e79536e.d9ddcc",
        "type": "change",
        "z": "f1ff6879.b2edc8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "timeRemaining",
                "pt": "global",
                "to": "3599999",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "timeRemaining",
                "pt": "msg",
                "to": "3599999",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "gameState",
                "pt": "global",
                "to": "stopped",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 259.5,
        "y": 118,
        "wires": [
            [
                "386ac0fd.64ace8"
            ]
        ]
    },
    {
        "id": "d7093a44.dcf3e",
        "type": "ui_template",
        "z": "f1ff6879.b2edc8",
        "group": "4ddbbcc2.03d69c",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<div layout=\"row\" layout-align=\"space-between\">   <!-- Possible layout-aligns include \"start center\" -->\n<span class=\"label\">\n    Time Remaining <i class=\"fa fa-clock-o fa-2x nr-dashboard-ok\"></i>\n</span> \n    <span class=\"value\" style=\"color:{{msg.timeColour}}; font-size:xx-large;\">\n        {{msg.formattedTimeRemaining}}\n    </span>\n</div>\n<!--<i class=\"fa fa-clock-o fa-2x nr-dashboard-ok\"></i>\n<span ng-bind-html=\"msg.formattedTimeRemaining\" style=\"color:{{msg.timeColour}};\"></span>\n-->\n<!--\n<span style=\"color:{{msg.timeColour}};\">\n    {{msg.formattedTimeRemaining}}\n</span>\n-->",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 693,
        "y": 189,
        "wires": [
            []
        ]
    },
    {
        "id": "2d37dd50.b1ba42",
        "type": "ui_text",
        "z": "f1ff6879.b2edc8",
        "d": true,
        "group": "4ddbbcc2.03d69c",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "Time Remaining",
        "label": "Time Remaining <i class=\"fa fa-clock-o fa-2x nr-dashboard-ok\"></i>",
        "format": "<span style=\"font-size:xx-large; color:{{msg.timeColour}};\">{{msg.formattedTimeRemaining}}</span>",
        "layout": "row-left",
        "x": 708.5,
        "y": 127,
        "wires": []
    },
    {
        "id": "386ac0fd.64ace8",
        "type": "function",
        "z": "f1ff6879.b2edc8",
        "name": "[s] to [hh:mm:ss]",
        "func": "// Message from preceeding node is in seconds - should be less than 24 hours (86400 seconds).\nvar time = (new Date(msg.timeRemaining)).toUTCString().match(/(\\d\\d:\\d\\d:\\d\\d)/)[0];\n// Pass on the string to the next node, what ever that may be. (groov Data Store for example).\nmsg.formattedTimeRemaining = time;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 489,
        "y": 167,
        "wires": [
            [
                "2d37dd50.b1ba42",
                "d7093a44.dcf3e"
            ]
        ]
    },
    {
        "id": "b24d4116.cd6728",
        "type": "file",
        "z": "f1ff6879.b2edc8",
        "name": "",
        "filename": "c:\\PropControl\\log.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 755.5,
        "y": 664,
        "wires": [
            []
        ]
    },
    {
        "id": "f8871c6a.9ada58",
        "type": "ui_switch",
        "z": "f1ff6879.b2edc8",
        "name": "",
        "label": "Logging",
        "tooltip": "",
        "group": "77f4703b.474898",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 570.5,
        "y": 593,
        "wires": [
            [
                "fe8ec61f.339058"
            ]
        ]
    },
    {
        "id": "bcb90e6c.e124c",
        "type": "mqtt in",
        "z": "f1ff6879.b2edc8",
        "name": "",
        "topic": "/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "125f6c81.60151b",
        "x": 205.5,
        "y": 664,
        "wires": [
            [
                "fa63515e.057e78"
            ]
        ]
    },
    {
        "id": "fe8ec61f.339058",
        "type": "change",
        "z": "f1ff6879.b2edc8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "logging",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 763.5,
        "y": 593,
        "wires": [
            []
        ]
    },
    {
        "id": "fa63515e.057e78",
        "type": "switch",
        "z": "f1ff6879.b2edc8",
        "name": "",
        "property": "logging",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 356.5,
        "y": 664,
        "wires": [
            [
                "61b0ee5c.799308"
            ]
        ]
    },
    {
        "id": "eb269b19.4773",
        "type": "change",
        "z": "f1ff6879.b2edc8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 387.5,
        "y": 593,
        "wires": [
            [
                "f8871c6a.9ada58"
            ]
        ]
    },
    {
        "id": "61b0ee5c.799308",
        "type": "function",
        "z": "f1ff6879.b2edc8",
        "name": "Create Log Entry",
        "func": "var d = new Date();\nvar t = d.getTime();\n\nvar filename = \"log.txt\";\n\nvar payload = {\"time\":t,\"payload\":msg.payload};\nmsg.payload = JSON.stringify(payload);\n\nmsg.filename = \"/PropControl/\" + filename;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 529.5,
        "y": 664,
        "wires": [
            [
                "b24d4116.cd6728"
            ]
        ]
    },
    {
        "id": "e3e3a23b.c9fdb",
        "type": "inject",
        "z": "f1ff6879.b2edc8",
        "name": "On Startup",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "Initialise",
        "payload": "",
        "payloadType": "date",
        "x": 581.5,
        "y": 292,
        "wires": [
            [
                "af64b57.8441a48"
            ]
        ]
    },
    {
        "id": "af64b57.8441a48",
        "type": "link out",
        "z": "f1ff6879.b2edc8",
        "name": "OnStartup",
        "links": [
            "41952957.06c838"
        ],
        "x": 746.5,
        "y": 292,
        "wires": []
    },
    {
        "id": "41952957.06c838",
        "type": "link in",
        "z": "f1ff6879.b2edc8",
        "name": "",
        "links": [
            "af64b57.8441a48"
        ],
        "x": 202.5,
        "y": 594,
        "wires": [
            [
                "eb269b19.4773"
            ]
        ]
    },
    {
        "id": "61b7505b.1259f",
        "type": "ui_button",
        "z": "8199fc6a.89ff9",
        "name": "",
        "group": "de8b10f7.dae8b8",
        "order": 2,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Solve",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "SOLVE",
        "payloadType": "str",
        "topic": "ToDevice/2",
        "x": 201,
        "y": 312,
        "wires": [
            [
                "8a26bb6d.07c63"
            ]
        ]
    },
    {
        "id": "4a6ab4bc.855f94",
        "type": "ui_button",
        "z": "8199fc6a.89ff9",
        "name": "",
        "group": "de8b10f7.dae8b8",
        "order": 3,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "RESET",
        "payloadType": "str",
        "topic": "ToDevice/2",
        "x": 200.5,
        "y": 349,
        "wires": [
            [
                "8a26bb6d.07c63"
            ]
        ]
    },
    {
        "id": "13abd884.8d58a7",
        "type": "inject",
        "z": "8199fc6a.89ff9",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"deviceID\":\"1\",\"description\":\"Hold Hands\",\"commands\":[\"SOLVE\",\"RESET\"]},{\"deviceID\":\"2\",\"description\":\"Haunted Mirror\",\"commands\":[\"SOLVE\",\"RESET\"]},{\"deviceID\":\"3\",\"description\":\"Connect the Wires\",\"commands\":[\"SOLVE\",\"RESET\"]}]",
        "payloadType": "json",
        "x": 313.5,
        "y": 473,
        "wires": [
            [
                "a338fade.60fdf8"
            ]
        ]
    },
    {
        "id": "a338fade.60fdf8",
        "type": "ui_template",
        "z": "8199fc6a.89ff9",
        "group": "de8b10f7.dae8b8",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<div layout=\"row\" layout-align=\"start center\" ng-repeat=\"x in msg.payload\">\n  <span flex style=\"color: green\">{{x.deviceID}}</span>\n  <span flex style=\"color: red\">{{x.description}}</span>\n  <span flex style=\"color: black\" ng-repeat=\"c in x.commands\">\n      <md-button class=\"filled touched bigfont rounded vibrate\" style=\"background-color:#27ae60\" ng-click=\"send({payload: c})\"> \n    {{c}}\n</md-button> \n      </span>\n      \n   \n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 495.5,
        "y": 428,
        "wires": [
            []
        ]
    },
    {
        "id": "ec3173a4.f81ba",
        "type": "mqtt out",
        "z": "a643a892.8ea658",
        "name": "MQTT ToDevice",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "125f6c81.60151b",
        "x": 1360,
        "y": 256,
        "wires": []
    },
    {
        "id": "bf77243b.abe16",
        "type": "mqtt in",
        "z": "a643a892.8ea658",
        "name": "MQTT FromDevice",
        "topic": "/FromDevice/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "125f6c81.60151b",
        "x": 129,
        "y": 247,
        "wires": [
            [
                "24dc8fe3.05bf78",
                "8d7d8ce7.dc8fc"
            ]
        ]
    },
    {
        "id": "7f048c64.f3188c",
        "type": "comment",
        "z": "a643a892.8ea658",
        "name": "Device 1",
        "info": "",
        "x": 934,
        "y": 132,
        "wires": []
    },
    {
        "id": "9dd994af.e7c5f",
        "type": "comment",
        "z": "a643a892.8ea658",
        "name": "Receive Input from Device",
        "info": "",
        "x": 138,
        "y": 206,
        "wires": []
    },
    {
        "id": "6cd9253a.42acec",
        "type": "switch",
        "z": "a643a892.8ea658",
        "d": true,
        "name": "Route according to sender",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "FromDevice/1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FromDevice/2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FromDevice/3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FromDevice/4",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 581,
        "y": 577,
        "wires": [
            [
                "968b2078.6773c"
            ],
            [
                "2983bc81.153af4"
            ],
            [
                "17625290.f13e55"
            ],
            [
                "2cde44a5.11b7bc"
            ]
        ]
    },
    {
        "id": "24dc8fe3.05bf78",
        "type": "debug",
        "z": "a643a892.8ea658",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 188,
        "y": 383,
        "wires": []
    },
    {
        "id": "655ae349.52b6e4",
        "type": "mosca in",
        "z": "f1c56aa4.69aaf8",
        "mqtt_port": "1883",
        "mqtt_ws_port": "8080",
        "name": "MOSCA",
        "username": "",
        "password": "",
        "dburl": "",
        "x": 91,
        "y": 387,
        "wires": [
            []
        ]
    },
    {
        "id": "51e946de.d9c11",
        "type": "ui_template",
        "z": "f1c56aa4.69aaf8",
        "group": "",
        "name": "CSS-style overrides",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n/* These style overrides assume the \"Dark Theme\" is being used */\n\n/*\nUsed for dynamically amending menu/tab items\n:root {\n    --main-color: \"blue\";\n}\n[aria-label~=\"Your tab Name\"] {\n    background-color: var(--main-color,green);\n}\n\n[aria-label~=\"Home\"] + div > p::after {\n    content: 'woot' ;\n*/\n\nbody.nr-dashboard-theme {\n background-color: #333333;\n font-family: Calibri;\n}\nbutton, html, input, select, textarea {\n font-family: Calibri;\n}\nbody.nr-dashboard-theme md-content md-card {\n background-color: #33333300;\n color: #d0d0d0;\n}\n\nbody.nr-dashboard-theme md-toolbar {\n background-image: linear-gradient(to right, #404040, #737373);\n box-shadow: 0px 1px 20px #0000008a;\n}\n.nr-dashboard-theme ui-card-panel {\n background-image: linear-gradient(to bottom right, #404040, #737373);\n border: 1px solid #555555;\n box-shadow: 0 0 20px #00000066;\n}\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n color: #2eb82e;\n text-shadow: 0 0 2px black;\n}\n\n.nr-dashboard-theme .nr-dashboard-form-button {\n background-image: linear-gradient(to bottom right, #8a8a8a6e, #00000070);\n background-color: #00ad03;\n color: #d0d0d0;\n text-shadow: 0 0 2px #525252;\n border-radius:6px;\n}\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n background-image: linear-gradient(to bottom right, #8a8a8a6e, #00000070);\n background-color: #00ad03;\n color: #d0d0d0;\n text-shadow: 0 0 2px #525252;\n border-radius:6px;\n}\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n background-color: #00de00;\n}\n\n.nr-dashboard-theme .nr-dashboard-switch md-switch .md-thumb {\n background-image: linear-gradient(to bottom right, #48b349, #115009);\n}\n.nr-dashboard-button .md-button {\n box-shadow: 0 1px 3px 0 rgba(0,0,0,.26)!important;\n width: 100%!important;\n height: 100%!important;\n margin: 0!important;\n min-width: 0!important;\n min-height: 0!important;\n}\n.nr-dashboard-theme .nr-dashboard-slider .md-thumb:after {\n background-image: linear-gradient(to bottom right, #48b349, #115009);\n border-style: none;\n}\n.nr-dashboard-theme .nr-dashboard-numeric .value {\n background-color: #33333300;\n color:#d0d0d0;\n}\n\n.nr-dashboard-numeric .value {\n font-weight: 700;\n text-align: center;\n border: 0;\n}\n\n.nr-dashboard-form {\n display: inline-block;\n width: 100%;\n overflow-y: visible;\n}\n#SETTINGS_TEATED_cards {\n min-height: 260px;\n}\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "global",
        "x": 932,
        "y": 118,
        "wires": [
            []
        ],
        "info": "CSS Style overrides to the Node-RED Dark theme.\n\nFrom the Dashboard node information panel (View->Dashboard), select\n - Site: Options -> Node-RED theme everywhere\n - Theme: Style -> Dark"
    },
    {
        "id": "a84e81f5.dccd",
        "type": "ui_text_input",
        "z": "5536f4c.37c7e8c",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "e24bfb7c.315d5",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 266,
        "y": 91,
        "wires": [
            [
                "5274f0ee.9ef918"
            ]
        ]
    },
    {
        "id": "e7902671.fd03f8",
        "type": "ui_button",
        "z": "5536f4c.37c7e8c",
        "name": "",
        "group": "e24bfb7c.315d5",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Send Message",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-exclamation-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "ToDevice/Hint",
        "x": 286,
        "y": 169,
        "wires": [
            [
                "e6020c3c.bbdb18"
            ]
        ]
    },
    {
        "id": "5274f0ee.9ef918",
        "type": "change",
        "z": "5536f4c.37c7e8c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hint",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 275,
        "y": 132,
        "wires": [
            []
        ]
    },
    {
        "id": "a43f7caa.c0f9a",
        "type": "comment",
        "z": "5536f4c.37c7e8c",
        "name": "Custom Messages",
        "info": "",
        "x": 295.5,
        "y": 54,
        "wires": []
    },
    {
        "id": "e6020c3c.bbdb18",
        "type": "change",
        "z": "5536f4c.37c7e8c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "hint",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 363,
        "y": 223,
        "wires": [
            [
                "2502576b.8f9d5"
            ]
        ]
    },
    {
        "id": "b2c81ff5.95b6e",
        "type": "ui_dropdown",
        "z": "5536f4c.37c7e8c",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "f69627a5.565c98",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "options": [],
        "payload": "",
        "topic": "",
        "x": 659.5,
        "y": 178,
        "wires": [
            [
                "3e2d8f35.4424a8"
            ]
        ]
    },
    {
        "id": "ecc20504.76c2f",
        "type": "ui_button",
        "z": "5536f4c.37c7e8c",
        "name": "",
        "group": "f69627a5.565c98",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Send Hint",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "ToDevice/Hint",
        "x": 660.5,
        "y": 270,
        "wires": [
            [
                "10965695.f99239"
            ]
        ]
    },
    {
        "id": "3e2d8f35.4424a8",
        "type": "change",
        "z": "5536f4c.37c7e8c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "custommessage",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 225,
        "wires": [
            []
        ]
    },
    {
        "id": "cd5e8191.804e58",
        "type": "inject",
        "z": "5536f4c.37c7e8c",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"H1 Look lively, sunshine!\":\"Look lively, sunshine!\"},{\"H2 Look under the table\":\"Look under the table\"},{\"H3 Did you hear something?\":\"Did you hear something?\"}]",
        "payloadType": "json",
        "x": 648.5,
        "y": 88,
        "wires": [
            [
                "1b99ded3.1adc31"
            ]
        ]
    },
    {
        "id": "1b99ded3.1adc31",
        "type": "change",
        "z": "5536f4c.37c7e8c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 679.5,
        "y": 134,
        "wires": [
            [
                "b2c81ff5.95b6e"
            ]
        ]
    },
    {
        "id": "943aa747.ca93d8",
        "type": "comment",
        "z": "5536f4c.37c7e8c",
        "name": "Predefined Hints",
        "info": "",
        "x": 678.5,
        "y": 52,
        "wires": []
    },
    {
        "id": "10965695.f99239",
        "type": "change",
        "z": "5536f4c.37c7e8c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "custommessage",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 823,
        "y": 270,
        "wires": [
            [
                "3be894fe.8037fc"
            ]
        ]
    },
    {
        "id": "e3098b7b.17281",
        "type": "link in",
        "z": "f1c56aa4.69aaf8",
        "name": "Publish MQTT",
        "links": [
            "3be894fe.8037fc",
            "2502576b.8f9d5"
        ],
        "x": 173.5,
        "y": 362,
        "wires": [
            [
                "4b1e5ebc.1225f8"
            ]
        ]
    },
    {
        "id": "4b1e5ebc.1225f8",
        "type": "mqtt out",
        "z": "f1c56aa4.69aaf8",
        "name": "To MQTT",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "125f6c81.60151b",
        "x": 277,
        "y": 362,
        "wires": []
    },
    {
        "id": "2502576b.8f9d5",
        "type": "link out",
        "z": "5536f4c.37c7e8c",
        "name": "",
        "links": [
            "e3098b7b.17281"
        ],
        "x": 523.5,
        "y": 169,
        "wires": []
    },
    {
        "id": "3be894fe.8037fc",
        "type": "link out",
        "z": "5536f4c.37c7e8c",
        "name": "",
        "links": [
            "e3098b7b.17281"
        ],
        "x": 944,
        "y": 270,
        "wires": []
    },
    {
        "id": "ea7c9d3c.3af948",
        "type": "mqtt in",
        "z": "f1c56aa4.69aaf8",
        "name": "From MQTT",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "125f6c81.60151b",
        "x": 228,
        "y": 410,
        "wires": [
            [
                "2335be70.a87b12"
            ]
        ]
    },
    {
        "id": "2335be70.a87b12",
        "type": "link out",
        "z": "f1c56aa4.69aaf8",
        "name": "Incoming MQTT",
        "links": [
            "88d0a434.82e6e8"
        ],
        "x": 332.5,
        "y": 410,
        "wires": []
    },
    {
        "id": "ded041e7.0805a",
        "type": "ui_button",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "group": "45e2c4e.b46d43c",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "icon": "",
        "payload": "{     \"payload\": \"on\",     \"timeout\": 600,     \"warning\": 30 }",
        "payloadType": "json",
        "topic": "/game",
        "x": 109.5,
        "y": 82,
        "wires": [
            [
                "ec597459.3a2ed"
            ]
        ]
    },
    {
        "id": "3973ee3.c05a392",
        "type": "ui_button",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "group": "45e2c4e.b46d43c",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "",
        "payload": "{     \"payload\": \"cancel\" }",
        "payloadType": "json",
        "topic": "/game",
        "x": 109.5,
        "y": 121,
        "wires": [
            [
                "cde6e183.9d81e"
            ]
        ]
    },
    {
        "id": "1b8da0a1.d1640f",
        "type": "ui_button",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "group": "45e2c4e.b46d43c",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "icon": "",
        "payload": "{\"timeout\": 600 }",
        "payloadType": "json",
        "topic": "/game",
        "x": 108.5,
        "y": 159,
        "wires": [
            [
                "259dd425.35193c"
            ]
        ]
    },
    {
        "id": "a9590774.0750a8",
        "type": "inject",
        "z": "f1c56aa4.69aaf8",
        "name": "Tick",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 117.5,
        "y": 237,
        "wires": [
            [
                "367dc2b3.dd0346"
            ]
        ]
    },
    {
        "id": "fd5cb78c.8a9e3",
        "type": "change",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gameState",
                "pt": "global",
                "to": "playing",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 405.5,
        "y": 82,
        "wires": [
            []
        ]
    },
    {
        "id": "928b62e9.166cb8",
        "type": "change",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gameState",
                "pt": "global",
                "to": "stopped",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "timeRemaining",
                "pt": "msg",
                "to": "timeRemaining",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 387,
        "y": 121,
        "wires": [
            [
                "ece76a4f.03e0f"
            ]
        ]
    },
    {
        "id": "ec597459.3a2ed",
        "type": "switch",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "property": "gameState",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "playing",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 231.5,
        "y": 82,
        "wires": [
            [
                "fd5cb78c.8a9e3"
            ]
        ]
    },
    {
        "id": "cde6e183.9d81e",
        "type": "switch",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "property": "gameState",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "stopped",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 231,
        "y": 122,
        "wires": [
            [
                "928b62e9.166cb8"
            ]
        ]
    },
    {
        "id": "367dc2b3.dd0346",
        "type": "function",
        "z": "f1c56aa4.69aaf8",
        "name": "Update Game Timer",
        "func": "// The current timestamp is injected at the start of the flow\nvar currentTime = msg.payload;\nvar lastTickTime = global.get(\"lastTickTime\")||currentTime;\nvar timeRemaining = global.get(\"timeRemaining\")||0;\nvar gameState = global.get(\"gameState\");\n\nif(gameState == \"playing\") {\n    // Reduce the time remaining based on the amount of time\n    // that has elapsed since the last tick count\n    timeRemaining -= (currentTime - lastTickTime);\n    \n    // Update the global variable\n    global.set(\"timeRemaining\", timeRemaining);\n\n    if(timeRemaining < 60000) {\n        msg.timeColour = \"red\";\n    }\n    else {\n        msg.timeColour = \"limegreen\";\n    }\n}\nelse {\n    msg.timeColour = \"white\";\n}\n\n\n    // Update the msg to carry formatted string        \n    msg.timeRemaining = timeRemaining;\n    \n    global.set(\"lastTickTime\", currentTime);\n    node.status({fill:\"green\",shape:\"dot\",text:timeRemaining});\n    // Only need to update UI is timeRemaining has changed\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 237,
        "wires": [
            [
                "ece76a4f.03e0f"
            ]
        ]
    },
    {
        "id": "259dd425.35193c",
        "type": "change",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "timeRemaining",
                "pt": "global",
                "to": "3599999",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "timeRemaining",
                "pt": "msg",
                "to": "3599999",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "gameState",
                "pt": "global",
                "to": "stopped",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 259.5,
        "y": 159,
        "wires": [
            [
                "ece76a4f.03e0f"
            ]
        ]
    },
    {
        "id": "5e6816a.a837ae8",
        "type": "ui_template",
        "z": "f1c56aa4.69aaf8",
        "group": "45e2c4e.b46d43c",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<div layout=\"row\" layout-align=\"space-between\">   <!-- Possible layout-aligns include \"start center\" -->\n    <span class=\"label\">\n        Time Remaining <i class=\"fa fa-clock-o fa-2x nr-dashboard-ok\"></i>\n    </span> \n    <span class=\"value\" style=\"color:{{msg.timeColour}}; font-size:xx-large;\">\n        {{msg.formattedTimeRemaining}}\n    </span>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 702,
        "y": 171,
        "wires": [
            []
        ]
    },
    {
        "id": "ece76a4f.03e0f",
        "type": "function",
        "z": "f1c56aa4.69aaf8",
        "name": "Format Time",
        "func": "// Message from preceeding node is in milliseconds\nvar t = msg.timeRemaining / 1000;\nvar h = Math.floor(t / 3600);\nvar m = Math.floor(t % 3600 / 60);\nvar s = Math.floor(t % 3600 % 60);\n\n// Format into hh:mm:ss\nmsg.formattedTimeRemaining = (\"0\" + h).slice(-2) + \":\" + (\"0\" + m).slice(-2) + \":\" + (\"0\" + s).slice(-2);\n\n\nnode.status({fill:\"green\", shape:\"dot\", text:msg.formattedTimeRemaining});\n    \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 554,
        "y": 170,
        "wires": [
            [
                "5e6816a.a837ae8"
            ]
        ]
    },
    {
        "id": "ef60fba.40e6808",
        "type": "file",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "filename": "c:\\PropControl\\log.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 639.5,
        "y": 584,
        "wires": [
            []
        ]
    },
    {
        "id": "b84b171b.d8c39",
        "type": "ui_switch",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "label": "Logging",
        "tooltip": "",
        "group": "81e6573e.4fe518",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 421.5,
        "y": 540,
        "wires": [
            [
                "1ab62d09.27f3d3"
            ]
        ]
    },
    {
        "id": "5d808b91.dd3514",
        "type": "mqtt in",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "125f6c81.60151b",
        "x": 89.5,
        "y": 584,
        "wires": [
            [
                "7474fd7e.77679c"
            ]
        ]
    },
    {
        "id": "1ab62d09.27f3d3",
        "type": "change",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "logging",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 614.5,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "7474fd7e.77679c",
        "type": "switch",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "property": "logging",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 232.5,
        "y": 588,
        "wires": [
            [
                "24067db9.45996a"
            ]
        ]
    },
    {
        "id": "ddd97f7e.891478",
        "type": "change",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 238.5,
        "y": 540,
        "wires": [
            [
                "b84b171b.d8c39"
            ]
        ]
    },
    {
        "id": "24067db9.45996a",
        "type": "function",
        "z": "f1c56aa4.69aaf8",
        "name": "Create Log Entry",
        "func": "var d = new Date();\nvar t = d.getTime();\n\nvar filename = \"log.txt\";\n\nvar payload = {\"time\":t,\"payload\":msg.payload};\nmsg.payload = JSON.stringify(payload);\n\nmsg.filename = \"/PropControl/\" + filename;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 413.5,
        "y": 584,
        "wires": [
            [
                "ef60fba.40e6808",
                "69b66d88.85ed44"
            ]
        ]
    },
    {
        "id": "82680740.01604",
        "type": "inject",
        "z": "f1c56aa4.69aaf8",
        "name": "On Startup",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "Initialise",
        "payload": "",
        "payloadType": "date",
        "x": 507.5,
        "y": 352,
        "wires": [
            [
                "7cf793f4.ca7bc4"
            ]
        ]
    },
    {
        "id": "7cf793f4.ca7bc4",
        "type": "link out",
        "z": "f1c56aa4.69aaf8",
        "name": "OnStartup",
        "links": [
            "5a86ce1b.808ee8",
            "ed4608af.c6bb08",
            "8b62e7eb.55b618"
        ],
        "x": 672.5,
        "y": 352,
        "wires": []
    },
    {
        "id": "5a86ce1b.808ee8",
        "type": "link in",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "links": [
            "7cf793f4.ca7bc4"
        ],
        "x": 53.5,
        "y": 541,
        "wires": [
            [
                "ddd97f7e.891478"
            ]
        ]
    },
    {
        "id": "f5719325.b90148",
        "type": "inject",
        "z": "a643a892.8ea658",
        "d": true,
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "[{\"deviceID\":\"1\",\"description\":\"Hold Hands\",\"commands\":[\"SOLVE\",\"RESET\"]},{\"deviceID\":\"2\",\"description\":\"Haunted Mirror\",\"commands\":[\"SOLVE\",\"RESET\"]},{\"deviceID\":\"3\",\"description\":\"Connect the Wires\",\"commands\":[\"SOLVE\",\"RESET\"]}]",
        "payloadType": "json",
        "x": 188.5,
        "y": 746,
        "wires": [
            [
                "2f59e2c8.83563e"
            ]
        ]
    },
    {
        "id": "a80b12ec.0645d8",
        "type": "ui_template",
        "z": "a643a892.8ea658",
        "d": true,
        "group": "45e2c4e.b46d43c",
        "name": "",
        "order": 5,
        "width": 0,
        "height": 0,
        "format": "<script>\n    // Lambda function to access the Angular Scope\n    ;(function(scope) {\n        /*\n        //Have to use $watch so we pick up new, incoming msg's\n        scope.$watch('msg.payload', function(newVal, oldVal) {\n            console.log('- Scope.msg -')\n            console.dir(scope.msg)\n\n            scope.myCalc = scope.msg.payload.b * 2\n        })\n*/\n        // Function triggered by clicking on a div\n        scope.click = function(b) {\n            if ( ! scope.myNum ) scope.myNum = 0\n            scope.myNum++\n        }\n    })(scope)\n</script>\n<p>yay</p>\n<div layout=\"row\" layout-align=\"start center\" ng-repeat=\"x in msg.deviceList\">\n  <span flex style=\"color: green\">{{x.deviceID}}</span>\n  <span flex style=\"color: red\">{{x.description}}</span>\n  <span flex style=\"color: black\" ng-repeat=\"c in x.commands\">\n      <md-button class=\"filled touched bigfont rounded vibrate\" style=\"background-color:#27ae60\" ng-click=\"send({command: c})\"> \n    {{c}}\n</md-button> \n      </span>\n      \n   \n</div>\n<p>Woo</p>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 565.5,
        "y": 746,
        "wires": [
            [
                "50068829.051c38"
            ]
        ]
    },
    {
        "id": "50068829.051c38",
        "type": "debug",
        "z": "a643a892.8ea658",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 736.5,
        "y": 746,
        "wires": []
    },
    {
        "id": "2f59e2c8.83563e",
        "type": "change",
        "z": "a643a892.8ea658",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "deviceList",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370.5,
        "y": 746,
        "wires": [
            [
                "a80b12ec.0645d8"
            ]
        ]
    },
    {
        "id": "2ab2ab7a.83993c",
        "type": "comment",
        "z": "a643a892.8ea658",
        "name": "Send Output to Device",
        "info": "",
        "x": 1370,
        "y": 216,
        "wires": []
    },
    {
        "id": "a16c16f6.0cb6f8",
        "type": "comment",
        "z": "a643a892.8ea658",
        "name": "Log",
        "info": "",
        "x": 190,
        "y": 345,
        "wires": []
    },
    {
        "id": "bbc17f20.ebdb1",
        "type": "comment",
        "z": "f1c56aa4.69aaf8",
        "name": "MQTT Server Configuration",
        "info": "",
        "x": 160.5,
        "y": 320,
        "wires": []
    },
    {
        "id": "91b1d84a.f57c18",
        "type": "comment",
        "z": "f1c56aa4.69aaf8",
        "name": "Event Triggers",
        "info": "",
        "x": 493,
        "y": 312,
        "wires": []
    },
    {
        "id": "668ec647.822668",
        "type": "link out",
        "z": "f1c56aa4.69aaf8",
        "name": "MQTT Received From Device",
        "links": [],
        "x": 673.5,
        "y": 397,
        "wires": []
    },
    {
        "id": "ee709.cf9ab8f7",
        "type": "mqtt in",
        "z": "f1c56aa4.69aaf8",
        "name": "On MessageReceived",
        "topic": "FromDevice/#",
        "qos": "2",
        "datatype": "auto",
        "broker": "125f6c81.60151b",
        "x": 515,
        "y": 398,
        "wires": [
            [
                "668ec647.822668"
            ]
        ]
    },
    {
        "id": "768f0fe0.c5708",
        "type": "comment",
        "z": "f1c56aa4.69aaf8",
        "name": "Logging",
        "info": "",
        "x": 96,
        "y": 495,
        "wires": []
    },
    {
        "id": "ea6e4879.87c118",
        "type": "comment",
        "z": "f1c56aa4.69aaf8",
        "name": "Game Control",
        "info": "",
        "x": 129,
        "y": 43,
        "wires": []
    },
    {
        "id": "642c4e5e.35bfb",
        "type": "comment",
        "z": "f1c56aa4.69aaf8",
        "name": "Dashboard Styling",
        "info": "",
        "x": 922,
        "y": 79,
        "wires": []
    },
    {
        "id": "3525fb25.e773a4",
        "type": "exec",
        "z": "f1c56aa4.69aaf8",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Activate relay",
        "x": 619.5,
        "y": 842.5,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "23666d11.00398a",
        "type": "inject",
        "z": "f1c56aa4.69aaf8",
        "name": "Regular trigger",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 162.5,
        "y": 843,
        "wires": [
            [
                "52ccc186.aad878"
            ]
        ]
    },
    {
        "id": "52ccc186.aad878",
        "type": "function",
        "z": "f1c56aa4.69aaf8",
        "name": "Evaluate Math.random()",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 384.5,
        "y": 843,
        "wires": [
            [
                "3525fb25.e773a4"
            ]
        ]
    },
    {
        "id": "a559ffd1.1fe2c",
        "type": "ui_audio",
        "z": "27eb49da.3bf276",
        "name": "",
        "group": "45e2c4e.b46d43c",
        "voice": "",
        "always": true,
        "x": 766,
        "y": 127,
        "wires": []
    },
    {
        "id": "187b7079.56311",
        "type": "file in",
        "z": "27eb49da.3bf276",
        "name": "",
        "filename": "C:\\Users\\alast\\Music\\Doctor-Who-Theme-song.mp3",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 430,
        "y": 102,
        "wires": [
            [
                "a559ffd1.1fe2c"
            ]
        ]
    },
    {
        "id": "37c35b6a.215474",
        "type": "change",
        "z": "27eb49da.3bf276",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 551,
        "y": 152,
        "wires": [
            [
                "a559ffd1.1fe2c"
            ]
        ]
    },
    {
        "id": "5f0dd8e2.8d6ad",
        "type": "ui_button",
        "z": "27eb49da.3bf276",
        "name": "",
        "group": "f5bca747.818748",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Play BGM",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-play",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 153.5,
        "y": 102,
        "wires": [
            [
                "187b7079.56311"
            ]
        ]
    },
    {
        "id": "f0cca554.6169f",
        "type": "Mic",
        "z": "27eb49da.3bf276",
        "d": true,
        "name": "",
        "outputPayloadType": "stream",
        "endian": "little",
        "bitwidth": "16",
        "encoding": "signed-integer",
        "channels": "1",
        "device": "plughw:1,0",
        "rate": "22050",
        "silenceTimeout": 0,
        "exitOnSilence": false,
        "debug": false,
        "active": false,
        "x": 1218.5,
        "y": 293,
        "wires": [
            []
        ]
    },
    {
        "id": "fe9dc210.73576",
        "type": "ui_button",
        "z": "27eb49da.3bf276",
        "name": "",
        "group": "f5bca747.818748",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Stop BGM",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-stop",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 143,
        "y": 151,
        "wires": [
            [
                "37c35b6a.215474"
            ]
        ]
    },
    {
        "id": "6a1e221e.344564",
        "type": "ui_media",
        "z": "27eb49da.3bf276",
        "group": "3f238e3f.4dcf7a",
        "name": "",
        "width": 0,
        "height": 0,
        "order": 1,
        "category": "Room One",
        "file": "2019-06-10 17-33-32.mp4",
        "layout": "adjust",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 357,
        "y": 612,
        "wires": [
            []
        ]
    },
    {
        "id": "94dcfcbc.7e8688",
        "type": "inject",
        "z": "27eb49da.3bf276",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "https://ichef.bbci.co.uk/news/660/cpsprodpb/3861/production/_109133441_johnson2_getty.jpg",
        "payloadType": "str",
        "x": 222,
        "y": 611,
        "wires": [
            [
                "6a1e221e.344564"
            ]
        ]
    },
    {
        "id": "faa5d507.1b7558",
        "type": "inject",
        "z": "a643a892.8ea658",
        "name": "Simulate Device Update",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "FromDevice/1",
        "payload": "{\"status\":\"error\"}",
        "payloadType": "json",
        "x": 141.5,
        "y": 518,
        "wires": [
            [
                "6cd9253a.42acec",
                "8d7d8ce7.dc8fc"
            ]
        ]
    },
    {
        "id": "6945978.5a27ce8",
        "type": "inject",
        "z": "a643a892.8ea658",
        "name": "Simulate Device Registration",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "FromDevice/1",
        "payload": "{\"name\":\"test\",\"description\":\"test description\",\"status\":\"active\"}",
        "payloadType": "json",
        "x": 162,
        "y": 482,
        "wires": [
            [
                "6cd9253a.42acec",
                "8d7d8ce7.dc8fc"
            ]
        ]
    },
    {
        "id": "968b2078.6773c",
        "type": "ui_template",
        "z": "a643a892.8ea658",
        "group": "5b666055.8601",
        "name": "Prop 1",
        "order": 1,
        "width": 6,
        "height": 4,
        "format": "<!-- See https://material.angularjs.org/latest/api/directive/mdCard -->\n<!--\n<md-card-header>\n    <md-card-header-text>Header</md-card-header-text>\n</md-card-header>\n-->\n\n<!-- See https://fontawesome.com/v4.7.0/icons/ for icons -->\n<md-card-title>\n    <md-card-title-text>\n        <p class=\"md-headline\">{{msg.payload.name}}</p>\n        <!-- <p class=\"md-subhead\">Room One</p> -->\n    </md-card-title-text>\n    <!--\n    <md-button\n        style=\"color: white !important\"\n        ng-class=\"msg.payload=='OFFLINE' ? 'md-accent md-raised md-hue-2 jk-boldwhite' : 'md-primary md-hue-3 jk-boldblack'\"\n        ng-click=\"msg.payload=(msg.payload=='ACTIVE' ? 'SOLVED' : 'ACTIVE'); send(msg);\"\n        ng-attr-title=\"Click to turn {{msg.payload=='ACTIVE' ? 'SOLVED' : 'ACTIVE'}}\"\n    >\n    -->\n    <span\n        style=\"color: white !important\"\n        ng-class=\"msg.payload=='OFFLINE' ? 'md-accent md-raised md-hue-2 jk-boldwhite' : 'md-primary md-hue-3 jk-boldblack'\"\n    >{{msg.payload.status?msg.payload.status:'Unknown'}}</span>\n    <!--\n    </md-button>\n    -->\n</md-card-title>\n<md-card-content>\n    <p>\n        {{msg.payload.description?msg.payload.description:'Unknown'}}\n    </p>\n</md-card-content>\n<md-card-actions layout=\"row\" layout-align=\"start end\">\n    <md-button ng-click=\"msg.topic='ToDevice/1'; msg.payload.command='RESET'; send(msg);\" ng-style=\"{'background-color':'blue', 'color':'white'}\">\n        <ui-icon icon=\"fa-lock\"></ui-icon>RESET\n    </md-button>\n    <md-button ng-click=\"msg.topic='ToDevice/1'; msg.payload.command='SOLVE'; send(msg);\" ng-style=\"{'background-color':'green', 'color':'white'}\">\n        <ui-icon icon=\"fa-unlock\"></ui-icon>SOLVE\n    </md-button>\n    <!--\n    <md-card-icon-actions>\n        <md-button class=\"md-icon-button\" aria-label=\"icon\">\n            <md-icon md-svg-icon=\"icon\"></md-icon>\n        </md-button>\n    </md-card-icon-actions>\n    -->\n</md-card-actions>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 933,
        "y": 192,
        "wires": [
            [
                "20cea43a.21cdc4"
            ]
        ]
    },
    {
        "id": "53987865.55942",
        "type": "ola",
        "z": "3dae2fcf.ec90a",
        "name": "",
        "host": "192.168.1.33",
        "port": 9090,
        "universe": 1,
        "size": 512,
        "x": 385,
        "y": 191,
        "wires": []
    },
    {
        "id": "f9b09286.87eac8",
        "type": "inject",
        "z": "3dae2fcf.ec90a",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"channels\":[{\"channel\":1,\"value\":64},{\"channel\":2,\"value\":101},{\"channel\":3,\"value\":92}]}",
        "payloadType": "json",
        "x": 186,
        "y": 168,
        "wires": [
            [
                "53987865.55942"
            ]
        ]
    },
    {
        "id": "e22bfead.315308",
        "type": "comment",
        "z": "3dae2fcf.ec90a",
        "name": "References",
        "info": "https://wiki.openlighting.org/index.php/ArtNet\n\nhttps://flows.nodered.org/node/node-red-contrib-ola",
        "x": 208.5,
        "y": 119,
        "wires": []
    },
    {
        "id": "64ef310a.6662",
        "type": "inject",
        "z": "3dae2fcf.ec90a",
        "name": "Fade To Black",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"transition\":\"fade\",\"time\":5000,\"channels\":[{\"channel\":1,\"value\":0},{\"channel\":2,\"value\":0},{\"channel\":3,\"value\":0}]}",
        "payloadType": "json",
        "x": 204,
        "y": 214,
        "wires": [
            [
                "53987865.55942"
            ]
        ]
    },
    {
        "id": "e5c2c55a.98352",
        "type": "function",
        "z": "f1c56aa4.69aaf8",
        "name": "Initialise Global Vars",
        "func": "global.set(\"timeRemaining\", 3600000);\nglobal.set(\"currentTime\", Date.now());",
        "outputs": 1,
        "noerr": 0,
        "x": 941.5,
        "y": 352,
        "wires": [
            []
        ]
    },
    {
        "id": "ed4608af.c6bb08",
        "type": "link in",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "links": [
            "7cf793f4.ca7bc4"
        ],
        "x": 781.5,
        "y": 352,
        "wires": [
            [
                "e5c2c55a.98352"
            ]
        ]
    },
    {
        "id": "7b246cda.cbb2e4",
        "type": "ui_dropdown",
        "z": "27eb49da.3bf276",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "f5bca747.818748",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": false,
        "options": [
            {
                "label": "Heavy Footsteps",
                "value": "C:\\Users\\alast\\Music\\sfx\\heavy_footsteps.wav",
                "type": "str"
            },
            {
                "label": "Door Creak",
                "value": "C:\\Users\\alast\\Music\\sfx\\gate_creak.mp3",
                "type": "str"
            },
            {
                "label": "Music Box",
                "value": "C:\\Users\\alast\\Music\\sfx\\musicbox.mp3",
                "type": "str"
            },
            {
                "label": "Floorboard creak",
                "value": "C:\\Users\\alast\\Music\\sfx\\floorboard_creak.wav",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 154.5,
        "y": 288,
        "wires": [
            [
                "efe3136b.e1d558"
            ]
        ]
    },
    {
        "id": "46066e00.0455ac",
        "type": "ui_button",
        "z": "27eb49da.3bf276",
        "name": "",
        "group": "f5bca747.818748",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Play SFX",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-volume-up",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 153,
        "y": 349,
        "wires": [
            [
                "78f21891.dd4fa8"
            ]
        ]
    },
    {
        "id": "d907037b.3b114",
        "type": "file in",
        "z": "27eb49da.3bf276",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 518,
        "y": 320,
        "wires": [
            [
                "92da5acb.2518e"
            ]
        ]
    },
    {
        "id": "92da5acb.2518e",
        "type": "ui_audio",
        "z": "27eb49da.3bf276",
        "name": "",
        "group": "45e2c4e.b46d43c",
        "voice": "",
        "always": true,
        "x": 675,
        "y": 319,
        "wires": []
    },
    {
        "id": "78f21891.dd4fa8",
        "type": "change",
        "z": "27eb49da.3bf276",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "filename",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 329.5,
        "y": 350,
        "wires": [
            [
                "d907037b.3b114"
            ]
        ]
    },
    {
        "id": "81f48f82.0edd88",
        "type": "catch",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 901.5,
        "y": 563,
        "wires": [
            [
                "bf15649f.9b03a8"
            ]
        ]
    },
    {
        "id": "bf15649f.9b03a8",
        "type": "debug",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1062.5,
        "y": 591,
        "wires": []
    },
    {
        "id": "fe61eff6.d8f4e8",
        "type": "complete",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "scope": [],
        "uncaught": false,
        "x": 892.5,
        "y": 603,
        "wires": [
            [
                "bf15649f.9b03a8"
            ]
        ]
    },
    {
        "id": "efe3136b.e1d558",
        "type": "change",
        "z": "27eb49da.3bf276",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320.5,
        "y": 278,
        "wires": [
            []
        ]
    },
    {
        "id": "f52c21b7.ca7598",
        "type": "comment",
        "z": "f1c56aa4.69aaf8",
        "name": "Exception Handling",
        "info": "",
        "x": 930,
        "y": 519,
        "wires": []
    },
    {
        "id": "2983bc81.153af4",
        "type": "ui_template",
        "z": "a643a892.8ea658",
        "group": "5b666055.8601",
        "name": "Prop 2",
        "order": 2,
        "width": 6,
        "height": 4,
        "format": "<!-- See https://material.angularjs.org/latest/api/directive/mdCard -->\n<!--\n<md-card-header>\n    <md-card-header-text>Header</md-card-header-text>\n</md-card-header>\n-->\n\n<!-- See https://fontawesome.com/v4.7.0/icons/ for icons -->\n<md-card-title>\n    <md-card-title-text>\n        <p class=\"md-headline\">Fountain</p>\n        <!-- <p class=\"md-subhead\">Room One</p> -->\n    </md-card-title-text>\n    <md-button\n        style=\"color: white !important\"\n        ng-class=\"msg.payload=='OFFLINE' ? 'md-accent md-raised md-hue-2 jk-boldwhite' : 'md-primary md-hue-3 jk-boldblack'\"\n        ng-click=\"msg.payload=(msg.payload=='ACTIVE' ? 'SOLVED' : 'ACTIVE'); send(msg);\"\n        ng-attr-title=\"Click to turn {{msg.payload=='ACTIVE' ? 'SOLVED' : 'ACTIVE'}}\"\n    >\n        {{msg.payload?msg.payload:'Unknown'}}\n    </md-button>\n</md-card-title>\n<md-card-content>\n    <p>\n        Fountain tap must be turned on\n    </p>\n</md-card-content>\n<md-card-actions layout=\"row\" layout-align=\"start end\">\n    <md-button ng-click=\"msg.topic='ToDevice/2'; msg.payload='RESET'; send(msg);\" ng-style=\"{'background-color':'blue', 'color':'white'}\">\n        <ui-icon icon=\"fa-lock\"></ui-icon>RESET\n    </md-button>\n    <md-button ng-click=\"msg.topic='ToDevice/2'; msg.payload='SOLVE'; send(msg);\" ng-style=\"{'background-color':'green', 'color':'white'}\">\n        <ui-icon icon=\"fa-unlock\"></ui-icon>SOLVE\n    </md-button>\n    <!--\n    <md-card-icon-actions>\n        <md-button class=\"md-icon-button\" aria-label=\"icon\">\n            <md-icon md-svg-icon=\"icon\"></md-icon>\n        </md-button>\n    </md-card-icon-actions>\n    -->\n</md-card-actions>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 930,
        "y": 230,
        "wires": [
            [
                "20cea43a.21cdc4"
            ]
        ]
    },
    {
        "id": "17625290.f13e55",
        "type": "ui_template",
        "z": "a643a892.8ea658",
        "group": "5b666055.8601",
        "name": "Prop 3",
        "order": 3,
        "width": 6,
        "height": 4,
        "format": "<!-- See https://material.angularjs.org/latest/api/directive/mdCard -->\n<!--\n<md-card-header>\n    <md-card-header-text>Header</md-card-header-text>\n</md-card-header>\n-->\n\n<!-- See https://fontawesome.com/v4.7.0/icons/ for icons -->\n<md-card-title>\n    <md-card-title-text>\n        <p class=\"md-headline\">Retrieve Coin</p>\n        <!-- <p class=\"md-subhead\">Room One</p> -->\n    </md-card-title-text>\n    <md-button\n        style=\"color: white !important\"\n        ng-class=\"msg.payload=='OFFLINE' ? 'md-accent md-raised md-hue-2 jk-boldwhite' : 'md-primary md-hue-3 jk-boldblack'\"\n        ng-click=\"msg.payload=(msg.payload=='ACTIVE' ? 'SOLVED' : 'ACTIVE'); send(msg);\"\n        ng-attr-title=\"Click to turn {{msg.payload=='ACTIVE' ? 'SOLVED' : 'ACTIVE'}}\"\n    >\n        {{msg.payload?msg.payload:'Unknown'}}\n    </md-button>\n</md-card-title>\n<md-card-content>\n    <p>\n        Coin must be retrieved from the well\n    </p>\n</md-card-content>\n<md-card-actions layout=\"row\" layout-align=\"start end\">\n    <md-button ng-click=\"msg.topic='ToDevice/3'; msg.payload='RESET'; send(msg);\" ng-style=\"{'background-color':'blue', 'color':'white'}\">\n        <ui-icon icon=\"fa-lock\"></ui-icon>RESET\n    </md-button>\n    <md-button ng-click=\"msg.topic='ToDevice/3'; msg.payload='SOLVE'; send(msg);\" ng-style=\"{'background-color':'green', 'color':'white'}\">\n        <ui-icon icon=\"fa-unlock\"></ui-icon>SOLVE\n    </md-button>\n    <!--\n    <md-card-icon-actions>\n        <md-button class=\"md-icon-button\" aria-label=\"icon\">\n            <md-icon md-svg-icon=\"icon\"></md-icon>\n        </md-button>\n    </md-card-icon-actions>\n    -->\n</md-card-actions>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 929,
        "y": 271,
        "wires": [
            [
                "20cea43a.21cdc4"
            ]
        ]
    },
    {
        "id": "2cde44a5.11b7bc",
        "type": "ui_template",
        "z": "a643a892.8ea658",
        "group": "5b666055.8601",
        "name": "Prop 4",
        "order": 4,
        "width": 6,
        "height": 4,
        "format": "<!-- See https://material.angularjs.org/latest/api/directive/mdCard -->\n<!--\n<md-card-header>\n    <md-card-header-text>Header</md-card-header-text>\n</md-card-header>\n-->\n\n<!-- See https://fontawesome.com/v4.7.0/icons/ for icons -->\n<md-card-title>\n    <md-card-title-text>\n        <p class=\"md-headline\">Offering to Gods</p>\n        <!-- <p class=\"md-subhead\">Room One</p> -->\n    </md-card-title-text>\n    <md-button\n        style=\"color: white !important\"\n        ng-class=\"msg.payload=='OFFLINE' ? 'md-accent md-raised md-hue-2 jk-boldwhite' : 'md-primary md-hue-3 jk-boldblack'\"\n        ng-click=\"msg.payload=(msg.payload=='ACTIVE' ? 'SOLVED' : 'ACTIVE'); send(msg);\"\n        ng-attr-title=\"Click to turn {{msg.payload=='ACTIVE' ? 'SOLVED' : 'ACTIVE'}}\"\n    >\n        {{msg.payload?msg.payload:'Unknown'}}\n    </md-button>\n</md-card-title>\n<md-card-content>\n    <p>\n        Coin must be given as offering to the gods\n    </p>\n</md-card-content>\n<md-card-actions layout=\"row\" layout-align=\"start end\">\n    <md-button ng-click=\"msg.topic='ToDevice/4'; msg.payload='RESET'; send(msg);\" ng-style=\"{'background-color':'blue', 'color':'white'}\">\n        <ui-icon icon=\"fa-lock\"></ui-icon>RESET\n    </md-button>\n    <md-button ng-click=\"msg.topic='ToDevice/4'; msg.payload='SOLVE'; send(msg);\" ng-style=\"{'background-color':'green', 'color':'white'}\">\n        <ui-icon icon=\"fa-unlock\"></ui-icon>SOLVE\n    </md-button>\n    <!--\n    <md-card-icon-actions>\n        <md-button class=\"md-icon-button\" aria-label=\"icon\">\n            <md-icon md-svg-icon=\"icon\"></md-icon>\n        </md-button>\n    </md-card-icon-actions>\n    -->\n</md-card-actions>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 931,
        "y": 309,
        "wires": [
            [
                "20cea43a.21cdc4"
            ]
        ]
    },
    {
        "id": "4d6b64d1.35db8c",
        "type": "ui_template",
        "z": "f1c56aa4.69aaf8",
        "group": "81e6573e.4fe518",
        "name": "Log Display",
        "order": 4,
        "width": "30",
        "height": 2,
        "format": "<div ng-repeat=\"line in msg.payload track by $index\">\n  <div ng-style=\"{'margin-bottom':'1em'}\">{{line}}</div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 740,
        "y": 673,
        "wires": [
            []
        ]
    },
    {
        "id": "69b66d88.85ed44",
        "type": "function",
        "z": "f1c56aa4.69aaf8",
        "name": "Accumulate",
        "func": "// Use a fn context variable to track\n// the output lines\nif ( msg.payload === false ) {\n    // This lets us reset the log list\n    // if we want to, just inject a false payload\n    var lines = [];\n} else {\n    var lines = flow.get('logLines')|| [];\n\n    // Add the new output TO THE START\n    // so that the latest output is at the top\n    // of the displayed page\n    lines.unshift(msg.payload);\n\n    // # lines could get VERY large so cause memory\n    // issues, limit to 200\n    if ( lines.length > 200 ) {\n        // too big so drop the last element\n        lines.pop();\n    }\n}\n\n// save the total output in the context var\nflow.set('logLines',lines);\n\n// output all the lines to the UI template\nmsg.payload = lines;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 673,
        "wires": [
            [
                "4d6b64d1.35db8c"
            ]
        ]
    },
    {
        "id": "c2024db6.bbd3a",
        "type": "inject",
        "z": "f1c56aa4.69aaf8",
        "name": "Clear Log Display",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 363,
        "y": 748,
        "wires": [
            [
                "69b66d88.85ed44"
            ]
        ]
    },
    {
        "id": "19a282bf.c46905",
        "type": "comment",
        "z": "f1c56aa4.69aaf8",
        "name": "Output Node-Red log to Dashboard (UI)",
        "info": "See http://flows.nodered.org/flow/6dc1a137075ad93cd7c00224681afeda",
        "x": 293,
        "y": 638,
        "wires": []
    },
    {
        "id": "727f7bf8.b23f9c",
        "type": "ui_button",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "group": "81e6573e.4fe518",
        "order": 2,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Clear Log",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "false",
        "payloadType": "bool",
        "topic": "",
        "x": 317.5,
        "y": 698,
        "wires": [
            [
                "69b66d88.85ed44"
            ]
        ]
    },
    {
        "id": "37c139e7.e711b6",
        "type": "comment",
        "z": "27eb49da.3bf276",
        "name": "Video",
        "info": "",
        "x": 208.5,
        "y": 563,
        "wires": []
    },
    {
        "id": "c8227870.707a18",
        "type": "comment",
        "z": "f1c56aa4.69aaf8",
        "name": "Random Event Triggers",
        "info": "",
        "x": 143,
        "y": 801,
        "wires": []
    },
    {
        "id": "8b62e7eb.55b618",
        "type": "link in",
        "z": "a643a892.8ea658",
        "name": "",
        "links": [
            "7cf793f4.ca7bc4"
        ],
        "x": 851.5,
        "y": 585,
        "wires": [
            [
                "7ab294e3.ad239c"
            ]
        ]
    },
    {
        "id": "7ab294e3.ad239c",
        "type": "function",
        "z": "a643a892.8ea658",
        "name": "",
        "func": "var msg = {\n    \"PropList\" : [\n        {\n            \"Name\" : \"Prop 1\",\n            \"Descirpiton\" : \"Description of prop 1\",\n            \"Topic\" : \"ToDevice/1\"\n        },\n        {\n            \"Name\" : \"Prop 2\",\n            \"Descirpiton\" : \"Description of prop 2\",\n            \"Topic\" : \"ToDevice/2\"\n        },\n        {\n            \"Name\" : \"Prop 3\",\n            \"Descirpiton\" : \"Description of prop 3\",\n            \"Topic\" : \"ToDevice/3\"\n        }\n    ]\n};\n\n// global.set(\"Props\", \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 964.5,
        "y": 604,
        "wires": [
            [
                "59748e8.3dfd2f",
                "18d6ea77.17f8f6"
            ]
        ]
    },
    {
        "id": "59748e8.3dfd2f",
        "type": "debug",
        "z": "a643a892.8ea658",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 949.5,
        "y": 451,
        "wires": []
    },
    {
        "id": "18d6ea77.17f8f6",
        "type": "ui_template",
        "z": "a643a892.8ea658",
        "group": "45e2c4e.b46d43c",
        "name": "",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "<div ng-bind-html=\"msg\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1138.5,
        "y": 576,
        "wires": [
            []
        ]
    },
    {
        "id": "8fa43720.89a838",
        "type": "inject",
        "z": "a643a892.8ea658",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"prop\":{\"name\":\"test\",\"description\":\"test description\",\"status\":\"active\"}}",
        "payloadType": "json",
        "x": 772.5,
        "y": 41,
        "wires": [
            [
                "968b2078.6773c",
                "3d0039a1.73949e"
            ]
        ]
    },
    {
        "id": "3d0039a1.73949e",
        "type": "debug",
        "z": "a643a892.8ea658",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1040.5,
        "y": 39,
        "wires": []
    },
    {
        "id": "1ac77fd1.25c1e",
        "type": "inject",
        "z": "a643a892.8ea658",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"prop\":{\"status\":\"solved\"}}",
        "payloadType": "json",
        "x": 555,
        "y": 139,
        "wires": [
            [
                "968b2078.6773c"
            ]
        ]
    },
    {
        "id": "8d7d8ce7.dc8fc",
        "type": "function",
        "z": "a643a892.8ea658",
        "name": "Parse JSON and update global values",
        "func": "// Identify which prop sent the update\nvar topicparts = msg.topic.split('/');\nvar deviceID = topicparts[1];\n\n// Create a new object to represent the current prop state\nvar prop = {};\n\n// Get the current stored value of this prop,\n// Or create a new entry if we didn't previously know about it\nvar propList = global.get(\"propList\") || {};\nif(propList[deviceID]){\n    prop = propList[deviceID];\n}\n\n// Now loop over the incoming values and update the stored state\nfor (var key in msg.payload) {\n  if (msg.payload.hasOwnProperty(key)) {\n    prop[key] = msg.payload[key];\n  }\n}\n\n// Update the entry for this prop in the global array\npropList[deviceID] = prop;\nglobal.set(\"propList\", propList);\n\n// Pass the updated status through the message flow\nmsg.payload = prop;\n\n// Trigger the appropriate output\nswitch(deviceID){\n    case \"1\":\n        return [ msg, null, null, null ];\n        break;\n    case \"2\" :\n        return [ null, msg, null, null ];\n        break;\n}",
        "outputs": 4,
        "noerr": 0,
        "x": 568.5,
        "y": 423,
        "wires": [
            [
                "968b2078.6773c",
                "59748e8.3dfd2f"
            ],
            [
                "2983bc81.153af4"
            ],
            [
                "17625290.f13e55"
            ],
            [
                "2cde44a5.11b7bc"
            ]
        ]
    },
    {
        "id": "4a9bb1de.904808",
        "type": "json",
        "z": "a643a892.8ea658",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 508.5,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "2f11985f.c033a",
        "type": "function",
        "z": "a643a892.8ea658",
        "name": "",
        "func": "global.set(\"propList\", {});\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 247.5,
        "y": 80,
        "wires": []
    },
    {
        "id": "d2cb1d9d.f3bbf8",
        "type": "inject",
        "z": "a643a892.8ea658",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 112.5,
        "y": 80,
        "wires": [
            [
                "2f11985f.c033a"
            ]
        ]
    },
    {
        "id": "d4b244ba.af7838",
        "type": "comment",
        "z": "a643a892.8ea658",
        "name": "Reset global vars",
        "info": "",
        "x": 122.5,
        "y": 43,
        "wires": []
    },
    {
        "id": "d2dacd9d.f380b",
        "type": "ui_ui_control",
        "z": "f1c56aa4.69aaf8",
        "name": "",
        "events": "all",
        "x": 888.5,
        "y": 196,
        "wires": [
            [
                "3eb18f3c.59f83"
            ]
        ]
    },
    {
        "id": "5ec41833.a13368",
        "type": "function",
        "z": "a643a892.8ea658",
        "name": "Get latest state",
        "func": "var propList = global.get(\"propList\") || {};\n\nvar msg1 = propList[0];\nvar msg2 = propList[2];\n\nreturn [msg1, msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 639.5,
        "y": 243,
        "wires": [
            [
                "968b2078.6773c",
                "59748e8.3dfd2f"
            ],
            []
        ]
    },
    {
        "id": "3eb18f3c.59f83",
        "type": "link out",
        "z": "f1c56aa4.69aaf8",
        "name": "UI Update",
        "links": [
            "c8dc336b.a64e78"
        ],
        "x": 992.5,
        "y": 196,
        "wires": []
    },
    {
        "id": "c8dc336b.a64e78",
        "type": "link in",
        "z": "a643a892.8ea658",
        "name": "",
        "links": [
            "3eb18f3c.59f83"
        ],
        "x": 462.5,
        "y": 244,
        "wires": [
            [
                "5ec41833.a13368"
            ]
        ]
    },
    {
        "id": "20cea43a.21cdc4",
        "type": "change",
        "z": "a643a892.8ea658",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.command",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1137.5,
        "y": 244,
        "wires": [
            [
                "ec3173a4.f81ba",
                "59748e8.3dfd2f"
            ]
        ]
    },
    {
        "id": "e5abc7b2.61e73",
        "type": "comment",
        "z": "f1c56aa4.69aaf8",
        "name": "On browser refresh",
        "info": "https://discourse.nodered.org/t/data-not-retained-with-a-browser-refresh/976/6",
        "x": 909.5,
        "y": 159,
        "wires": []
    },
    {
        "id": "e469d705.80c4b",
        "type": "ui_text_input",
        "z": "35c48219.d87086",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "46d54615.b8f8e8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 266,
        "y": 91,
        "wires": [
            [
                "90369cd3.d74ad8"
            ]
        ]
    },
    {
        "id": "f926a524.87c2a8",
        "type": "ui_button",
        "z": "35c48219.d87086",
        "name": "",
        "group": "46d54615.b8f8e8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Send Message",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-exclamation-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "ToDevice/Hint",
        "x": 146,
        "y": 158,
        "wires": [
            [
                "5f0b605f.730cf",
                "f03f5c71.97b778"
            ]
        ]
    },
    {
        "id": "90369cd3.d74ad8",
        "type": "change",
        "z": "35c48219.d87086",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "message",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 441,
        "y": 91,
        "wires": [
            []
        ]
    },
    {
        "id": "23aee1d9.5c743e",
        "type": "comment",
        "z": "35c48219.d87086",
        "name": "Custom Message that plays audio SFX when displayed and clears after a set amount of time",
        "info": "",
        "x": 525.5,
        "y": 47,
        "wires": []
    },
    {
        "id": "5f0b605f.730cf",
        "type": "change",
        "z": "35c48219.d87086",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "message",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 345,
        "y": 159,
        "wires": [
            [
                "786f86b9.b18f48"
            ]
        ]
    },
    {
        "id": "f489b4f.77216c8",
        "type": "ui_button",
        "z": "f5a6f1b2.e1c8b8",
        "name": "",
        "group": "d4775169.bf997",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "Start",
        "tooltip": "",
        "color": "",
        "bgcolor": "green",
        "icon": "fa-play",
        "payload": "{\"msg\":{\"payload\":\"gamestart\",\"timeout\":600,\"warning\":30}}",
        "payloadType": "json",
        "topic": "/game",
        "x": 233.5,
        "y": 119,
        "wires": [
            [
                "bf8f4db6.72037"
            ]
        ]
    },
    {
        "id": "e513edce.c7954",
        "type": "ui_button",
        "z": "f5a6f1b2.e1c8b8",
        "name": "",
        "group": "d4775169.bf997",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "Stop",
        "tooltip": "",
        "color": "",
        "bgcolor": "red",
        "icon": "fa-stop",
        "payload": "{     \"payload\": \"cancel\" }",
        "payloadType": "json",
        "topic": "/game",
        "x": 233.5,
        "y": 169,
        "wires": [
            [
                "33f3733e.3c5734"
            ]
        ]
    },
    {
        "id": "7a7d5c99.79b90c",
        "type": "ui_button",
        "z": "f5a6f1b2.e1c8b8",
        "name": "",
        "group": "d4775169.bf997",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "orange",
        "icon": "fa-fast-backward",
        "payload": "{\"timeout\": 600 }",
        "payloadType": "json",
        "topic": "/game",
        "x": 232.5,
        "y": 222,
        "wires": [
            [
                "f95def24.f8cbd",
                "c9289f5e.1fb3b8"
            ]
        ]
    },
    {
        "id": "70e0bd06.9b2fbc",
        "type": "inject",
        "z": "f5a6f1b2.e1c8b8",
        "name": "Tick",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 89.5,
        "y": 72,
        "wires": [
            [
                "938c3e12.54529"
            ]
        ]
    },
    {
        "id": "4b7f5b26.530a54",
        "type": "change",
        "z": "f5a6f1b2.e1c8b8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gameState",
                "pt": "global",
                "to": "playing",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 529.5,
        "y": 119,
        "wires": [
            [
                "b32763f3.44a74"
            ]
        ]
    },
    {
        "id": "5e3ddd53.b75afc",
        "type": "change",
        "z": "f5a6f1b2.e1c8b8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gameState",
                "pt": "global",
                "to": "stopped",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "timeRemaining",
                "pt": "msg",
                "to": "timeRemaining",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 511,
        "y": 169,
        "wires": [
            [
                "77ad8e3.0d3aaf",
                "171ea618.d8a322"
            ]
        ]
    },
    {
        "id": "bf8f4db6.72037",
        "type": "switch",
        "z": "f5a6f1b2.e1c8b8",
        "name": "",
        "property": "gameState",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "playing",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 355.5,
        "y": 119,
        "wires": [
            [
                "4b7f5b26.530a54"
            ]
        ]
    },
    {
        "id": "33f3733e.3c5734",
        "type": "switch",
        "z": "f5a6f1b2.e1c8b8",
        "name": "",
        "property": "gameState",
        "propertyType": "global",
        "rules": [
            {
                "t": "neq",
                "v": "stopped",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 354,
        "y": 169,
        "wires": [
            [
                "5e3ddd53.b75afc"
            ]
        ]
    },
    {
        "id": "4d7e1089.00cba",
        "type": "function",
        "z": "f5a6f1b2.e1c8b8",
        "name": "Update Game Timer",
        "func": "// The current timestamp is injected at the start of the flow\nvar currentTime = msg.payload;\nvar lastTickTime = global.get(\"lastTickTime\")||currentTime;\nvar timeRemaining = global.get(\"timeRemaining\")||0;\nvar gameState = global.get(\"gameState\");\n\nif(gameState == \"playing\") {\n    // Reduce the time remaining based on the amount of time\n    // that has elapsed since the last tick count\n    timeRemaining -= (currentTime - lastTickTime);\n    \n    // Update the global variable\n    global.set(\"timeRemaining\", timeRemaining);\n\n    if(timeRemaining < 60000) {\n        msg.timeColour = \"red\";\n    }\n    else {\n        msg.timeColour = \"limegreen\";\n    }\n}\nelse {\n    msg.timeColour = \"white\";\n}\n\n    // Update the msg to carry formatted string        \n    msg.timeRemaining = timeRemaining;\n    \n    global.set(\"lastTickTime\", currentTime);\n    node.status({fill:\"green\",shape:\"dot\",text:timeRemaining});\n    // Only need to update UI is timeRemaining has changed\n    return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 516,
        "y": 285,
        "wires": [
            [
                "77ad8e3.0d3aaf"
            ]
        ]
    },
    {
        "id": "f95def24.f8cbd",
        "type": "change",
        "z": "f5a6f1b2.e1c8b8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "timeRemaining",
                "pt": "global",
                "to": "3599999",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "timeRemaining",
                "pt": "msg",
                "to": "3599999",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "gameState",
                "pt": "global",
                "to": "stopped",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 383.5,
        "y": 222,
        "wires": [
            [
                "77ad8e3.0d3aaf"
            ]
        ]
    },
    {
        "id": "708ca4ee.e8572c",
        "type": "ui_template",
        "z": "f5a6f1b2.e1c8b8",
        "group": "d4775169.bf997",
        "name": "",
        "order": 1,
        "width": "6",
        "height": "4",
        "format": "<md-card-title>\n    <md-card-title-text>\n        <p class=\"md-headline\">Time Remaining</p>\n    </md-card-title-text>\n    <span ng-class=\"'fa fa-clock-o fa-2x'\"></span>\n</md-card-title>\n<md-card-content>\n    <div style=\"text-align:center\">\n        <span class=\"value\" style=\"color:{{msg.timeColour}}; font-size:3em;\">\n            {{msg.formattedTimeRemaining}}\n        </span>\n    </div>\n</md-card-content>\n\n\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 1008,
        "y": 221,
        "wires": [
            []
        ]
    },
    {
        "id": "77ad8e3.0d3aaf",
        "type": "function",
        "z": "f5a6f1b2.e1c8b8",
        "name": "Format Time As HH:MM:SS",
        "func": "// msg.timeRemaining is in milliseconds\nvar t = msg.timeRemaining / 1000;\nvar h = Math.floor(t / 3600);\nvar m = Math.floor(t % 3600 / 60);\nvar s = Math.floor(t % 3600 % 60);\n\n// Format into hh:mm:ss\nmsg.formattedTimeRemaining = (\"0\" + h).slice(-2) + \":\" + (\"0\" + m).slice(-2) + \":\" + (\"0\" + s).slice(-2);\n\n// Update the editor node\nnode.status({fill:\"green\", shape:\"dot\", text:msg.formattedTimeRemaining});\n\n// Forward the message along the flow\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 221,
        "wires": [
            [
                "708ca4ee.e8572c"
            ]
        ]
    },
    {
        "id": "c7ef37c.a770748",
        "type": "inject",
        "z": "f5a6f1b2.e1c8b8",
        "name": "On Initialisation",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "Initialise",
        "payload": "",
        "payloadType": "date",
        "x": 118.5,
        "y": 26,
        "wires": [
            [
                "8a4dffa5.a7935"
            ]
        ]
    },
    {
        "id": "8a4dffa5.a7935",
        "type": "link out",
        "z": "f5a6f1b2.e1c8b8",
        "name": "On System Start",
        "links": [
            "ce5e1241.adb708",
            "891fa554.e2eb",
            "48e2b7d3.9ebd3",
            "a42117f2.e7b908",
            "b382fdf1.42dfd",
            "753e49af.e1fbf8",
            "ab728aab.10a15",
            "7a212126.b73c78",
            "bca49e2.3ae506",
            "fec95a4b.bb6bf",
            "84bae66b.0b1488"
        ],
        "x": 260.5,
        "y": 26,
        "wires": []
    },
    {
        "id": "be6cd9b7.de26a8",
        "type": "comment",
        "z": "f5a6f1b2.e1c8b8",
        "name": "Other Event Triggers",
        "info": "",
        "x": 153,
        "y": 722,
        "wires": []
    },
    {
        "id": "dd31298f.6fb86",
        "type": "link out",
        "z": "f5a6f1b2.e1c8b8",
        "name": "MQTT Received From Device",
        "links": [
            "6a1a5ffa.b196"
        ],
        "x": 298.5,
        "y": 762,
        "wires": []
    },
    {
        "id": "8459e9c9.81c4d",
        "type": "mqtt in",
        "z": "f5a6f1b2.e1c8b8",
        "name": "On MessageReceived",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "125f6c81.60151b",
        "x": 153,
        "y": 762,
        "wires": [
            [
                "dd31298f.6fb86"
            ]
        ]
    },
    {
        "id": "cc2d4094.e3c8e8",
        "type": "ui_audio",
        "z": "a1744621.5dceb",
        "name": "",
        "group": "f7fbc697.bfeb58",
        "voice": "",
        "always": true,
        "x": 766,
        "y": 127,
        "wires": []
    },
    {
        "id": "3bbc7cf8.9f5fdc",
        "type": "file in",
        "z": "a1744621.5dceb",
        "name": "",
        "filename": "C:\\Users\\alast\\Music\\Downfall.mp3",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 370,
        "y": 102,
        "wires": [
            [
                "cc2d4094.e3c8e8"
            ]
        ]
    },
    {
        "id": "a7c77d0e.f04ff8",
        "type": "change",
        "z": "a1744621.5dceb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 551,
        "y": 152,
        "wires": [
            [
                "cc2d4094.e3c8e8"
            ]
        ]
    },
    {
        "id": "dd9074ae.3ad73",
        "type": "ui_button",
        "z": "a1744621.5dceb",
        "name": "",
        "group": "f7fbc697.bfeb58",
        "order": 2,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Play BGM",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-play",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 153.5,
        "y": 102,
        "wires": [
            [
                "3bbc7cf8.9f5fdc"
            ]
        ]
    },
    {
        "id": "6df4da8d.432634",
        "type": "Mic",
        "z": "a1744621.5dceb",
        "d": true,
        "name": "",
        "outputPayloadType": "stream",
        "endian": "little",
        "bitwidth": "16",
        "encoding": "signed-integer",
        "channels": "1",
        "device": "plughw:1,0",
        "rate": "22050",
        "silenceTimeout": 0,
        "exitOnSilence": false,
        "debug": false,
        "active": false,
        "x": 1218.5,
        "y": 293,
        "wires": [
            []
        ]
    },
    {
        "id": "f50df463.39cf08",
        "type": "ui_button",
        "z": "a1744621.5dceb",
        "name": "",
        "group": "f7fbc697.bfeb58",
        "order": 1,
        "width": 3,
        "height": 1,
        "passthru": false,
        "label": "Stop BGM",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-stop",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 143,
        "y": 151,
        "wires": [
            [
                "a7c77d0e.f04ff8"
            ]
        ]
    },
    {
        "id": "4d5e8308.a1c22c",
        "type": "function",
        "z": "f5a6f1b2.e1c8b8",
        "name": "Initialise Global Vars",
        "func": "global.set(\"gameState\", \"stopped\");\nglobal.set(\"timeRemaining\", 3600000);\nglobal.set(\"currentTime\", Date.now());\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510.5,
        "y": 26,
        "wires": [
            []
        ]
    },
    {
        "id": "48e2b7d3.9ebd3",
        "type": "link in",
        "z": "f5a6f1b2.e1c8b8",
        "name": "",
        "links": [
            "8a4dffa5.a7935"
        ],
        "x": 350.5,
        "y": 26,
        "wires": [
            [
                "4d5e8308.a1c22c"
            ]
        ]
    },
    {
        "id": "76f3661d.ce70e",
        "type": "ui_dropdown",
        "z": "a1744621.5dceb",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "f7fbc697.bfeb58",
        "order": 4,
        "width": "0",
        "height": "0",
        "passthru": false,
        "options": [
            {
                "label": "Heavy Footsteps",
                "value": "C:\\Users\\alast\\Music\\sfx\\heavy_footsteps.wav",
                "type": "str"
            },
            {
                "label": "Door Creak",
                "value": "C:\\Users\\alast\\Music\\sfx\\gate_creak.mp3",
                "type": "str"
            },
            {
                "label": "Music Box",
                "value": "C:\\Users\\alast\\Music\\sfx\\musicbox.mp3",
                "type": "str"
            },
            {
                "label": "Floorboard creak",
                "value": "C:\\Users\\alast\\Music\\sfx\\floorboard_creak.wav",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "475792de.f78e84"
            ]
        ]
    },
    {
        "id": "3a90371d.7a109",
        "type": "ui_button",
        "z": "a1744621.5dceb",
        "name": "",
        "group": "f7fbc697.bfeb58",
        "order": 5,
        "width": "0",
        "height": "0",
        "passthru": false,
        "label": "Play SFX",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-volume-up",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 160,
        "y": 440,
        "wires": [
            [
                "7688cb75.84e59c"
            ]
        ]
    },
    {
        "id": "b38903b5.8467b8",
        "type": "file in",
        "z": "a1744621.5dceb",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 550,
        "y": 440,
        "wires": [
            [
                "baae23f.9184d6"
            ]
        ]
    },
    {
        "id": "baae23f.9184d6",
        "type": "ui_audio",
        "z": "a1744621.5dceb",
        "name": "",
        "group": "70e5d1d.359a23",
        "voice": "",
        "always": false,
        "x": 700,
        "y": 440,
        "wires": []
    },
    {
        "id": "7688cb75.84e59c",
        "type": "change",
        "z": "a1744621.5dceb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "filename",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 440,
        "wires": [
            [
                "b38903b5.8467b8"
            ]
        ]
    },
    {
        "id": "475792de.f78e84",
        "type": "change",
        "z": "a1744621.5dceb",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filename",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "17d2550c.fbe88b",
        "type": "ui_ui_control",
        "z": "f5a6f1b2.e1c8b8",
        "name": "",
        "events": "all",
        "x": 119.5,
        "y": 853,
        "wires": [
            [
                "1fb5ba48.258b4e"
            ]
        ]
    },
    {
        "id": "1fb5ba48.258b4e",
        "type": "link out",
        "z": "f5a6f1b2.e1c8b8",
        "name": "On Browser Refresh",
        "links": [
            "91bbad40.53273"
        ],
        "x": 223.5,
        "y": 853,
        "wires": []
    },
    {
        "id": "8243f269.7db488",
        "type": "comment",
        "z": "f5a6f1b2.e1c8b8",
        "name": "On browser refresh",
        "info": "https://discourse.nodered.org/t/data-not-retained-with-a-browser-refresh/976/6",
        "x": 140.5,
        "y": 816,
        "wires": []
    },
    {
        "id": "427a0e5e.5f272",
        "type": "ui_template",
        "z": "b7c719b.18888e8",
        "group": "b1c5a111.b0ba08",
        "name": "Timer",
        "order": 1,
        "width": "30",
        "height": "20",
        "format": "<style>\n/* Make the video content fill the screen */\n/* Note that the CSS IDs follow the pattern #DashboardTabName_GroupTabName */\n#Room_Timer {\n    left:0 !important;\n    top:0 !important;\n    width:1280px !important;\n    height:1024px !important;\n}\n#Room_Timer_cards > md-card {\n    overflow: hidden;\n}\n.outer-container {\n    width: 100%;\n    height: 1024px;\n    text-align: center;\n}\n.inner-container {\n    display: inline-block;\n    position: relative;\n}\n.video-overlay {\n    text-align:center;\n    position: absolute;\n    margin: auto;\n    width: 100%;\n    top: 280px;\n    font-size: 300px;\n    font-family: Helvetica;\n    color: #FFF;\n   /* background-color: rgba(50, 50, 50, 0.3); */\n}\nvideo {\n    width: 100%;\n    height: 100%;\n}\n</style>\n\n<div class=\"outer-container\">\n    <div class=\"inner-container\">\n        <div class=\"video-overlay\" id=\"timer\">{{msg.formattedTimeRemaining}}</div>\n        <!-- note path is relative to c:/users/alast/.node-red/lib -->\n        <!-- also need to ensure permissions to this directory are set correctly -->        \n        <video id=\"video-player\" src=\"/uimedia/Room One/roomdisplay_bg.mp4\" loop=\"true\" muted=\"muted\" autoplay class=\"ng-scope\"></video>\n    </div>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 793,
        "y": 114,
        "wires": [
            []
        ]
    },
    {
        "id": "938c3e12.54529",
        "type": "link out",
        "z": "f5a6f1b2.e1c8b8",
        "name": "On Tick",
        "links": [
            "81cfa1d4.86b898",
            "300cc64d.abaf1a",
            "d9928e8d.c5c588",
            "c0f514cb.a0e9c8",
            "e1535ac3.a19198",
            "e4a697a8.359b38",
            "f64afdb2.ae6738",
            "8bdfc662.b74d28"
        ],
        "x": 186.5,
        "y": 72,
        "wires": []
    },
    {
        "id": "81cfa1d4.86b898",
        "type": "link in",
        "z": "b7c719b.18888e8",
        "name": "",
        "links": [
            "938c3e12.54529"
        ],
        "x": 231.5,
        "y": 111,
        "wires": [
            [
                "e4e33013.7274a8"
            ]
        ]
    },
    {
        "id": "e4e33013.7274a8",
        "type": "change",
        "z": "b7c719b.18888e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "timeRemaining",
                "pt": "msg",
                "to": "timeRemaining",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 377.5,
        "y": 111,
        "wires": [
            [
                "3d0a97bc.2fbd18"
            ]
        ]
    },
    {
        "id": "3d0a97bc.2fbd18",
        "type": "function",
        "z": "b7c719b.18888e8",
        "name": "Format Time",
        "func": "// msg.timeRemaining is in milliseconds\nvar t = msg.timeRemaining / 1000;\nvar h = Math.floor(t / 3600);\nvar m = Math.floor(t % 3600 / 60);\nvar s = Math.floor(t % 3600 % 60);\n\n// Format into hh:mm:ss\nmsg.formattedTimeRemaining = (\"0\" + m).slice(-2) + \":\" + (\"0\" + s).slice(-2);\n\n// Update the editor node\nnode.status({fill:\"green\", shape:\"dot\", text:msg.formattedTimeRemaining});\n\n// Forward the message along the flow\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 580,
        "y": 111,
        "wires": [
            [
                "427a0e5e.5f272"
            ]
        ]
    },
    {
        "id": "603c91a8.9589c8",
        "type": "ui_template",
        "z": "b7c719b.18888e8",
        "d": true,
        "group": "",
        "name": "CSS-style overrides",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n/* These style overrides assume the \"Dark Theme\" is being used */\n\nUsed for dynamically amending menu/tab items\n:root {\n    --main-color: \"yellow\";\n}\n[aria-label~=\"Room\"] {\n    background-color: var(--main-color,yellow);\n}\n\n[aria-label~=\"Room\"] + div > p::after {\n    content: 'woot' ;\n}\n.nr-dashboard-template {\n      padding: 0;\n      margin: 0;\n  }\n\n#nr-dashboard-toolbar {\n    visibility: hidden;\n};\n    md-toolbar {\n        display: none;\n    }\n    \n    #toolbar {\n        display: none !important;\n    }\n\n#Room_Timer_cards {\n    width:1900px !important;\n    height:1060px !important;\n}\n#Room_Timer_cards > md-card {\n    width:1900px !important;\n    height:1060px !important;\n}\n\n.outer-container {\n   /* border: 1px dotted black; */\n    width: 100%;\n    height: 1060px;\n    text-align: center;\n}\n.inner-container {\n  /*  border: 1px solid black; */\n    display: inline-block;\n    position: relative;\n}\n.video-overlay {\n    text-align:center;\n    position: absolute;\n    margin: auto;\n    width: 100%;\n    top: 180px;\n  /*  padding: 5px 5px; */\n    font-size: 300px;\n    font-family: Helvetica;\n    color: #000;\n    background-color: rgba(50, 50, 50, 0.3);\n}\nvideo {\n    width: 100%;\n    height: 100%;\n}\n</style>\n\n<script>\n  (function(scope) {\n    var media = document.getElementById(\"video-player\");\n    // To play/pause the video we must watch for the right msgs\n    scope.$watch('msg', function(msg){\n        if (msg.play) {\n        \n            // Handle browsers that don't like autoplay policy\n            var playPromise = media.play();\n            if (playPromise !== undefined) {\n                playPromise.then(_ => {\n                  // Automatic playback started!\n                  // Show playing UI.\n                })\n                .catch(error => {\n                  // Auto-play was prevented\n                  // Show paused UI.\n                });\n            }\n        } \n        else if (msg.stop){\n            media.pause();\n        }\n    });\n    })(scope);\n</script>\n                \n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "global",
        "x": 2220,
        "y": 1040,
        "wires": [
            []
        ],
        "info": "CSS Style overrides to the Node-RED Dark theme.\n\nFrom the Dashboard node information panel (View->Dashboard), select\n - Site: Options -> Node-RED theme everywhere\n - Theme: Style -> Dark"
    },
    {
        "id": "891fa554.e2eb",
        "type": "link in",
        "z": "b7c719b.18888e8",
        "name": "",
        "links": [
            "8a4dffa5.a7935"
        ],
        "x": 2078.5,
        "y": 1039,
        "wires": [
            [
                "603c91a8.9589c8"
            ]
        ]
    },
    {
        "id": "46766b1e.1aae94",
        "type": "change",
        "z": "b7c719b.18888e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "play",
                "pt": "msg",
                "to": "true",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 571.5,
        "y": 169,
        "wires": [
            [
                "427a0e5e.5f272"
            ]
        ]
    },
    {
        "id": "871d4fc9.fdd278",
        "type": "change",
        "z": "b7c719b.18888e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "stop",
                "pt": "msg",
                "to": "stop",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 583,
        "y": 216,
        "wires": [
            [
                "427a0e5e.5f272"
            ]
        ]
    },
    {
        "id": "b32763f3.44a74",
        "type": "link out",
        "z": "f5a6f1b2.e1c8b8",
        "name": "On Game Start",
        "links": [
            "65781ff6.32997"
        ],
        "x": 706.5,
        "y": 119,
        "wires": []
    },
    {
        "id": "12704866.f27d88",
        "type": "comment",
        "z": "f5a6f1b2.e1c8b8",
        "name": "On Game Start",
        "info": "",
        "x": 806.5,
        "y": 119,
        "wires": []
    },
    {
        "id": "65781ff6.32997",
        "type": "link in",
        "z": "b7c719b.18888e8",
        "name": "Game Start Trigger",
        "links": [
            "b32763f3.44a74"
        ],
        "x": 430.5,
        "y": 169,
        "wires": [
            [
                "46766b1e.1aae94"
            ]
        ]
    },
    {
        "id": "171ea618.d8a322",
        "type": "link out",
        "z": "f5a6f1b2.e1c8b8",
        "name": "On Game Stop",
        "links": [
            "b6c64fbb.744e7"
        ],
        "x": 789.5,
        "y": 169,
        "wires": []
    },
    {
        "id": "b6c64fbb.744e7",
        "type": "link in",
        "z": "b7c719b.18888e8",
        "name": "",
        "links": [
            "171ea618.d8a322",
            "3ff7f778.d37dd8"
        ],
        "x": 468.5,
        "y": 216,
        "wires": [
            [
                "871d4fc9.fdd278"
            ]
        ]
    },
    {
        "id": "73be7381.9ca13c",
        "type": "inject",
        "z": "f5a6f1b2.e1c8b8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 98.5,
        "y": 118,
        "wires": [
            [
                "f489b4f.77216c8"
            ]
        ]
    },
    {
        "id": "d7dfb6a1.285b8",
        "type": "inject",
        "z": "f5a6f1b2.e1c8b8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100.5,
        "y": 170,
        "wires": [
            [
                "e513edce.c7954"
            ]
        ]
    },
    {
        "id": "a25045d6.97529",
        "type": "inject",
        "z": "f5a6f1b2.e1c8b8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 98.5,
        "y": 223,
        "wires": [
            [
                "7a7d5c99.79b90c"
            ]
        ]
    },
    {
        "id": "1bb5abc6.acc0d4",
        "type": "ui_ui_control",
        "z": "b7c719b.18888e8",
        "name": "",
        "events": "all",
        "x": 587.5,
        "y": 59,
        "wires": [
            [
                "427a0e5e.5f272"
            ]
        ]
    },
    {
        "id": "4fb6425d.40d114",
        "type": "inject",
        "z": "b7c719b.18888e8",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 454.5,
        "y": 59,
        "wires": [
            [
                "1bb5abc6.acc0d4"
            ]
        ]
    },
    {
        "id": "1274db96.af46bc",
        "type": "serial out",
        "z": "35c48219.d87086",
        "name": "",
        "serial": "fd237371.eea2d8",
        "x": 645,
        "y": 210,
        "wires": []
    },
    {
        "id": "f03f5c71.97b778",
        "type": "function",
        "z": "35c48219.d87086",
        "name": "Construct Serial Message",
        "func": "// Format into hh:mm:ss\nmsg.payload = \"PRINT>\" + flow.get(\"hint\") \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 316.5,
        "y": 210,
        "wires": [
            [
                "4fcf0148.f3463",
                "cfc2aef2.e66628"
            ]
        ]
    },
    {
        "id": "12fc424a.8536d6",
        "type": "ui_template",
        "z": "3a6dd7fc.4c7cd",
        "group": "176fd05d.aa8588",
        "name": "Dashboard Panel",
        "order": 1,
        "width": "6",
        "height": "4",
        "format": "<md-card-title>\n    <md-card-title-text>\n        <p class=\"md-headline\">{{msg.payload.name}}</p>\n    </md-card-title-text>\n    <span ng-class=\"msg.payload.state=='SOLVED' ? 'fa fa-unlock fa-2x' : 'fa fa-lock fa-2x'\"></span>\n</md-card-title>\n<md-card-content style=\"overflow-y:hidden;\">\n    <div ng-style=\"{width:'100%',height:'8px','background-color':msg.payload.state=='SOLVED' ? 'green' : 'red'}\" ></div>\n    <p>\n        {{msg.payload.description?msg.payload.description:'Unknown'}}\n    </p>\n    <div>\n    <ul>\n    <li style=\"display: inline;\" ng-repeat=\"input in msg.payload.inputs track by $index\">\n        <span ng-class=\"input == 1 ? 'fa fa-2x fa-arrow-circle-down' : 'fa fa-2x fa-arrow-circle-up'\">&nbsp;</span> \n    </ul>\n    </div>\n</md-card-content>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 902,
        "y": 154,
        "wires": [
            []
        ]
    },
    {
        "id": "ba1efa99.666ec",
        "type": "mqtt in",
        "z": "3a6dd7fc.4c7cd",
        "name": "MQTT FromDevice",
        "topic": "FromDevice/ToggleSwitch",
        "qos": "2",
        "datatype": "auto",
        "broker": "125f6c81.60151b",
        "x": 197,
        "y": 153,
        "wires": [
            [
                "fb900008.f428e8"
            ]
        ]
    },
    {
        "id": "fb900008.f428e8",
        "type": "json",
        "z": "3a6dd7fc.4c7cd",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 379,
        "y": 153,
        "wires": [
            [
                "eaa06cba.4a4fc8"
            ]
        ]
    },
    {
        "id": "eaa06cba.4a4fc8",
        "type": "function",
        "z": "3a6dd7fc.4c7cd",
        "name": "Parse JSON and update global state",
        "func": "// Retrieve the ID of the prop used in this flow\nvar propid = flow.get(\"payload.id\");\n\n// Get the current stored value of this prop,\n// Or create a new entry if we didn't previously know about it\nvar prop = global.get(propid) || {};\n\n// Now loop over the incoming values and update the stored state\nvar count = 0;\nfor (var key in msg.payload) {\n  if (msg.payload.hasOwnProperty(key)) {\n    prop[key] = msg.payload[key];\n    count++;\n  }\n}\n\n// Save the global value again\nglobal.set(propid, prop);\n\n// Pass the updated status through the message flow\nmsg.payload = prop;\n\n// Update the dashboard editor\nnode.status({fill:\"green\", shape:\"dot\", text:count + \" values updated\"});\n\n// Pass the value along the flow\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 623,
        "y": 154,
        "wires": [
            [
                "12fc424a.8536d6"
            ]
        ]
    },
    {
        "id": "3b739e6.daddfe2",
        "type": "mqtt out",
        "z": "3a6dd7fc.4c7cd",
        "name": "MQTT ToDevice",
        "topic": "ToDevice/Toggle",
        "qos": "",
        "retain": "",
        "broker": "125f6c81.60151b",
        "x": 1117,
        "y": 152,
        "wires": []
    },
    {
        "id": "b3beadb7.c8e048",
        "type": "inject",
        "z": "3a6dd7fc.4c7cd",
        "name": "Solve",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"state\":\"SOLVED\"}",
        "payloadType": "json",
        "x": 237.5,
        "y": 247,
        "wires": [
            [
                "fb900008.f428e8"
            ]
        ]
    },
    {
        "id": "e3062108.ce3e4",
        "type": "inject",
        "z": "3a6dd7fc.4c7cd",
        "name": "Reset",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"state\":\"UNSOLVED\"}",
        "payloadType": "json",
        "x": 237,
        "y": 208,
        "wires": [
            [
                "fb900008.f428e8"
            ]
        ]
    },
    {
        "id": "d1f2e33.18a072",
        "type": "ui_button",
        "z": "3a6dd7fc.4c7cd",
        "name": "RESET",
        "group": "176fd05d.aa8588",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-lock",
        "payload": "{\"command\":\"RESET\"}",
        "payloadType": "json",
        "topic": "",
        "x": 930,
        "y": 106,
        "wires": [
            [
                "3b739e6.daddfe2"
            ]
        ]
    },
    {
        "id": "7e153167.5252a8",
        "type": "change",
        "z": "3a6dd7fc.4c7cd",
        "name": "Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "flow",
                "to": "{\"id\":\"ToggleSwitches\",\"name\":\"Toggle Switches\",\"description\":\"Players must set switches to correct pattern\",\"inputs\":[0,0,0,0,0],\"state\":\"UNSOLVED\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 234.5,
        "y": 105,
        "wires": [
            [
                "fb900008.f428e8"
            ]
        ]
    },
    {
        "id": "581cde05.debe4",
        "type": "ui_button",
        "z": "3a6dd7fc.4c7cd",
        "name": "SOLVE",
        "group": "176fd05d.aa8588",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Solve",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-unlock",
        "payload": "{\"command\":\"SOLVE\"}",
        "payloadType": "json",
        "topic": "",
        "x": 929,
        "y": 66,
        "wires": [
            [
                "3b739e6.daddfe2"
            ]
        ]
    },
    {
        "id": "88c1bf4a.cf04b",
        "type": "ui_template",
        "z": "5aec1535.570c94",
        "group": "dd53b5d1.ca999",
        "name": "Dashboard Panel",
        "order": 1,
        "width": "6",
        "height": "4",
        "format": "<md-card-title>\n    <md-card-title-text>\n        <p class=\"md-headline\">{{msg.payload.name}}</p>\n    </md-card-title-text>\n    <span ng-class=\"msg.payload.state=='SOLVED' ? 'fa fa-unlock fa-2x' : 'fa fa-lock fa-2x'\"></span>\n</md-card-title>\n<md-card-content>\n    <div ng-style=\"{width:'100%',height:'8px','background-color':msg.payload.state=='SOLVED' ? 'green' : 'red'}\" ></div>\n    <p>\n        {{msg.payload.description?msg.payload.description:'Unknown'}}\n    </p>\n    <div style=\"text-align:center\">\n            <span style=\"font-size: 2em;\">{{msg.payload.input}}&nbsp;</span>\n        </div>\n \n    </div>\n    \n</md-card-content>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 886,
        "y": 172,
        "wires": [
            []
        ]
    },
    {
        "id": "2ea1a823.2b6f7",
        "type": "mqtt in",
        "z": "5aec1535.570c94",
        "name": "MQTT FromDevice",
        "topic": "FromDevice/Keypad",
        "qos": "2",
        "datatype": "auto",
        "broker": "125f6c81.60151b",
        "x": 193,
        "y": 172,
        "wires": [
            [
                "48e5e2ee.212fb4"
            ]
        ]
    },
    {
        "id": "48e5e2ee.212fb4",
        "type": "json",
        "z": "5aec1535.570c94",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 375,
        "y": 172,
        "wires": [
            [
                "2c76b6e6.c46f72"
            ]
        ]
    },
    {
        "id": "2c76b6e6.c46f72",
        "type": "function",
        "z": "5aec1535.570c94",
        "name": "Parse JSON and update global state",
        "func": "// Retrieve the ID of the prop used in this flow\nvar propid = flow.get(\"payload.id\");\n\n// Get the current stored value of this prop,\n// Or create a new entry if we didn't previously know about it\nvar prop = global.get(propid) || {};\n\n// Now loop over the incoming values and update the stored state\nvar count = 0;\nfor (var key in msg.payload) {\n  if (msg.payload.hasOwnProperty(key)) {\n    prop[key] = msg.payload[key];\n    count++;\n  }\n}\n\n// Save the global value again\nglobal.set(propid, prop);\n\n// Pass the updated status through the message flow\nmsg.payload = prop;\n\n// Update the dashboard editor\nnode.status({fill:\"green\", shape:\"dot\", text:count + \" values updated\"});\n\n// Pass the value along the flow\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 607,
        "y": 172,
        "wires": [
            [
                "88c1bf4a.cf04b"
            ]
        ]
    },
    {
        "id": "5c5dcafe.cf93dc",
        "type": "mqtt out",
        "z": "5aec1535.570c94",
        "name": "MQTT ToDevice",
        "topic": "ToDevice/HoldHands",
        "qos": "",
        "retain": "",
        "broker": "125f6c81.60151b",
        "x": 1105,
        "y": 171,
        "wires": []
    },
    {
        "id": "c3f0fae3.b99fd",
        "type": "inject",
        "z": "5aec1535.570c94",
        "name": "Solve",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"state\":\"SOLVED\"}",
        "payloadType": "json",
        "x": 232.5,
        "y": 278,
        "wires": [
            [
                "48e5e2ee.212fb4"
            ]
        ]
    },
    {
        "id": "e7585342.3811f8",
        "type": "inject",
        "z": "5aec1535.570c94",
        "name": "Reset",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"state\":\"UNSOLVED\"}",
        "payloadType": "json",
        "x": 232,
        "y": 239,
        "wires": [
            [
                "48e5e2ee.212fb4"
            ]
        ]
    },
    {
        "id": "9fd45c1c.09ae08",
        "type": "ui_button",
        "z": "5aec1535.570c94",
        "name": "RESET",
        "group": "dd53b5d1.ca999",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-lock",
        "payload": "{\"command\":\"RESET\"}",
        "payloadType": "json",
        "topic": "",
        "x": 914,
        "y": 124,
        "wires": [
            [
                "5c5dcafe.cf93dc"
            ]
        ]
    },
    {
        "id": "94f83c72.4a6768",
        "type": "change",
        "z": "5aec1535.570c94",
        "name": "Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "flow",
                "to": "{\"id\":\"Keypad\",\"name\":\"Keypad\",\"description\":\"Players must enter the code 1234 on the keypad\",\"state\":\"UNSOLVED\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230.5,
        "y": 124,
        "wires": [
            [
                "48e5e2ee.212fb4"
            ]
        ]
    },
    {
        "id": "c304f8d8.7f7258",
        "type": "ui_button",
        "z": "5aec1535.570c94",
        "name": "SOLVE",
        "group": "dd53b5d1.ca999",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Solve",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-unlock",
        "payload": "{\"command\":\"SOLVE\"}",
        "payloadType": "json",
        "topic": "",
        "x": 913,
        "y": 84,
        "wires": [
            [
                "5c5dcafe.cf93dc"
            ]
        ]
    },
    {
        "id": "753e49af.e1fbf8",
        "type": "link in",
        "z": "5aec1535.570c94",
        "name": "",
        "links": [
            "8a4dffa5.a7935"
        ],
        "x": 148.5,
        "y": 124,
        "wires": [
            [
                "94f83c72.4a6768"
            ]
        ]
    },
    {
        "id": "45fde4a5.c3e22c",
        "type": "ui_template",
        "z": "2afbfb83.36bbdc",
        "group": "161a09b.036e1f6",
        "name": "Dashboard Panel",
        "order": 1,
        "width": "6",
        "height": "6",
        "format": "<md-card-title>\n    <md-card-title-text>\n        <p class=\"md-headline\">{{msg.payload.name}}</p>\n    </md-card-title-text>\n    <span ng-class=\"msg.payload.state=='SOLVED' ? 'fa fa-unlock fa-2x' : 'fa fa-lock fa-2x'\"></span>\n</md-card-title>\n<md-card-content style=\"overflow-y:hidden;\">\n    <div ng-style=\"{width:'100%',height:'8px','background-color':msg.payload.state=='SOLVED' ? 'green' : 'red'}\" ></div>\n    <p>\n        {{msg.payload.description?msg.payload.description:'Unknown'}}\n    </p>\n    <div style=\"text-align:center\">\n  <span class=\"fa fa-2x fa-arrows-h\">&nbsp;</span>\n        <div ng-repeat=\"input in msg.payload.inputs track by $index\">\n            <span style=\"font-size: 2em;\">{{input.from}}  </span>\n            <span ng-class=\"input.connected == 1 ? 'fa fa-2x fa-arrows-h' : 'fa fa-2x '\">&nbsp;</span>\n            <span style=\"font-size: 2em;\">{{input.to}} </span>\n        </div>\n \n    </div>\n</md-card-content>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 871,
        "y": 174,
        "wires": [
            []
        ]
    },
    {
        "id": "6588b704.17ba7",
        "type": "json",
        "z": "2afbfb83.36bbdc",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 352,
        "y": 173,
        "wires": [
            [
                "ee9b16d4.546128"
            ]
        ]
    },
    {
        "id": "ee9b16d4.546128",
        "type": "function",
        "z": "2afbfb83.36bbdc",
        "name": "Parse JSON and update global state",
        "func": "// Retrieve the ID of the prop used in this flow\nvar propid = flow.get(\"payload.id\");\n\n// Get the current stored value of this prop,\n// Or create a new entry if we didn't previously know about it\nvar prop = global.get(propid) || {};\n\n// Now loop over the incoming values and update the stored state\nvar count = 0;\nfor (var key in msg.payload) {\n  if (msg.payload.hasOwnProperty(key)) {\n    prop[key] = msg.payload[key];\n    count++;\n  }\n}\n\n// Save the global value again\nglobal.set(propid, prop);\n\n// Pass the updated status through the message flow\nmsg.payload = prop;\n\n// Update the dashboard editor\nnode.status({fill:\"green\", shape:\"dot\", text:count + \" values updated\"});\n\n// Pass the value along the flow\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 596,
        "y": 174,
        "wires": [
            [
                "45fde4a5.c3e22c",
                "8233f288.f213f8"
            ]
        ]
    },
    {
        "id": "8175679.1ca7e98",
        "type": "inject",
        "z": "2afbfb83.36bbdc",
        "name": "Solve",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"state\":\"SOLVED\"}",
        "payloadType": "json",
        "x": 209.5,
        "y": 279,
        "wires": [
            [
                "6588b704.17ba7"
            ]
        ]
    },
    {
        "id": "9b977ab2.22cee8",
        "type": "inject",
        "z": "2afbfb83.36bbdc",
        "name": "Reset",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"state\":\"UNSOLVED\"}",
        "payloadType": "json",
        "x": 209,
        "y": 240,
        "wires": [
            [
                "6588b704.17ba7"
            ]
        ]
    },
    {
        "id": "603486e5.d3ba38",
        "type": "ui_button",
        "z": "2afbfb83.36bbdc",
        "name": "RESET",
        "group": "161a09b.036e1f6",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-lock",
        "payload": "{\"command\":\"RESET\"}",
        "payloadType": "json",
        "topic": "",
        "x": 903,
        "y": 126,
        "wires": [
            [
                "8caa2041.66675"
            ]
        ]
    },
    {
        "id": "2bd83394.044f6c",
        "type": "change",
        "z": "2afbfb83.36bbdc",
        "name": "Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "flow",
                "to": "{\"id\":\"1\",\"name\":\"Connect The Wires\",\"description\":\"Players must plug cables into the correct sockets\",\"inputs\":[{\"from\":1,\"to\":2,\"state\":true},{\"from\":3,\"to\":0,\"state\":true},{\"from\":4,\"to\":6,\"state\":false},{\"from\":5,\"to\":7,\"state\":true}],\"state\":\"UNSOLVED\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200.5,
        "y": 74,
        "wires": [
            [
                "6588b704.17ba7"
            ]
        ]
    },
    {
        "id": "408a9034.ae484",
        "type": "ui_button",
        "z": "2afbfb83.36bbdc",
        "name": "SOLVE",
        "group": "161a09b.036e1f6",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Solve",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-unlock",
        "payload": "{\"command\":\"SOLVE\"}",
        "payloadType": "json",
        "topic": "",
        "x": 902,
        "y": 86,
        "wires": [
            [
                "8caa2041.66675"
            ]
        ]
    },
    {
        "id": "ce5e1241.adb708",
        "type": "link in",
        "z": "2afbfb83.36bbdc",
        "name": "",
        "links": [
            "8a4dffa5.a7935"
        ],
        "x": 107.5,
        "y": 74,
        "wires": [
            [
                "2bd83394.044f6c"
            ]
        ]
    },
    {
        "id": "b382fdf1.42dfd",
        "type": "link in",
        "z": "3a6dd7fc.4c7cd",
        "name": "",
        "links": [
            "8a4dffa5.a7935"
        ],
        "x": 143.5,
        "y": 105,
        "wires": [
            [
                "7e153167.5252a8"
            ]
        ]
    },
    {
        "id": "c5e2b5fc.e3818",
        "type": "change",
        "z": "4002af1a.e2087",
        "name": "Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "flow",
                "to": "{\"id\":\"Reed\",\"name\":\"Reed Switch\",\"description\":\"Players must hold a magnet over the Reed switch\",\"state\":\"UNSOLVED\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 246,
        "y": 190,
        "wires": [
            [
                "6e0a782d.b88b68"
            ]
        ]
    },
    {
        "id": "ad3e8727.b4f258",
        "type": "ui_template",
        "z": "4002af1a.e2087",
        "group": "db28e499.24fe08",
        "name": "Dashboard Panel",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<md-card-title>\n    <md-card-title-text>\n        <p class=\"md-headline\">{{msg.payload.name}}</p>\n    </md-card-title-text>\n    <span ng-class=\"msg.payload.state=='SOLVED' ? 'fa fa-unlock fa-2x' : 'fa fa-lock fa-2x'\"></span>\n</md-card-title>\n<md-card-content>\n    <div ng-style=\"{width:'100%',height:'8px','background-color':msg.payload.state=='SOLVED' ? 'green' : 'red'}\" ></div>\n    <p>\n        {{msg.payload.description?msg.payload.description:'Unknown'}}\n    </p>\n</md-card-content>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 876.5,
        "y": 371,
        "wires": [
            []
        ]
    },
    {
        "id": "e6de1935.2adda",
        "type": "mqtt in",
        "z": "4002af1a.e2087",
        "name": "MQTT FromDevice",
        "topic": "FromDevice/Reed",
        "qos": "2",
        "datatype": "auto",
        "broker": "125f6c81.60151b",
        "x": 422.5,
        "y": 331,
        "wires": [
            [
                "9ffcbfc6.9d4948"
            ]
        ]
    },
    {
        "id": "6e0a782d.b88b68",
        "type": "json",
        "z": "4002af1a.e2087",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 367.5,
        "y": 190,
        "wires": [
            [
                "faf5e097.aff71"
            ]
        ]
    },
    {
        "id": "9ffcbfc6.9d4948",
        "type": "function",
        "z": "4002af1a.e2087",
        "name": "Update global state",
        "func": "// Retrieve the ID of the prop used in this flow\nvar propid = flow.get(\"payload.id\");\n\n// Get the current stored value of this prop,\n// Or create a new entry if we didn't previously know about it\nvar prop = global.get(propid) || {};\n\n// Now loop over the incoming values and update the stored state\nprop['state'] = msg.payload;\n\n// Save the global value again\nglobal.set(propid, prop);\n\n// Pass the updated status through the message flow\nmsg.payload = prop;\n\n// Update the dashboard editor\nnode.status({fill:\"green\", shape:\"dot\", text:msg.payload['state']});\n\n// Pass the value along the flow\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 660.5,
        "y": 371,
        "wires": [
            [
                "ad3e8727.b4f258"
            ]
        ]
    },
    {
        "id": "5f9f72b8.d544ec",
        "type": "mqtt out",
        "z": "4002af1a.e2087",
        "name": "MQTT ToDevice",
        "topic": "ToDevice/Reed",
        "qos": "",
        "retain": "",
        "broker": "125f6c81.60151b",
        "x": 1114.5,
        "y": 371,
        "wires": []
    },
    {
        "id": "9f8268c4.1e8d7",
        "type": "inject",
        "z": "4002af1a.e2087",
        "name": "Solve",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "SOLVED",
        "payloadType": "str",
        "x": 451,
        "y": 547,
        "wires": [
            [
                "9ffcbfc6.9d4948"
            ]
        ]
    },
    {
        "id": "a4cfb1e2.efcbd",
        "type": "inject",
        "z": "4002af1a.e2087",
        "name": "Reset",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "UNSOLVED",
        "payloadType": "str",
        "x": 450.5,
        "y": 502,
        "wires": [
            [
                "9ffcbfc6.9d4948"
            ]
        ]
    },
    {
        "id": "6a56ff07.a37ae",
        "type": "ui_button",
        "z": "4002af1a.e2087",
        "name": "RESET",
        "group": "db28e499.24fe08",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-lock",
        "payload": "RESET",
        "payloadType": "str",
        "topic": "",
        "x": 904.5,
        "y": 323,
        "wires": [
            [
                "5f9f72b8.d544ec"
            ]
        ]
    },
    {
        "id": "930bee45.819cf",
        "type": "ui_button",
        "z": "4002af1a.e2087",
        "name": "SOLVE",
        "group": "db28e499.24fe08",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Solve",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-unlock",
        "payload": "SOLVE",
        "payloadType": "str",
        "topic": "",
        "x": 903.5,
        "y": 283,
        "wires": [
            [
                "5f9f72b8.d544ec"
            ]
        ]
    },
    {
        "id": "ab728aab.10a15",
        "type": "link in",
        "z": "4002af1a.e2087",
        "name": "",
        "links": [
            "8a4dffa5.a7935"
        ],
        "x": 153,
        "y": 190,
        "wires": [
            [
                "c5e2b5fc.e3818"
            ]
        ]
    },
    {
        "id": "faf5e097.aff71",
        "type": "function",
        "z": "4002af1a.e2087",
        "name": "Parse JSON and update global state",
        "func": "// Retrieve the ID of the prop used in this flow\nvar propid = flow.get(\"payload.id\");\n\n// Get the current stored value of this prop,\n// Or create a new entry if we didn't previously know about it\nvar prop = global.get(propid) || {};\n\n// Now loop over the incoming values and update the stored state\nvar count = 0;\nfor (var key in msg.payload) {\n  if (msg.payload.hasOwnProperty(key)) {\n    prop[key] = msg.payload[key];\n    count++;\n  }\n}\n\n// Save the global value again\nglobal.set(propid, prop);\n\n// Pass the updated status through the message flow\nmsg.payload = prop;\n\n// Update the dashboard editor\nnode.status({fill:\"green\", shape:\"dot\", text:count + \" values updated\"});\n\n// Pass the value along the flow\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 592,
        "y": 190,
        "wires": [
            [
                "ad3e8727.b4f258"
            ]
        ]
    },
    {
        "id": "ea975896.03b058",
        "type": "comment",
        "z": "4002af1a.e2087",
        "name": "Initial configuration",
        "info": "",
        "x": 285.5,
        "y": 149,
        "wires": []
    },
    {
        "id": "c64aece0.c348e",
        "type": "comment",
        "z": "4002af1a.e2087",
        "name": "Updates received via MQTT as plain text",
        "info": "",
        "x": 492,
        "y": 288,
        "wires": []
    },
    {
        "id": "a3fd1f3.92df0e",
        "type": "comment",
        "z": "4002af1a.e2087",
        "name": "This flow demonstrates a device that sends and receives status updates as plain text delivered over MQTT",
        "info": "",
        "x": 727.5,
        "y": 66,
        "wires": []
    },
    {
        "id": "d36489b9.a97398",
        "type": "file",
        "z": "31a7412f.61a816",
        "name": "Append to Log File",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1030,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "c371def0.c41d4",
        "type": "ui_switch",
        "z": "31a7412f.61a816",
        "name": "",
        "label": "Logging",
        "tooltip": "",
        "group": "eed1a8a6.8d8878",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": false,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 560,
        "y": 100,
        "wires": [
            [
                "8ab5d029.5fa83"
            ]
        ]
    },
    {
        "id": "8ab5d029.5fa83",
        "type": "change",
        "z": "31a7412f.61a816",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "logging",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "4f0ef3a2.ba712c",
        "type": "switch",
        "z": "31a7412f.61a816",
        "name": "",
        "property": "logging",
        "propertyType": "global",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 340,
        "wires": [
            [
                "511b6d84.e268c4"
            ]
        ]
    },
    {
        "id": "511b6d84.e268c4",
        "type": "function",
        "z": "31a7412f.61a816",
        "name": "Create Log Entry",
        "func": "// Define a payload object with the fields required\n// for the log entry\nvar log_entry = {\n    \"time\": new Date(),\n    \"topic\": msg.topic,\n    \"payload\": msg.payload\n};\nmsg.payload = log_entry;\n\n// Specify the log file\nmsg.filename = \"/Node-REDscape/log.txt\";\n\n// Show the log entry below the editor node\nnode.status({fill:\"green\", shape:\"dot\", text:JSON.stringify(log_entry)});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 750,
        "y": 340,
        "wires": [
            [
                "d36489b9.a97398",
                "445cf6fe.4d8078"
            ]
        ]
    },
    {
        "id": "d1a37b5c.759ed",
        "type": "comment",
        "z": "31a7412f.61a816",
        "name": "Toggle Logging On/Off",
        "info": "",
        "x": 600,
        "y": 60,
        "wires": []
    },
    {
        "id": "c2f79075.e3d64",
        "type": "ui_template",
        "z": "31a7412f.61a816",
        "group": "eed1a8a6.8d8878",
        "name": "Dashboard Log",
        "order": 3,
        "width": "30",
        "height": 2,
        "format": "<div ng-repeat=\"line in msg.payload track by $index\">\n  <div ng-style=\"{'margin-bottom':'1em'}\">{{line}}</div>\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 1240,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "445cf6fe.4d8078",
        "type": "function",
        "z": "31a7412f.61a816",
        "name": "Update Log Display",
        "func": "// Retrieve the existing log display\nvar logDisplay = flow.get(\"logDisplay\") || [];\n\n// Add the new log entry to the top \nlogDisplay.unshift(msg.payload);\n\n// Cap maximum size of the log display\nif(logDisplay.length > 100) {\n    // Remove the last element\n    logDisplay.pop();\n}\n\n// Save the updated log of entries\nflow.set(\"logDisplay\", logDisplay);\n\n// Pass the display along the flow\nmsg.payload = logDisplay;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 280,
        "wires": [
            [
                "c2f79075.e3d64"
            ]
        ]
    },
    {
        "id": "bc471132.4c2b7",
        "type": "comment",
        "z": "31a7412f.61a816",
        "name": "Output Node-Red log to Dashboard (UI)",
        "info": "See http://flows.nodered.org/flow/6dc1a137075ad93cd7c00224681afeda",
        "x": 461.5,
        "y": 784,
        "wires": []
    },
    {
        "id": "f64afdb2.ae6738",
        "type": "link in",
        "z": "31a7412f.61a816",
        "name": "Log",
        "links": [
            "938c3e12.54529"
        ],
        "x": 255,
        "y": 340,
        "wires": [
            [
                "4f0ef3a2.ba712c"
            ]
        ]
    },
    {
        "id": "8fbd7f33.f5c84",
        "type": "mosca in",
        "z": "31a7412f.61a816",
        "mqtt_port": "1883",
        "mqtt_ws_port": "8080",
        "name": "MOSCA",
        "username": "",
        "password": "",
        "dburl": "",
        "x": 209,
        "y": 699,
        "wires": [
            []
        ]
    },
    {
        "id": "83d55ec9.06d6f8",
        "type": "comment",
        "z": "31a7412f.61a816",
        "name": "MQTT Server Configuration",
        "info": "",
        "x": 278.5,
        "y": 661,
        "wires": []
    },
    {
        "id": "5e095423.54b874",
        "type": "ui_template",
        "z": "31a7412f.61a816",
        "d": true,
        "group": "",
        "name": "CSS-style overrides",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<style>\n\n/* These style overrides assume the \"Dark Theme\" is being used */\n\n/*\nUsed for dynamically amending menu/tab items\n:root {\n    --main-color: \"blue\";\n}\n[aria-label~=\"Your tab Name\"] {\n    background-color: var(--main-color,green);\n}\n\n[aria-label~=\"Home\"] + div > p::after {\n    content: 'woot' ;\n*/\n\nbody.nr-dashboard-theme {\n background-color: #333333;\n font-family: Calibri;\n}\nbutton, html, input, select, textarea {\n font-family: Calibri;\n}\nbody.nr-dashboard-theme md-content md-card {\n background-color: #33333300;\n color: #d0d0d0;\n}\n\nbody.nr-dashboard-theme md-toolbar {\n background-image: linear-gradient(to right, #404040, #737373);\n box-shadow: 0px 1px 20px #0000008a;\n}\n.nr-dashboard-theme ui-card-panel {\n background-image: linear-gradient(to bottom right, #404040, #737373);\n border: 1px solid #555555;\n box-shadow: 0 0 20px #00000066;\n}\n\n.nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n color: #2eb82e;\n text-shadow: 0 0 2px black;\n}\n\n.nr-dashboard-theme .nr-dashboard-form-button {\n background-image: linear-gradient(to bottom right, #8a8a8a6e, #00000070);\n background-color: #00ad03;\n color: #d0d0d0;\n text-shadow: 0 0 2px #525252;\n border-radius:6px;\n}\n\n.nr-dashboard-theme .nr-dashboard-button .md-button {\n background-image: linear-gradient(to bottom right, #8a8a8a6e, #00000070);\n background-color: #00ad03;\n color: #d0d0d0;\n text-shadow: 0 0 2px #525252;\n border-radius:6px;\n}\n.nr-dashboard-theme .nr-dashboard-button .md-button:hover {\n background-color: #00de00;\n}\n\n.nr-dashboard-theme .nr-dashboard-switch md-switch .md-thumb {\n background-image: linear-gradient(to bottom right, #48b349, #115009);\n}\n.nr-dashboard-button .md-button {\n box-shadow: 0 1px 3px 0 rgba(0,0,0,.26)!important;\n width: 100%!important;\n height: 100%!important;\n margin: 0!important;\n min-width: 0!important;\n min-height: 0!important;\n}\n.nr-dashboard-theme .nr-dashboard-slider .md-thumb:after {\n background-image: linear-gradient(to bottom right, #48b349, #115009);\n border-style: none;\n}\n.nr-dashboard-theme .nr-dashboard-numeric .value {\n background-color: #33333300;\n color:#d0d0d0;\n}\n\n.nr-dashboard-numeric .value {\n font-weight: 700;\n text-align: center;\n border: 0;\n}\n\n.nr-dashboard-form {\n display: inline-block;\n width: 100%;\n overflow-y: visible;\n}\n#SETTINGS_TEATED_cards {\n min-height: 260px;\n}\n\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "global",
        "x": 935,
        "y": 832,
        "wires": [
            []
        ],
        "info": "CSS Style overrides to the Node-RED Dark theme.\n\nFrom the Dashboard node information panel (View->Dashboard), select\n - Site: Options -> Node-RED theme everywhere\n - Theme: Style -> Dark"
    },
    {
        "id": "fe770773.fcddd8",
        "type": "comment",
        "z": "31a7412f.61a816",
        "name": "Dashboard Styling",
        "info": "",
        "x": 925,
        "y": 793,
        "wires": []
    },
    {
        "id": "b1efbe93.6f8ea",
        "type": "catch",
        "z": "31a7412f.61a816",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 685.5,
        "y": 696,
        "wires": [
            [
                "7ad70abc.0f24a4"
            ]
        ]
    },
    {
        "id": "7ad70abc.0f24a4",
        "type": "debug",
        "z": "31a7412f.61a816",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 846.5,
        "y": 724,
        "wires": []
    },
    {
        "id": "81de3a97.ce63d8",
        "type": "complete",
        "z": "31a7412f.61a816",
        "name": "",
        "scope": [],
        "uncaught": false,
        "x": 676.5,
        "y": 736,
        "wires": [
            [
                "7ad70abc.0f24a4"
            ]
        ]
    },
    {
        "id": "a1a518ec.9afe28",
        "type": "comment",
        "z": "31a7412f.61a816",
        "name": "Exception Handling",
        "info": "",
        "x": 714,
        "y": 652,
        "wires": []
    },
    {
        "id": "48cfc2e9.f9e0f4",
        "type": "comment",
        "z": "f5a6f1b2.e1c8b8",
        "name": "On Game Stop",
        "info": "",
        "x": 890,
        "y": 169,
        "wires": []
    },
    {
        "id": "300cc64d.abaf1a",
        "type": "link in",
        "z": "f5a6f1b2.e1c8b8",
        "name": "",
        "links": [
            "938c3e12.54529"
        ],
        "x": 367.5,
        "y": 285,
        "wires": [
            [
                "4d7e1089.00cba"
            ]
        ]
    },
    {
        "id": "4fcf0148.f3463",
        "type": "trigger",
        "z": "35c48219.d87086",
        "name": "",
        "op1": "",
        "op2": "CLEAR>",
        "op1type": "pay",
        "op2type": "str",
        "duration": "3",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 510.5,
        "y": 210,
        "wires": [
            [
                "1274db96.af46bc"
            ]
        ]
    },
    {
        "id": "3bdcbc65.c5ff04",
        "type": "ui_audio",
        "z": "35c48219.d87086",
        "name": "",
        "group": "da8ca63f.5e4b38",
        "voice": "",
        "always": "",
        "x": 831.5,
        "y": 265,
        "wires": []
    },
    {
        "id": "cfc2aef2.e66628",
        "type": "file in",
        "z": "35c48219.d87086",
        "name": "",
        "filename": "C:\\Users\\alast\\Music\\sfx\\musicbox.mp3",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 599.5,
        "y": 265,
        "wires": [
            [
                "3bdcbc65.c5ff04"
            ]
        ]
    },
    {
        "id": "becef49c.bbedf",
        "type": "serial in",
        "z": "2afbfb83.36bbdc",
        "name": "",
        "serial": "95729381.aa63e",
        "x": 200.5,
        "y": 172,
        "wires": [
            [
                "6588b704.17ba7"
            ]
        ]
    },
    {
        "id": "786f86b9.b18f48",
        "type": "mqtt out",
        "z": "35c48219.d87086",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "broker": "125f6c81.60151b",
        "x": 496.5,
        "y": 159,
        "wires": []
    },
    {
        "id": "8caa2041.66675",
        "type": "serial out",
        "z": "2afbfb83.36bbdc",
        "name": "",
        "serial": "95729381.aa63e",
        "x": 1084.5,
        "y": 176,
        "wires": []
    },
    {
        "id": "b09cf7b7.fe95b8",
        "type": "comment",
        "z": "4002af1a.e2087",
        "name": "Simulate incoming message",
        "info": "",
        "x": 379,
        "y": 460,
        "wires": []
    },
    {
        "id": "45df61eb.57c15",
        "type": "serial out",
        "z": "da8a8c10.478418",
        "name": "",
        "serial": "6b19e0ae.df542",
        "x": 585,
        "y": 214,
        "wires": []
    },
    {
        "id": "735a3891.df50c8",
        "type": "inject",
        "z": "da8a8c10.478418",
        "name": "",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 190,
        "y": 213,
        "wires": [
            [
                "1a0259f3.b958ae"
            ]
        ]
    },
    {
        "id": "1a0259f3.b958ae",
        "type": "function",
        "z": "da8a8c10.478418",
        "name": "Construct Serial Message",
        "func": "// global.timeRemaining is in milliseconds\nvar t = global.get(\"timeRemaining\") / 1000;\nvar h = Math.floor(t / 3600);\nvar m = Math.floor(t % 3600 / 60);\nvar s = Math.floor(t % 3600 % 60);\n\n// Format into hh:mm:ss\nmsg.payload = \"PRINT>Remaining: \" + (\"0\" + h).slice(-2) + \":\" + (\"0\" + m).slice(-2) + \":\" + (\"0\" + s).slice(-2) +\"\\r\\n\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 387.5,
        "y": 214,
        "wires": [
            [
                "45df61eb.57c15"
            ]
        ]
    },
    {
        "id": "6fbee0be.87511",
        "type": "comment",
        "z": "da8a8c10.478418",
        "name": "Serial Output to Arduino with I2C LCD display",
        "info": "",
        "x": 382,
        "y": 170,
        "wires": []
    },
    {
        "id": "5a43b840.c37628",
        "type": "inject",
        "z": "da8a8c10.478418",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "CLEAR>\\r\\n",
        "payloadType": "str",
        "x": 466,
        "y": 255,
        "wires": [
            [
                "45df61eb.57c15"
            ]
        ]
    },
    {
        "id": "4b394a72.5b0514",
        "type": "ui_dropdown",
        "z": "79f102f.6e1e8fc",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "a8157deb.70e9b",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "Look Under the Table",
                "type": "str"
            },
            {
                "label": "",
                "value": "Did you Hear a Noise?",
                "type": "str"
            },
            {
                "label": "",
                "value": "Check your coat pockets",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 581,
        "y": 160,
        "wires": [
            [
                "6b9276aa.81b39"
            ]
        ]
    },
    {
        "id": "8ed6cb8a.6bda9",
        "type": "ui_button",
        "z": "79f102f.6e1e8fc",
        "name": "",
        "group": "a8157deb.70e9b",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Send Hint",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "ToDevice/Hint",
        "x": 439,
        "y": 232,
        "wires": [
            [
                "21dbd41c.124c7c"
            ]
        ]
    },
    {
        "id": "6b9276aa.81b39",
        "type": "change",
        "z": "79f102f.6e1e8fc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hint",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730.5,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "22af6e3c.d96baa",
        "type": "comment",
        "z": "79f102f.6e1e8fc",
        "name": "Predefined Hints",
        "info": "",
        "x": 392,
        "y": 124,
        "wires": []
    },
    {
        "id": "6119aa01.7008a4",
        "type": "inject",
        "z": "79f102f.6e1e8fc",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 297.5,
        "y": 232,
        "wires": [
            [
                "8ed6cb8a.6bda9"
            ]
        ]
    },
    {
        "id": "219a34d8.462bbc",
        "type": "ui_colour_picker",
        "z": "858e5f8e.138f",
        "name": "Colour Wheel UI",
        "label": "Colour",
        "group": "d36d4324.1067f8",
        "format": "rgb",
        "outformat": "object",
        "showSwatch": false,
        "showPicker": true,
        "showValue": false,
        "showHue": false,
        "showAlpha": false,
        "showLightness": false,
        "square": "false",
        "dynOutput": "true",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "",
        "x": 520,
        "y": 400,
        "wires": [
            [
                "20926df8.d3fca2"
            ]
        ]
    },
    {
        "id": "c3ea7a22.245f98",
        "type": "serial out",
        "z": "858e5f8e.138f",
        "name": "",
        "serial": "7f6727ec.9d40c8",
        "x": 1350,
        "y": 460,
        "wires": []
    },
    {
        "id": "d40b6f2.c14cd9",
        "type": "function",
        "z": "858e5f8e.138f",
        "name": "Assign RGB to DMX channels 2/3/4",
        "func": "msg.payload[\"channels\"] = [\n    {\n    \"channel\" : \"2\",\n    \"value\" : msg.payload.r\n    },\n    {\n    \"channel\" : \"3\",\n    \"value\" : msg.payload.g\n    },\n    {\n    \"channel\" : \"4\",\n    \"value\" : msg.payload.b\n    }\n];\n\n// Update the editor node\nnode.status({fill:\"grey\", shape:\"ring\", text: \"RGB(\" + msg.payload.r + \",\" + msg.payload.g + \",\" + msg.payload.b + \")\"});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 400,
        "wires": [
            [
                "c3ea7a22.245f98"
            ]
        ]
    },
    {
        "id": "56b8022d.ecc254",
        "type": "inject",
        "z": "79f102f.6e1e8fc",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Look Under the Table",
        "payloadType": "str",
        "x": 381.5,
        "y": 164,
        "wires": [
            [
                "4b394a72.5b0514"
            ]
        ]
    },
    {
        "id": "c1e20172.33fc8",
        "type": "ui_dropdown",
        "z": "35c48219.d87086",
        "d": true,
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "a8157deb.70e9b",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "options": [
            {
                "label": "",
                "value": "Look Under the Table",
                "type": "str"
            },
            {
                "label": "",
                "value": "Did you Hear a Noise?",
                "type": "str"
            },
            {
                "label": "",
                "value": "Check your coat pockets",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "",
        "x": 474,
        "y": 438,
        "wires": [
            [
                "5ca5a5dc.c14fbc"
            ]
        ]
    },
    {
        "id": "52442ffd.c8dc08",
        "type": "ui_button",
        "z": "35c48219.d87086",
        "d": true,
        "name": "",
        "group": "a8157deb.70e9b",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "label": "Send Hint",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-question-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "ToDevice/Hint",
        "x": 332,
        "y": 510,
        "wires": [
            [
                "82b53bbe.ccfc98"
            ]
        ]
    },
    {
        "id": "5ca5a5dc.c14fbc",
        "type": "change",
        "z": "35c48219.d87086",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hint",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 623.5,
        "y": 438,
        "wires": [
            []
        ]
    },
    {
        "id": "76d1578.82e9628",
        "type": "comment",
        "z": "35c48219.d87086",
        "name": "Predefined Hints",
        "info": "",
        "x": 616,
        "y": 393,
        "wires": []
    },
    {
        "id": "bce0288b.5861f",
        "type": "change",
        "z": "35c48219.d87086",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hint",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 749.5,
        "y": 577,
        "wires": [
            [
                "78c04be2.f961dc"
            ]
        ]
    },
    {
        "id": "78c04be2.f961dc",
        "type": "ui_text",
        "z": "35c48219.d87086",
        "d": true,
        "group": "b1c5a111.b0ba08",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Hint Text",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 925,
        "y": 550,
        "wires": []
    },
    {
        "id": "82b53bbe.ccfc98",
        "type": "trigger",
        "z": "35c48219.d87086",
        "name": "",
        "op1": "hint",
        "op2": "{\"hint\":\"\"}",
        "op1type": "flow",
        "op2type": "json",
        "duration": "3",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 478.5,
        "y": 511,
        "wires": [
            [
                "27565b4f.e3386c"
            ]
        ]
    },
    {
        "id": "17aa0715.b8a189",
        "type": "debug",
        "z": "35c48219.d87086",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 983.5,
        "y": 612,
        "wires": []
    },
    {
        "id": "b615e826.5362e",
        "type": "inject",
        "z": "35c48219.d87086",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190.5,
        "y": 510,
        "wires": [
            [
                "52442ffd.c8dc08"
            ]
        ]
    },
    {
        "id": "27565b4f.e3386c",
        "type": "switch",
        "z": "35c48219.d87086",
        "name": "",
        "property": "hint",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "",
                "vt": "prev"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 605.5,
        "y": 532,
        "wires": [
            [
                "9c96a2a4.aa28e"
            ],
            [
                "bce0288b.5861f"
            ]
        ]
    },
    {
        "id": "9c96a2a4.aa28e",
        "type": "change",
        "z": "35c48219.d87086",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "hint",
                "pt": "msg",
                "to": "d",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 749,
        "y": 527,
        "wires": [
            [
                "78c04be2.f961dc"
            ]
        ]
    },
    {
        "id": "4ce04ba9.d08e2c",
        "type": "inject",
        "z": "35c48219.d87086",
        "name": "",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Look Under the Table",
        "payloadType": "str",
        "x": 274.5,
        "y": 442,
        "wires": [
            [
                "c1e20172.33fc8"
            ]
        ]
    },
    {
        "id": "c14e7006.2c61a",
        "type": "serial out",
        "z": "79f102f.6e1e8fc",
        "name": "",
        "serial": "d22f878e.fc259",
        "x": 840,
        "y": 232,
        "wires": []
    },
    {
        "id": "21dbd41c.124c7c",
        "type": "function",
        "z": "79f102f.6e1e8fc",
        "name": "Construct Serial Message",
        "func": "\n// Format into hh:mm:ss\nmsg.payload = \"PRINT>\" + flow.get(\"hint\") +\"\\r\\n\" + \"FEED>4\\r\\n\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 642.5,
        "y": 232,
        "wires": [
            [
                "c14e7006.2c61a",
                "32c6d689.47b28a"
            ]
        ]
    },
    {
        "id": "5c6c6672.b70fa8",
        "type": "ui_template",
        "z": "79f102f.6e1e8fc",
        "group": "a8157deb.70e9b",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<md-card-title>\n    <md-card-title-text>\n        <p class=\"md-headline\">{{msg.payload.name}}</p>\n    </md-card-title-text>\n    <span ng-class=\"'fa fa-print fa-2x'\"></span>\n</md-card-title>\n<md-card-content>\n    <p>\n        {{msg.payload.description?msg.payload.description:'Unknown'}}\n    </p>\n</md-card-content>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 557.5,
        "y": 98,
        "wires": [
            []
        ]
    },
    {
        "id": "2c7086de.2e194a",
        "type": "change",
        "z": "79f102f.6e1e8fc",
        "name": "Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "flow",
                "to": "{\"id\":\"Printer\",\"name\":\"Thermal Printer\",\"description\":\"Predefined hints can be sent to a thermal receipt printer\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 271,
        "y": 98,
        "wires": [
            [
                "5c6c6672.b70fa8"
            ]
        ]
    },
    {
        "id": "bca49e2.3ae506",
        "type": "link in",
        "z": "79f102f.6e1e8fc",
        "name": "",
        "links": [
            "8a4dffa5.a7935"
        ],
        "x": 178,
        "y": 98,
        "wires": [
            [
                "2c7086de.2e194a"
            ]
        ]
    },
    {
        "id": "4dba52c2.3fbcdc",
        "type": "comment",
        "z": "79f102f.6e1e8fc",
        "name": "Initial configuration",
        "info": "",
        "x": 310.5,
        "y": 57,
        "wires": []
    },
    {
        "id": "32c6d689.47b28a",
        "type": "debug",
        "z": "79f102f.6e1e8fc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 852.5,
        "y": 196,
        "wires": []
    },
    {
        "id": "8233f288.f213f8",
        "type": "debug",
        "z": "2afbfb83.36bbdc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 852.2666320800781,
        "y": 238.58334350585938,
        "wires": []
    },
    {
        "id": "1218614b.945e57",
        "type": "ui_slider",
        "z": "858e5f8e.138f",
        "name": "Brightness Slider UI",
        "label": "Brightness",
        "tooltip": "",
        "group": "d36d4324.1067f8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "",
        "min": 0,
        "max": "255",
        "step": 1,
        "x": 510,
        "y": 280,
        "wires": [
            [
                "c64c3055.ad57b"
            ]
        ]
    },
    {
        "id": "521be2d3.5574f4",
        "type": "function",
        "z": "858e5f8e.138f",
        "name": "Assign to DMX channel 1",
        "func": "var brightness = msg.payload;\n\nmsg.payload = {\n    \"channels\": [\n        {\n            \"channel\": 1,\n            \"value\": brightness\n        }\n    ]\n}\n\n// Update the editor node\nnode.status({fill:\"grey\", shape:\"ring\", text: \"Brightness:\" + brightness});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 280,
        "wires": [
            [
                "c3ea7a22.245f98"
            ]
        ]
    },
    {
        "id": "2192e383.059b3c",
        "type": "change",
        "z": "858e5f8e.138f",
        "name": "Assign initial brightness",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "200",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 280,
        "wires": [
            [
                "1218614b.945e57"
            ]
        ]
    },
    {
        "id": "290ac2be.83aaa6",
        "type": "change",
        "z": "858e5f8e.138f",
        "name": "Set initial RGB value",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "#80808080",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 400,
        "wires": [
            [
                "219a34d8.462bbc"
            ]
        ]
    },
    {
        "id": "c5a8bfde.4bc3a8",
        "type": "trigger",
        "z": "858e5f8e.138f",
        "name": "",
        "op1": "true",
        "op2": "false",
        "op1type": "bool",
        "op2type": "bool",
        "duration": "5",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 700,
        "y": 520,
        "wires": [
            [
                "804d0c6f.009bc"
            ]
        ]
    },
    {
        "id": "7d50a550.750a6c",
        "type": "ui_template",
        "z": "b7c719b.18888e8",
        "d": true,
        "group": "b1c5a111.b0ba08",
        "name": "Full screen CSS Overrides",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<style>\n/* Get rid of the default padding */\n.nr-dashboard-template {\n      padding: 0;\n      margin: 0;\n      width:1280px !important;\n  }\n/* Remove the top toolbar */\nmd-toolbar {\n    display: none;\n}\nmd-content {\n    width: 1280px !important;\n    height: 1024px !important;\n    overflow: hidden;\n}\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "global",
        "x": 681.5,
        "y": 290,
        "wires": [
            []
        ]
    },
    {
        "id": "c9289f5e.1fb3b8",
        "type": "link out",
        "z": "f5a6f1b2.e1c8b8",
        "name": "On Game Reset",
        "links": [
            "b72df54c.54dbc8",
            "f476429e.39f778"
        ],
        "x": 322.5,
        "y": 344,
        "wires": []
    },
    {
        "id": "92141e81.c56138",
        "type": "ui_template",
        "z": "b7c719b.18888e8",
        "group": "b1c5a111.b0ba08",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": " <div ng-bind-html=\"msg.fullscreen\">\n    <div ng-if=\"msg.fullscreen == true\">\n        FullSCRENEE\n        {{{msg.fullscreen}}}\n        <!-- code to render a large video block-->\n    </div>\n    <div ng-if=\"msg.fullscreen != true\">\n        not sfull screen :(\n        <!-- code to render the regular video block -->\n    </div>\n    </div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "local",
        "x": 800.5,
        "y": 366,
        "wires": [
            []
        ]
    },
    {
        "id": "7bc6e045.eb1d48",
        "type": "change",
        "z": "b7c719b.18888e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fullscreen",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 533.5,
        "y": 374,
        "wires": [
            [
                "92141e81.c56138"
            ]
        ]
    },
    {
        "id": "a8fa1cd0.20c62",
        "type": "ui_ui_control",
        "z": "b7c719b.18888e8",
        "d": true,
        "name": "",
        "events": "all",
        "x": 792,
        "y": 479,
        "wires": [
            []
        ]
    },
    {
        "id": "ccee1c0b.8e5fe",
        "type": "ui_button",
        "z": "b7c719b.18888e8",
        "d": true,
        "name": "",
        "group": "3d55e429.707bbc",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Switch to In-Game Display",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "{\"tabs\":{\"hide\":\"Room\",\"disable\":[\"Room\",\"unused_stuff\"]}}",
        "payloadType": "json",
        "topic": "",
        "x": 560,
        "y": 520,
        "wires": [
            [
                "a8fa1cd0.20c62"
            ]
        ]
    },
    {
        "id": "caccf580.f073b",
        "type": "ui_button",
        "z": "b7c719b.18888e8",
        "d": true,
        "name": "",
        "group": "3d55e429.707bbc",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "Room",
        "payloadType": "str",
        "topic": "",
        "x": 600.5,
        "y": 465,
        "wires": [
            [
                "a8fa1cd0.20c62"
            ]
        ]
    },
    {
        "id": "fa74b00d.b2c1b8",
        "type": "comment",
        "z": "b7c719b.18888e8",
        "name": "Convert ms into hh:mm:ss",
        "info": "",
        "x": 1690,
        "y": 140,
        "wires": []
    },
    {
        "id": "6f016938.2dd2f",
        "type": "comment",
        "z": "b7c719b.18888e8",
        "name": "Calculate time elapsed (or time remaining)",
        "info": "",
        "x": 1380,
        "y": 140,
        "wires": [],
        "icon": "node-red/parser-html.svg"
    },
    {
        "id": "4e6ed3c7.e89844",
        "type": "uibuilder",
        "z": "b7c719b.18888e8",
        "name": "Game Timer and Clue Display",
        "topic": "",
        "url": "timer_clue_display",
        "fwdInMessages": false,
        "allowScripts": false,
        "allowStyles": false,
        "copyIndex": true,
        "showfolder": false,
        "x": 2230,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "84da0a61.880808",
        "type": "inject",
        "z": "b7c719b.18888e8",
        "name": "Every 1 sec",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1120,
        "y": 180,
        "wires": [
            [
                "a96eb457.25ffd8"
            ]
        ]
    },
    {
        "id": "57260f4f.9c2e1",
        "type": "comment",
        "z": "b7c719b.18888e8",
        "name": "Trigger",
        "info": "",
        "x": 1130,
        "y": 140,
        "wires": [],
        "icon": "node-red/parser-html.svg"
    },
    {
        "id": "fcb7b0a7.445e1",
        "type": "ui_audio",
        "z": "b7c719b.18888e8",
        "name": "",
        "group": "da8ca63f.5e4b38",
        "voice": "",
        "always": true,
        "x": 1680,
        "y": 480,
        "wires": []
    },
    {
        "id": "fc4cef21.2c75d8",
        "type": "file in",
        "z": "b7c719b.18888e8",
        "name": "",
        "filename": "C:\\Users\\alast\\Music\\sfx\\musicbox.mp3",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1428,
        "y": 480,
        "wires": [
            [
                "fcb7b0a7.445e1"
            ]
        ]
    },
    {
        "id": "a96eb457.25ffd8",
        "type": "function",
        "z": "b7c719b.18888e8",
        "name": "Update Game Timer",
        "func": "// The current timestamp is injected at the start of the flow\nvar currentTime = msg.payload;\n\n// If this is the first time the flow has run, set the start time\nif(context.get(\"startTime\") === undefined) {\n    context.set(\"startTime\", currentTime);\n}\nvar startTime = context.get(\"startTime\");\n\n// Calculate the time elapsed since the flow started\nvar elapsedTime = (currentTime - startTime);\n\n// Update the msg to carry time elapsed      \nmsg.time = elapsedTime;\n// Or, time remaining\nmsg.time = 3600000 - elapsedTime;\n\n// Display value in the editor\nnode.status({fill:\"green\",shape:\"dot\",text:elapsedTime});\n\n// Pass value along the flow\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1390,
        "y": 180,
        "wires": [
            [
                "1ae11171.a8ec6f"
            ]
        ]
    },
    {
        "id": "1ae11171.a8ec6f",
        "type": "function",
        "z": "b7c719b.18888e8",
        "name": "Format Time As HH:MM:SS",
        "func": "// msg.time is in milliseconds\nvar t = msg.time / 1000;\nvar h = Math.floor(t / 3600);\nvar m = Math.floor(t % 3600 / 60);\nvar s = Math.floor(t % 3600 % 60);\n\n// Format into hh:mm:ss\nmsg.timerText = (\"0\" + h).slice(-2) + \":\" + (\"0\" + m).slice(-2) + \":\" + (\"0\" + s).slice(-2);\n\n// Update the editor node\nnode.status({fill:\"green\", shape:\"dot\", text:msg.timerText});\n\n// Forward the message along the flow\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1680,
        "y": 180,
        "wires": [
            [
                "b4042101.e19e2"
            ]
        ]
    },
    {
        "id": "96f06f2e.a36a5",
        "type": "comment",
        "z": "b7c719b.18888e8",
        "name": "Display on ui builder page",
        "info": "",
        "x": 2230,
        "y": 240,
        "wires": []
    },
    {
        "id": "b3bf7eea.f49e98",
        "type": "trigger",
        "z": "b7c719b.18888e8",
        "name": "",
        "op1": "",
        "op2": " ",
        "op1type": "pay",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "outputs": 1,
        "x": 1390,
        "y": 380,
        "wires": [
            [
                "f4d54241.06eba"
            ]
        ]
    },
    {
        "id": "f4d54241.06eba",
        "type": "change",
        "z": "b7c719b.18888e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "clueText",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1710,
        "y": 380,
        "wires": [
            [
                "b4042101.e19e2"
            ]
        ]
    },
    {
        "id": "b4042101.e19e2",
        "type": "join",
        "z": "b7c719b.18888e8",
        "name": "",
        "mode": "custom",
        "build": "merged",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": true,
        "timeout": "",
        "count": "1",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1990,
        "y": 280,
        "wires": [
            [
                "4e6ed3c7.e89844"
            ]
        ]
    },
    {
        "id": "9ff3c401.492fa8",
        "type": "comment",
        "z": "b7c719b.18888e8",
        "name": "How long to display clue before clearing",
        "info": "",
        "x": 1410,
        "y": 340,
        "wires": []
    },
    {
        "id": "6a66447c.853c14",
        "type": "comment",
        "z": "b7c719b.18888e8",
        "name": "Combine time + clue",
        "info": "",
        "x": 1990,
        "y": 240,
        "wires": []
    },
    {
        "id": "c817b576.2f167",
        "type": "comment",
        "z": "b7c719b.18888e8",
        "name": "Set clue text",
        "info": "",
        "x": 1090,
        "y": 320,
        "wires": [],
        "icon": "node-red/parser-html.svg"
    },
    {
        "id": "9f78d281.ab5168",
        "type": "comment",
        "z": "b7c719b.18888e8",
        "name": "Set msg variable",
        "info": "",
        "x": 1700,
        "y": 340,
        "wires": []
    },
    {
        "id": "17cea4fb.ccb92b",
        "type": "comment",
        "z": "b7c719b.18888e8",
        "name": "Select SFX to play when clue displayed",
        "info": "",
        "x": 1430,
        "y": 440,
        "wires": []
    },
    {
        "id": "36e38d52.74b75a",
        "type": "comment",
        "z": "b7c719b.18888e8",
        "name": "Send to audio output",
        "info": "",
        "x": 1720,
        "y": 440,
        "wires": []
    },
    {
        "id": "92a3d612.7206a",
        "type": "ui_button",
        "z": "31a7412f.61a816",
        "name": "",
        "group": "eed1a8a6.8d8878",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Clear Log",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "true",
        "payloadType": "bool",
        "topic": "",
        "x": 560,
        "y": 220,
        "wires": [
            [
                "bf085b.4d65d7a8"
            ]
        ]
    },
    {
        "id": "bf085b.4d65d7a8",
        "type": "change",
        "z": "31a7412f.61a816",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "logDisplay",
                "pt": "flow",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 220,
        "wires": [
            [
                "445cf6fe.4d8078"
            ]
        ]
    },
    {
        "id": "75358499.0d6b64",
        "type": "comment",
        "z": "31a7412f.61a816",
        "name": "Clear the Log Display",
        "info": "",
        "x": 600,
        "y": 180,
        "wires": []
    },
    {
        "id": "9593409f.b9608",
        "type": "comment",
        "z": "31a7412f.61a816",
        "name": "Log event",
        "info": "",
        "x": 260,
        "y": 300,
        "wires": []
    },
    {
        "id": "e4d4ff91.d3441",
        "type": "comment",
        "z": "31a7412f.61a816",
        "name": "Only continue if logging enabled",
        "info": "",
        "x": 490,
        "y": 300,
        "wires": []
    },
    {
        "id": "3cf3cc1a.468f24",
        "type": "comment",
        "z": "31a7412f.61a816",
        "name": "Specify fields to log",
        "info": "",
        "x": 750,
        "y": 300,
        "wires": []
    },
    {
        "id": "1052466c.ae07d2",
        "type": "comment",
        "z": "31a7412f.61a816",
        "name": "Send Log to Dashboard",
        "info": "",
        "x": 1050,
        "y": 240,
        "wires": []
    },
    {
        "id": "a9e1b02b.620a08",
        "type": "comment",
        "z": "31a7412f.61a816",
        "name": "Send Log to File",
        "info": "",
        "x": 1020,
        "y": 360,
        "wires": []
    },
    {
        "id": "d0cae11d.284fe8",
        "type": "comment",
        "z": "a1744621.5dceb",
        "name": "Create a dashboard drop-down with list of SFX to choose from",
        "info": "",
        "x": 330,
        "y": 300,
        "wires": []
    },
    {
        "id": "cf073f50.97a6c8",
        "type": "comment",
        "z": "a1744621.5dceb",
        "name": "When button pressed, retrieve selected SFX file and send to audio out",
        "info": "",
        "x": 350,
        "y": 400,
        "wires": []
    },
    {
        "id": "ce58896.625c2f8",
        "type": "ui_audio",
        "z": "d9c1808b.c8e738",
        "name": "",
        "group": "70e5d1d.359a23",
        "voice": "en-GB",
        "always": true,
        "x": 1320,
        "y": 320,
        "wires": []
    },
    {
        "id": "d4d7d3a8.01bc5",
        "type": "comment",
        "z": "d9c1808b.c8e738",
        "name": "Inject node repeats every x seconds",
        "info": "",
        "x": 200,
        "y": 280,
        "wires": []
    },
    {
        "id": "8fd48b86.8d9a3",
        "type": "function",
        "z": "d9c1808b.c8e738",
        "name": "Calculate time remaining",
        "func": "// Retrieve the time which this flow was started, or if this\n// the first run, get the timestamp from the previous node\nvar startTime = context.get(\"startTime\") || msg.payload;\n\n// Update the stored value\ncontext.set(\"startTime\", startTime);\n\n// Now get the current time\nvar currentTime = msg.payload;\n\n// Calculate how much time has elapsed (in seconds)\nvar elapsedTime = (currentTime - startTime) / 1000;\n\n// Calculate time remaining\nvar remainingTime = 60 - elapsedTime;\n\n// Round to the nearest 10 seconds\nvar roundedTime = Math.ceil(remainingTime / 10) * 10;\n\nmsg.roundedTime = roundedTime;\n\n// Update editor status\nnode.status({fill:\"grey\",shape:\"dot\",text:elapsedTime + \",\" + msg.roundedTime});\n\n// Stop sending messages after time runs out\nif(roundedTime >= 0) {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 320,
        "wires": [
            [
                "e4fd1a73.08e6f8"
            ]
        ]
    },
    {
        "id": "c3f8f439.2ee81",
        "type": "inject",
        "z": "d9c1808b.c8e738",
        "d": true,
        "name": "",
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 320,
        "wires": [
            [
                "8fd48b86.8d9a3"
            ]
        ]
    },
    {
        "id": "e4fd1a73.08e6f8",
        "type": "rbe",
        "z": "d9c1808b.c8e738",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "property": "roundedTime",
        "x": 750,
        "y": 320,
        "wires": [
            [
                "e60e3e01.b82d88"
            ]
        ]
    },
    {
        "id": "77a01fb.6acfbe",
        "type": "comment",
        "z": "d9c1808b.c8e738",
        "name": "Trigger only when change",
        "info": "",
        "x": 770,
        "y": 280,
        "wires": []
    },
    {
        "id": "e60e3e01.b82d88",
        "type": "function",
        "z": "d9c1808b.c8e738",
        "name": "Form sentence",
        "func": "if(msg.roundedTime > 0) {\n    var r = Math.random();\n    if(r<0.33) {\n        msg.payload = \"You have \" + msg.roundedTime + \" seconds remaining\";\n    }\n    else if(r<0.66) {\n        msg.payload = \"Just \" + msg.roundedTime + \" seconds until detonation\";\n    }\n    else {\n        msg.payload = \"Quickly! There's only \" + msg.roundedTime + \" seconds left!\";\n    }\n}\nelse {\n    msg.payload = \"You have run out of time.\";\n}\n\n// Update editor status\nnode.status({fill:\"grey\",shape:\"dot\",text:msg.payload});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1040,
        "y": 320,
        "wires": [
            [
                "ce58896.625c2f8"
            ]
        ]
    },
    {
        "id": "dd537ad7.61b3e8",
        "type": "comment",
        "z": "d9c1808b.c8e738",
        "name": "Create phrase based on time remaining",
        "info": "",
        "x": 1070,
        "y": 280,
        "wires": []
    },
    {
        "id": "f738e590.e6a37",
        "type": "comment",
        "z": "d9c1808b.c8e738",
        "name": "Rounded to nearest 10secs",
        "info": "",
        "x": 500,
        "y": 280,
        "wires": []
    },
    {
        "id": "2a20d06.556bbb",
        "type": "comment",
        "z": "d9c1808b.c8e738",
        "name": "Use Text-To-Speech engine",
        "info": "",
        "x": 1380,
        "y": 280,
        "wires": []
    },
    {
        "id": "55080afd.72cc24",
        "type": "http request",
        "z": "1e0f02c5.fd2dc5",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": false,
        "url": "http://192.168.1.4?h={{{h}}}&m={{{m}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 710,
        "y": 260,
        "wires": [
            [
                "904a667.6b83318"
            ]
        ]
    },
    {
        "id": "d6341a86.458fc",
        "type": "function",
        "z": "1e0f02c5.fd2dc5",
        "name": "Get current time",
        "func": "// Retrieve current time\nvar now = new Date();\n// Extract the hour and minute components\nvar h = now.getHours();\nvar m = now.getMinutes();\n// Add the time elements to the message object\nmsg.h = h;\nmsg.m = m;\n// And pass along the flow\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 260,
        "wires": [
            [
                "55080afd.72cc24"
            ]
        ]
    },
    {
        "id": "539e2c.db0c51d4",
        "type": "inject",
        "z": "1e0f02c5.fd2dc5",
        "name": "",
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 260,
        "wires": [
            [
                "d6341a86.458fc"
            ]
        ]
    },
    {
        "id": "e67c7173.0563d",
        "type": "comment",
        "z": "1e0f02c5.fd2dc5",
        "name": "Trigger every minute",
        "info": "",
        "x": 250,
        "y": 220,
        "wires": []
    },
    {
        "id": "f39bdf6f.44f6a",
        "type": "comment",
        "z": "1e0f02c5.fd2dc5",
        "name": "Retrieve hour and minute",
        "info": "",
        "x": 490,
        "y": 220,
        "wires": []
    },
    {
        "id": "4598cf28.b11e28",
        "type": "comment",
        "z": "1e0f02c5.fd2dc5",
        "name": "Pass parameters to GET request",
        "info": "",
        "x": 770,
        "y": 220,
        "wires": []
    },
    {
        "id": "904a667.6b83318",
        "type": "debug",
        "z": "1e0f02c5.fd2dc5",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1010,
        "y": 260,
        "wires": []
    },
    {
        "id": "4fbbb0a7.41f16",
        "type": "comment",
        "z": "1e0f02c5.fd2dc5",
        "name": "(Optional) Do something with the page returned",
        "info": "",
        "x": 1120,
        "y": 220,
        "wires": []
    },
    {
        "id": "74b3b11d.ee9978",
        "type": "ui_button",
        "z": "858e5f8e.138f",
        "name": "UV Blackout",
        "group": "d36d4324.1067f8",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "UV Blackout",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 530,
        "y": 520,
        "wires": [
            [
                "c5a8bfde.4bc3a8",
                "f86ffa24.4668f8"
            ]
        ]
    },
    {
        "id": "b84ed8f2.442b08",
        "type": "inject",
        "z": "858e5f8e.138f",
        "name": "Delayed Startup",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 80,
        "wires": [
            [
                "a90489fa.2ce22"
            ]
        ]
    },
    {
        "id": "c64c3055.ad57b",
        "type": "change",
        "z": "858e5f8e.138f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "brightness",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 280,
        "wires": [
            [
                "521be2d3.5574f4"
            ]
        ]
    },
    {
        "id": "257b3e88.473c22",
        "type": "ui_button",
        "z": "858e5f8e.138f",
        "name": "Save",
        "group": "d36d4324.1067f8",
        "order": 3,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Save",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 270,
        "y": 120,
        "wires": [
            [
                "4845afa5.eb8f88"
            ]
        ]
    },
    {
        "id": "747ea446.5a790c",
        "type": "ui_button",
        "z": "858e5f8e.138f",
        "name": "Restore",
        "group": "d36d4324.1067f8",
        "order": 4,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Restore",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 260,
        "y": 160,
        "wires": [
            [
                "7c5da0ce.2cbab"
            ]
        ]
    },
    {
        "id": "20926df8.d3fca2",
        "type": "change",
        "z": "858e5f8e.138f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "colour",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 400,
        "wires": [
            [
                "d40b6f2.c14cd9"
            ]
        ]
    },
    {
        "id": "4845afa5.eb8f88",
        "type": "change",
        "z": "858e5f8e.138f",
        "name": "Store brightness and RGB values",
        "rules": [
            {
                "t": "set",
                "p": "savedBrightness",
                "pt": "flow",
                "to": "brightness",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "savedColour",
                "pt": "flow",
                "to": "colour",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "2db8de02.3dde4a",
        "type": "change",
        "z": "858e5f8e.138f",
        "name": "Restore saved brightness",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "savedBrightness",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 320,
        "wires": [
            [
                "1218614b.945e57"
            ]
        ]
    },
    {
        "id": "d3c0b650.f64b6",
        "type": "change",
        "z": "858e5f8e.138f",
        "name": "Restore saved RGB",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "savedColour",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 440,
        "wires": [
            [
                "219a34d8.462bbc"
            ]
        ]
    },
    {
        "id": "a90489fa.2ce22",
        "type": "link out",
        "z": "858e5f8e.138f",
        "name": "Delayed Start",
        "links": [
            "df94f6e3.e33cf",
            "3c771563.4e80f2"
        ],
        "x": 375,
        "y": 80,
        "wires": []
    },
    {
        "id": "7c5da0ce.2cbab",
        "type": "link out",
        "z": "858e5f8e.138f",
        "name": "Restore",
        "links": [
            "6dbe9168.97a8c8",
            "9ca45147.da1d58"
        ],
        "x": 375,
        "y": 160,
        "wires": []
    },
    {
        "id": "df94f6e3.e33cf",
        "type": "link in",
        "z": "858e5f8e.138f",
        "name": "",
        "links": [
            "a90489fa.2ce22"
        ],
        "x": 115,
        "y": 400,
        "wires": [
            [
                "290ac2be.83aaa6"
            ]
        ]
    },
    {
        "id": "3c771563.4e80f2",
        "type": "link in",
        "z": "858e5f8e.138f",
        "name": "",
        "links": [
            "a90489fa.2ce22"
        ],
        "x": 115,
        "y": 280,
        "wires": [
            [
                "2192e383.059b3c"
            ]
        ]
    },
    {
        "id": "6dbe9168.97a8c8",
        "type": "link in",
        "z": "858e5f8e.138f",
        "name": "",
        "links": [
            "7c5da0ce.2cbab"
        ],
        "x": 115,
        "y": 320,
        "wires": [
            [
                "2db8de02.3dde4a"
            ]
        ]
    },
    {
        "id": "9ca45147.da1d58",
        "type": "link in",
        "z": "858e5f8e.138f",
        "name": "",
        "links": [
            "7c5da0ce.2cbab"
        ],
        "x": 115,
        "y": 440,
        "wires": [
            [
                "d3c0b650.f64b6"
            ]
        ]
    },
    {
        "id": "ba9c076b.4ecee8",
        "type": "ui_button",
        "z": "858e5f8e.138f",
        "name": "Lightning Strike",
        "group": "d36d4324.1067f8",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Lightning Strike",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 520,
        "y": 660,
        "wires": [
            [
                "5e938919.95b4a",
                "103c19b5.1ca3a6"
            ]
        ]
    },
    {
        "id": "804d0c6f.009bc",
        "type": "switch",
        "z": "858e5f8e.138f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 850,
        "y": 520,
        "wires": [
            [
                "c6970ad.78d5ff8"
            ],
            [
                "334012d2.343546"
            ]
        ]
    },
    {
        "id": "c6970ad.78d5ff8",
        "type": "change",
        "z": "858e5f8e.138f",
        "name": "Turn on UV flood",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"channels\":[{\"channel\":1,\"value\":0},{\"channel\":11,\"value\":255},{\"channel\":12,\"value\":255},{\"channel\":13,\"value\":255},{\"channel\":14,\"value\":255}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 500,
        "wires": [
            [
                "c3ea7a22.245f98"
            ]
        ]
    },
    {
        "id": "334012d2.343546",
        "type": "function",
        "z": "858e5f8e.138f",
        "name": "Restore previous lights",
        "func": "msg.payload = {\n    \"channels\": [\n        {\n            \"channel\": 1,\n            \"value\": flow.get(\"brightness\")\n        },\n        {\n            \"channel\": 8,\n            \"value\": 0\n        },\n        {\n            \"channel\": 9,\n            \"value\": 0\n        },\n        {\n            \"channel\": 11,\n            \"value\": 0\n        }\n    ]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1050,
        "y": 540,
        "wires": [
            [
                "c3ea7a22.245f98"
            ]
        ]
    },
    {
        "id": "5e938919.95b4a",
        "type": "file in",
        "z": "858e5f8e.138f",
        "name": "",
        "filename": "C:\\Users\\alast\\Music\\SFX\\Thunder_Clap.wav",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 810,
        "y": 700,
        "wires": [
            [
                "fea65c0a.0bc908"
            ]
        ]
    },
    {
        "id": "fea65c0a.0bc908",
        "type": "ui_audio",
        "z": "858e5f8e.138f",
        "name": "",
        "group": "d36d4324.1067f8",
        "voice": "",
        "always": "",
        "x": 1080,
        "y": 700,
        "wires": []
    },
    {
        "id": "103c19b5.1ca3a6",
        "type": "function",
        "z": "858e5f8e.138f",
        "name": "Send Lightning Flashes",
        "func": "// Send a series of flashes of varying brightness as follows\nvar lightningIntensities = [32,128,164,128,96,64,128,64,32,0,255,255,192,176,164,148,128,112,96,64,56,32,24,16,8,4,2,0,0,0,0,0,0,0,0,0,0,0];\nfor(var i=0; i<lightningIntensities.length; i++){\n    msg.payload = {\n    \"channels\": [\n        {\n            \"channel\": 1,\n            \"value\": lightningIntensities[i]\n        },\n        {\n            \"channel\": 2,\n            \"value\": 224\n        },\n        {\n            \"channel\": 3,\n            \"value\": 224\n        },\n        {\n            \"channel\": 4,\n            \"value\": 255\n        }\n    ]};\n  node.send(msg);  \n}\n\n// Now restore the brightess and RGB value\nvar previousColour = flow.get(\"colour\");\nvar previousBrightness = flow.get(\"brightness\");\nmsg.payload = {    \n    \"channels\": [            \n        {            \n            \"channel\": 1,           \n            \"value\": previousBrightness\n        },\n        {            \n            \"channel\": 2,           \n            \"value\": previousColour.r\n        },\n        {            \n            \"channel\": 3,           \n            \"value\": previousColour.g\n        },\n        {            \n            \"channel\": 4,           \n            \"value\": previousColour.b\n        },\n    ]\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 660,
        "wires": [
            [
                "c3ea7a22.245f98"
            ]
        ]
    },
    {
        "id": "2865380a.3f69c8",
        "type": "ui_button",
        "z": "858e5f8e.138f",
        "name": "Police Siren",
        "group": "d36d4324.1067f8",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Police Siren",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 510,
        "y": 800,
        "wires": [
            [
                "6cfc61d6.501c48",
                "2e03b65.d267b4a"
            ]
        ]
    },
    {
        "id": "6cfc61d6.501c48",
        "type": "file in",
        "z": "858e5f8e.138f",
        "name": "",
        "filename": "C:\\Users\\alast\\Music\\SFX\\police_siren.mp3",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 810,
        "y": 840,
        "wires": [
            [
                "49618ec8.390958"
            ]
        ]
    },
    {
        "id": "49618ec8.390958",
        "type": "ui_audio",
        "z": "858e5f8e.138f",
        "name": "",
        "group": "d36d4324.1067f8",
        "voice": "",
        "always": "",
        "x": 1080,
        "y": 840,
        "wires": []
    },
    {
        "id": "2e03b65.d267b4a",
        "type": "function",
        "z": "858e5f8e.138f",
        "name": "Red/Blue Lights",
        "func": "for(var i=0; i<16; i++){\n    msg.payload = {\n    \"channels\": [\n        {\n            \"channel\": 1,\n            \"value\": 255\n        },\n        {\n            \"channel\": 2,\n            \"value\": (i%2 ? 255:0)\n        },\n        {\n            \"channel\": 3,\n            \"value\": 0\n        },\n        {\n            \"channel\": 4,\n            \"value\": (i%2 ? 0:255)\n        }\n    ]};\n  node.send(msg);  \n}\n\n// Now restore the brightess and RGB value\nvar previousColour = flow.get(\"colour\");\nvar previousBrightness = flow.get(\"brightness\");\nmsg.payload = {    \n    \"channels\": [            \n        {            \n            \"channel\": 1,           \n            \"value\": previousBrightness\n        },\n        {            \n            \"channel\": 2,           \n            \"value\": previousColour.r\n        },\n        {            \n            \"channel\": 3,           \n            \"value\": previousColour.g\n        },\n        {            \n            \"channel\": 4,           \n            \"value\": previousColour.b\n        },\n    ]\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 800,
        "wires": [
            [
                "514f57d7.86d56"
            ]
        ]
    },
    {
        "id": "514f57d7.86d56",
        "type": "delay",
        "z": "858e5f8e.138f",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "2",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1070,
        "y": 800,
        "wires": [
            [
                "c3ea7a22.245f98"
            ]
        ]
    },
    {
        "id": "f86ffa24.4668f8",
        "type": "file in",
        "z": "858e5f8e.138f",
        "name": "",
        "filename": "C:\\Users\\alast\\Music\\SFX\\uv_appear.wav",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 800,
        "y": 580,
        "wires": [
            [
                "bae3f2a7.fa72e8"
            ]
        ]
    },
    {
        "id": "bae3f2a7.fa72e8",
        "type": "ui_audio",
        "z": "858e5f8e.138f",
        "name": "",
        "group": "d36d4324.1067f8",
        "voice": "",
        "always": "",
        "x": 1080,
        "y": 580,
        "wires": []
    },
    {
        "id": "17c6a1be.eb1306",
        "type": "ui_switch",
        "z": "858e5f8e.138f",
        "name": "Spotlight",
        "label": "Spotlight",
        "tooltip": "",
        "group": "d36d4324.1067f8",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 520,
        "y": 960,
        "wires": [
            [
                "b7588cae.286e68"
            ]
        ]
    },
    {
        "id": "b7588cae.286e68",
        "type": "switch",
        "z": "858e5f8e.138f",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 660,
        "y": 960,
        "wires": [
            [
                "c24d3a5f.5fba3"
            ],
            [
                "ac98849b.42228"
            ]
        ]
    },
    {
        "id": "c24d3a5f.5fba3",
        "type": "change",
        "z": "858e5f8e.138f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"channels\":[{\"channel\":15,\"value\":255},{\"channel\":16,\"value\":0},{\"channel\":17,\"value\":0},{\"channel\":18,\"value\":0},{\"channel\":19,\"value\":32}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 940,
        "wires": [
            [
                "c3ea7a22.245f98"
            ]
        ]
    },
    {
        "id": "ac98849b.42228",
        "type": "change",
        "z": "858e5f8e.138f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"channels\":[{\"channel\":15,\"value\":0}]}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 980,
        "wires": [
            [
                "c3ea7a22.245f98"
            ]
        ]
    },
    {
        "id": "984b746f.17115",
        "type": "serial in",
        "z": "1c07f858.b60d1",
        "name": "",
        "serial": "fff6b.5d9380958",
        "x": 430,
        "y": 200,
        "wires": [
            [
                "daec621f.c4e21"
            ]
        ]
    },
    {
        "id": "daec621f.c4e21",
        "type": "function",
        "z": "1c07f858.b60d1",
        "name": "",
        "func": "var outputMsgs = [];\nvar values = msg.payload.trim().split(\";\");\nfor (var v in values) {\n  outputMsgs.push({payload:values[v]});\n}\nreturn outputMsgs;",
        "outputs": 4,
        "noerr": 0,
        "x": 600,
        "y": 200,
        "wires": [
            [
                "87bd049f.706bb"
            ],
            [
                "8f8b6043.47dd78"
            ],
            [
                "685fd2a3.20719c"
            ],
            [
                "fa2cf6a5.61cd38",
                "6025943b.8854ec"
            ]
        ]
    },
    {
        "id": "87bd049f.706bb",
        "type": "change",
        "z": "1c07f858.b60d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "colour",
                "pt": "msg",
                "to": "(msg.payload=\"1\")? \"green\" : \"red\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "(msg.payload=\"1\")? \"true\" : \"false\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "7c90b0b3.ed396",
        "type": "inject",
        "z": "6b4c061.cc1cbf8",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "91909730.a7a5e"
            ]
        ]
    },
    {
        "id": "a723b4ba.92f9f8",
        "type": "debug",
        "z": "6b4c061.cc1cbf8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 490,
        "y": 140,
        "wires": []
    },
    {
        "id": "91909730.a7a5e",
        "type": "ui_template",
        "z": "6b4c061.cc1cbf8",
        "group": "45afec4a.21f654",
        "name": "",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<!-- https://css-tricks.com/css3-clock/ -->\n<style>\n    #clock {\n        position: relative;\n        width: 600px;\n        height: 600px;\n        margin: 20px auto 0 auto;\n        background: url(/CSS3Clock/images/clockface.jpg);\n        list-style: none;\n    }\n    \n    #sec, #min, #hour {\n        position: absolute;\n        width: 30px;\n        height: 600px;\n        top: 0px;\n        left: 285px;\n    }\n    \n    #sec {\n        background: url(/CSS3Clock/images/sechand.png);\n        z-index: 3;\n    }\n       \n    #min {\n        background: url(/CSS3Clock/images/minhand.png);\n        z-index: 2;\n    }\n       \n    #hour {\n        background: url(/CSS3Clock/images/hourhand.png);\n        z-index: 1;\n    }\n</style>\n\n<ul id=\"clock\">\t\n    <li id=\"sec\"></li>\n    <li id=\"hour\"></li>\n    <li id=\"min\"></li>\n</ul>\n\n<script>\n    $(function() {\n \n        setInterval( function() {\n            var seconds = new Date().getSeconds();\n            var sdegree = seconds * 6;\n            var srotate = \"rotate(\" + sdegree + \"deg)\";\n            \n            $(\"#sec\").css({ \"transform\": srotate });\n          \n        }, 1000 );\n        \n        setInterval( function() {\n            var hours = new Date().getHours();\n            var mins = new Date().getMinutes();\n            var hdegree = hours * 30 + (mins / 2);\n            var hrotate = \"rotate(\" + hdegree + \"deg)\";\n            \n            $(\"#hour\").css({ \"transform\": hrotate});\n          \n        }, 1000 );\n        \n        setInterval( function() {\n            var mins = new Date().getMinutes();\n            var mdegree = mins * 6;\n            var mrotate = \"rotate(\" + mdegree + \"deg)\";\n            \n            $(\"#min\").css({ \"transform\" : mrotate });\n          \n        }, 1000 );\n \n});\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "x": 320,
        "y": 140,
        "wires": [
            [
                "a723b4ba.92f9f8"
            ]
        ]
    },
    {
        "id": "8f8b6043.47dd78",
        "type": "change",
        "z": "1c07f858.b60d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "colour",
                "pt": "msg",
                "to": "(msg.payload=\"1\")? \"green\" : \"red\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "(msg.payload=\"1\")? \"true\" : \"false\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "685fd2a3.20719c",
        "type": "change",
        "z": "1c07f858.b60d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "colour",
                "pt": "msg",
                "to": "(msg.payload=\"1\")? \"green\" : \"red\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "(msg.payload=\"1\")? \"true\" : \"false\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "fa2cf6a5.61cd38",
        "type": "change",
        "z": "1c07f858.b60d1",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "colour",
                "pt": "msg",
                "to": "(msg.payload=\"1\")? \"green\" : \"red\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "(msg.payload=\"1\")? \"true\" : \"false\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "6025943b.8854ec",
        "type": "debug",
        "z": "1c07f858.b60d1",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 380,
        "wires": []
    },
    {
        "id": "12b80aa4.f07165",
        "type": "ui_text_input",
        "z": "b7c719b.18888e8",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "da8ca63f.5e4b38",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "x": 980,
        "y": 380,
        "wires": [
            [
                "d370be61.7505c8"
            ]
        ]
    },
    {
        "id": "d370be61.7505c8",
        "type": "change",
        "z": "b7c719b.18888e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "message",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1155,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "147f4a1d.d2418e",
        "type": "ui_button",
        "z": "b7c719b.18888e8",
        "name": "",
        "group": "da8ca63f.5e4b38",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Send Message",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-exclamation-circle",
        "payload": "",
        "payloadType": "str",
        "topic": "ToDevice/Hint",
        "x": 960,
        "y": 420,
        "wires": [
            [
                "4f1ebfa3.20cd08",
                "fc4cef21.2c75d8"
            ]
        ]
    },
    {
        "id": "4f1ebfa3.20cd08",
        "type": "change",
        "z": "b7c719b.18888e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "message",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1159,
        "y": 421,
        "wires": [
            [
                "b3bf7eea.f49e98"
            ]
        ]
    },
    {
        "id": "2d7b8980.26362e",
        "type": "ui_template",
        "z": "ae55456b.f24e88",
        "group": "31fb9f8c.1b1b7",
        "name": "Dashboard Panel",
        "order": 1,
        "width": "6",
        "height": "6",
        "format": "<md-card-title>\n    <md-card-title-text>\n        <p class=\"md-headline\">{{msg.payload.name}}</p>\n    </md-card-title-text>\n    <span ng-class=\"msg.payload.state=='SOLVED' ? 'fa fa-unlock fa-2x' : 'fa fa-lock fa-2x'\"></span>\n</md-card-title>\n<md-card-content   style=\"overflow-y:hidden;\">\n    <div ng-style=\"{width:'100%',height:'8px','background-color':msg.payload.state=='SOLVED' ? 'green' : 'red'}\" ></div>\n    <p>\n        {{msg.payload.description?msg.payload.description:'Unknown'}}\n    </p>\n    <p>\n        Secret Code: {{msg.payload.secret}}\n    </p>    \n    <p>Last Guess: \n        <div style=\"text-align:center; font-size: 2em;\">\n            {{msg.payload.guess}}\n        </div>\n    </p>\n    <p>\n        Response:\n    </p>\n    <div style=\"text-align:center\">\n        <span ng-repeat=\"i in [].constructor(msg.payload.result[0]) track by $index\" style=\"font-size: 2em;\">⬛</span>\n        <span ng-repeat=\"i in [].constructor(msg.payload.result[1]) track by $index\" style=\"font-size: 2em;\">⬜</span>\n    </div>\n</md-card-content>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 810,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "6e4817aa.79fc7",
        "type": "json",
        "z": "ae55456b.f24e88",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 180,
        "wires": [
            [
                "7e069eeb.0b3588"
            ]
        ]
    },
    {
        "id": "7e069eeb.0b3588",
        "type": "function",
        "z": "ae55456b.f24e88",
        "name": "Parse JSON and update state",
        "func": "// Retrieve the ID of the prop used in this flow\nvar propid = flow.get(\"payload.id\");\n\n// Get the current stored value of this prop,\n// Or create a new entry if we didn't previously know about it\nvar prop = global.get(propid) || {};\n\n// Now loop over the incoming values and update the stored state\nvar count = 0;\nfor (var key in msg.payload) {\n  if (msg.payload.hasOwnProperty(key)) {\n    prop[key] = msg.payload[key];\n    count++;\n  }\n}\n\n// Save the global value again\nglobal.set(propid, prop);\n\n// Pass the updated status through the message flow\nmsg.payload = prop;\n\n// Update the dashboard editor\nnode.status({fill:\"green\", shape:\"dot\", text:count + \" values updated\"});\n\n// Pass the value along the flow\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 180,
        "wires": [
            [
                "2d7b8980.26362e",
                "c7a3410a.89aca"
            ]
        ]
    },
    {
        "id": "39b8a0de.e46e7",
        "type": "change",
        "z": "ae55456b.f24e88",
        "name": "Config",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "flow",
                "to": "{\"id\":\"7\",\"name\":\"Mastermind\",\"description\":\"Players must deduce the correct code\",\"turn\":0,\"secret\":[0,0,0,0],\"guess\":[1,1,1,1],\"result\":[0,0],\"state\":\"UNSOLVED\"}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 120,
        "wires": [
            [
                "6e4817aa.79fc7"
            ]
        ]
    },
    {
        "id": "d095ced2.d24c68",
        "type": "ui_button",
        "z": "ae55456b.f24e88",
        "name": "SOLVE",
        "group": "31fb9f8c.1b1b7",
        "order": 1,
        "width": "3",
        "height": "1",
        "passthru": false,
        "label": "Solve",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "fa-unlock",
        "payload": "{\"command\":\"SOLVE\"}",
        "payloadType": "json",
        "topic": "",
        "x": 700,
        "y": 340,
        "wires": [
            [
                "9ccffc58.dfd8e"
            ]
        ]
    },
    {
        "id": "84bae66b.0b1488",
        "type": "link in",
        "z": "ae55456b.f24e88",
        "name": "",
        "links": [
            "8a4dffa5.a7935"
        ],
        "x": 115,
        "y": 120,
        "wires": [
            [
                "39b8a0de.e46e7"
            ]
        ]
    },
    {
        "id": "4a1bdaeb.e71fe4",
        "type": "serial in",
        "z": "ae55456b.f24e88",
        "name": "",
        "serial": "7f6727ec.9d40c8",
        "x": 210,
        "y": 180,
        "wires": [
            [
                "6e4817aa.79fc7"
            ]
        ]
    },
    {
        "id": "9ccffc58.dfd8e",
        "type": "serial out",
        "z": "ae55456b.f24e88",
        "name": "",
        "serial": "7f6727ec.9d40c8",
        "x": 850,
        "y": 340,
        "wires": []
    },
    {
        "id": "c7a3410a.89aca",
        "type": "debug",
        "z": "ae55456b.f24e88",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 770,
        "y": 220,
        "wires": []
    }
]